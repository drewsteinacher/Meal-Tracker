(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    647305,      14090]
NotebookOptionsPosition[    642047,      13990]
NotebookOutlinePosition[    642395,      14005]
CellTagsIndexPosition[    642352,      14002]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Analysis of logged data", "Section",
 CellChangeTimes->{{3.734096678704437*^9, 3.734096685003066*^9}, {
  3.734110012917549*^9, 
  3.73411001602486*^9}},ExpressionUUID->"12da3c17-3b11-4c93-ad2d-\
322a71677a35"],

Cell[CellGroupData[{

Cell["Download all data", "Subsection",
 CellChangeTimes->{{3.734096492379806*^9, 
  3.7340964943039985`*^9}},ExpressionUUID->"627fd8b8-42c7-4e66-8cd8-\
c9cff5885e6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"historyBin", "=", 
   RowBox[{"Databin", "[", "\"\<ttOfD1G4\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.734097925555996*^9, 
  3.7340979355969963`*^9}},ExpressionUUID->"dbe7c7c5-7242-4639-ac92-\
1afa6a962c62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allData", "=", 
   RowBox[{"Get", "@", "historyBin"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.73409400101268*^9, 3.7340940105726357`*^9}, {
  3.734094260064583*^9, 3.7340942629628725`*^9}, {3.734094680248597*^9, 
  3.7340946921767893`*^9}, {3.7340979304459963`*^9, 
  3.7340979338469963`*^9}},ExpressionUUID->"f5c19d86-ad58-4eed-bb59-\
66991dc259d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "allData", "]"}]], "Input",
 CellChangeTimes->{{3.734096797287294*^9, 
  3.7340968118827534`*^9}},ExpressionUUID->"e239edc9-cf71-4ad8-a412-\
b550a9e787e9"],

Cell[BoxData["109"], "Output",
 CellChangeTimes->{{3.7340967990604715`*^9, 3.7340968123027954`*^9}, {
   3.7340979375779963`*^9, 3.734097945352996*^9}, 3.7341030476914415`*^9, 
   3.734104498246519*^9, 
   3.734108069310729*^9},ExpressionUUID->"ac327dbe-43c6-40b2-8b7e-\
bc1f00e73ced"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"allData", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "3"}], ";;"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.734096504893057*^9, 3.734096532542822*^9}, {
  3.7340968172092857`*^9, 
  3.734096819542519*^9}},ExpressionUUID->"b5b27e4d-6b98-403e-9bbc-\
008cad00eed3"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Data", "Timestamp", "UUID", "Size", "SourceInformation"}, {
            
            TypeSystem`Struct[{
             "Meal", "MealType", "TotalCalories", "Calcium", "Cholesterol", 
              "Iron", "Sodium", "TotalCarbohydrates", "TotalFat", 
              "TotalFiber", "TotalProtein", "TotalSaturatedFat", "VitaminC"}, {
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[
               Quantity[1, "LargeCalories"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]]}], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             Quantity[1, "Kilobytes"]], 
            
            TypeSystem`Struct[{
             "TimeRecorded", "TimeGiven", "Authenticated", "GeoLocation", 
              "SourceType", "SourceDetails"}, {
              TypeSystem`Atom[DateObject], 
              TypeSystem`Atom[DateObject], 
              TypeSystem`Atom[TypeSystem`Boolean], 
              TypeSystem`Atom[GeoPosition], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["Connected Wolfram Language"]], 
              TypeSystem`Struct[{"UserAgent"}, {
                TypeSystem`Atom[
                 TypeSystem`Enumeration["Wolfram HTTPClient 11.3"]]}]}]}], 3],
         "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Data"} -> 
           Association[{All, "Data", "Meal"} -> 1, {All, "Data", "MealType"} -> 
             1, {All, "Data", "TotalCalories"} -> 1, {All, "Data", "Calcium"} -> 
             1, {All, "Data", "Cholesterol"} -> 1, {All, "Data", "Iron"} -> 
             1, {All, "Data", "Sodium"} -> 
             1, {All, "Data", "TotalCarbohydrates"} -> 
             1, {All, "Data", "TotalFat"} -> 1, {All, "Data", "TotalFiber"} -> 
             1, {All, "Data", "TotalProtein"} -> 
             1, {All, "Data", "TotalSaturatedFat"} -> 
             1, {All, "Data", "VitaminC"} -> 1], {All, "Timestamp"} -> 
           1, {All, "UUID"} -> 1, {All, "Size"} -> 
           1, {All, "SourceInformation"} -> 
           Association[{All, "SourceInformation", "TimeRecorded"} -> 
             1, {All, "SourceInformation", "TimeGiven"} -> 
             1, {All, "SourceInformation", "Authenticated"} -> 
             1, {All, "SourceInformation", "GeoLocation"} -> 
             1, {All, "SourceInformation", "SourceType"} -> 
             1, {All, "SourceInformation", "SourceDetails"} -> 
             Association[{
                All, "SourceInformation", "SourceDetails", "UserAgent"} -> 
               1]]], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association["Data" -> TypeSystem`PackageScope`RowShape[
                Association[
                "Meal" -> TypeSystem`PackageScope`UnknownShape, "MealType" -> 
                 TypeSystem`PackageScope`AtomShape[57.60000000000001], 
                 "TotalCalories" -> TypeSystem`PackageScope`AtomShape[75], 
                 "Calcium" -> TypeSystem`PackageScope`AtomShape[75], 
                 "Cholesterol" -> TypeSystem`PackageScope`AtomShape[75], 
                 "Iron" -> TypeSystem`PackageScope`AtomShape[75], "Sodium" -> 
                 TypeSystem`PackageScope`AtomShape[75], "TotalCarbohydrates" -> 
                 TypeSystem`PackageScope`AtomShape[75], "TotalFat" -> 
                 TypeSystem`PackageScope`AtomShape[75], "TotalFiber" -> 
                 TypeSystem`PackageScope`AtomShape[75], "TotalProtein" -> 
                 TypeSystem`PackageScope`AtomShape[75], "TotalSaturatedFat" -> 
                 TypeSystem`PackageScope`AtomShape[75], "VitaminC" -> 
                 TypeSystem`PackageScope`AtomShape[75]]], "Timestamp" -> 
              TypeSystem`PackageScope`AtomShape[75], "UUID" -> 
              TypeSystem`PackageScope`AtomShape[384.00000000000006`], "Size" -> 
              TypeSystem`PackageScope`AtomShape[75], "SourceInformation" -> 
              TypeSystem`PackageScope`RowShape[
                Association[
                "TimeRecorded" -> TypeSystem`PackageScope`AtomShape[75], 
                 "TimeGiven" -> TypeSystem`PackageScope`AtomShape[75], 
                 "Authenticated" -> TypeSystem`PackageScope`AtomShape[36], 
                 "GeoLocation" -> TypeSystem`PackageScope`AtomShape[106], 
                 "SourceType" -> TypeSystem`PackageScope`AtomShape[234.], 
                 "SourceDetails" -> TypeSystem`PackageScope`RowShape[
                   Association[
                   "UserAgent" -> 
                    TypeSystem`PackageScope`AtomShape[207.]]]]]]]], 3, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1470748998], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Data", "Timestamp", "UUID", "Size", "SourceInformation"}, {
            
            TypeSystem`Struct[{
             "Meal", "MealType", "TotalCalories", "Calcium", "Cholesterol", 
              "Iron", "Sodium", "TotalCarbohydrates", "TotalFat", 
              "TotalFiber", "TotalProtein", "TotalSaturatedFat", "VitaminC"}, {
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Atom[String], 
              TypeSystem`Atom[
               Quantity[1, "LargeCalories"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Grams"]], 
              TypeSystem`Atom[
               Quantity[1, "Milligrams"]]}], 
            TypeSystem`Atom[DateObject], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             Quantity[1, "Kilobytes"]], 
            
            TypeSystem`Struct[{
             "TimeRecorded", "TimeGiven", "Authenticated", "GeoLocation", 
              "SourceType", "SourceDetails"}, {
              TypeSystem`Atom[DateObject], 
              TypeSystem`Atom[DateObject], 
              TypeSystem`Atom[TypeSystem`Boolean], 
              TypeSystem`Atom[GeoPosition], 
              TypeSystem`Atom[
               TypeSystem`Enumeration["Connected Wolfram Language"]], 
              TypeSystem`Struct[{"UserAgent"}, {
                TypeSystem`Atom[
                 TypeSystem`Enumeration["Wolfram HTTPClient 11.3"]]}]}]}], 3],
         "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1470748998]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Data\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Data\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Timestamp\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Timestamp"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Timestamp"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"UUID\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UUID\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "UUID"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "UUID"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Size\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Size\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Size"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Size"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SourceInformation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SourceInformation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "SourceInformation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "SourceInformation"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
               SpanFromLeft, SpanFromLeft, SpanFromLeft}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Meal\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Meal\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "Meal"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "Meal"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"MealType\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MealType\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "MealType"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "MealType"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalCalories\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalCalories\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "TotalCalories"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "TotalCalories"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Calcium\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Calcium\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "Calcium"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "Calcium"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Cholesterol\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Cholesterol\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "Cholesterol"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "Cholesterol"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Iron\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Iron\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "Iron"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "Iron"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Sodium\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sodium\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "Sodium"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "Sodium"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalCarbohydrates\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalCarbohydrates\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "TotalCarbohydrates"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "TotalCarbohydrates"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"TotalFat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalFat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "TotalFat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "TotalFat"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalFiber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalFiber\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "TotalFiber"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "TotalFiber"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalProtein\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalProtein\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "TotalProtein"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "TotalProtein"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalSaturatedFat\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TotalSaturatedFat\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "TotalSaturatedFat"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "TotalSaturatedFat"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"VitaminC\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"VitaminC\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "Data", "VitaminC"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[All, "Data", "VitaminC"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}],
                SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRecorded\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeRecorded\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "SourceInformation", "TimeRecorded"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[
                  All, "SourceInformation", "TimeRecorded"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeGiven\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"TimeGiven\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "SourceInformation", "TimeGiven"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[
                  All, "SourceInformation", "TimeGiven"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Authenticated\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Authenticated\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "SourceInformation", "Authenticated"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[
                  All, "SourceInformation", "Authenticated"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"GeoLocation\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"GeoLocation\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "SourceInformation", "GeoLocation"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[
                  All, "SourceInformation", "GeoLocation"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SourceType\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SourceType\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "SourceInformation", "SourceType"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[
                  All, "SourceInformation", "SourceType"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SourceDetails\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SourceDetails\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{All, "SourceInformation", "SourceDetails"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[
                  All, "SourceInformation", "SourceDetails"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UserAgent\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"UserAgent\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{
                    All, "SourceInformation", "SourceDetails", "UserAgent"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[
                  All, "SourceInformation", "SourceDetails", "UserAgent"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{
                    Entity["MyFood", "NabiscoRitzCrackers"], 
                    Entity["MyFood", "PeanutButter"]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    Entity["MyFood", "NabiscoRitzCrackers"], 
                    Entity["MyFood", "PeanutButter"]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{1, 
                    Key["Data"], 
                    Key["Meal"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["Meal"]]], "Mouse"]], 
               Pane[
                Annotation["Snack", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["MealType"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"290.`", "\"Cal\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["TotalCalories"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"20.`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["Calcium"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["Cholesterol"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.72`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["Iron"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"244.95999999999998`", "\"mg\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["Sodium"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"16.`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["TotalCarbohydrates"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"21.499200000000002`", "\"g\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["TotalFat"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2.`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["TotalFiber"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"9.`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["TotalProtein"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"4.`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["TotalSaturatedFat"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"0.`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Data"], 
                   Key["VitaminC"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Sun 29 Apr 2018 21:08:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["data750bd330-9497-4650-8929-0cf8bc78a590", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["UUID"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.408`", "\"kB\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["Size"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 30 Apr 2018 15:08:39\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["SourceInformation"], 
                   Key["TimeRecorded"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Sun 29 Apr 2018 21:08:38\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["SourceInformation"], 
                   Key["TimeGiven"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["SourceInformation"], 
                   Key["Authenticated"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"40.11\[Degree]N 88.24\[Degree]W\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["SourceInformation"], 
                   Key["GeoLocation"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Connected Wolfram Language", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["SourceInformation"], 
                   Key["SourceType"]]], "Mouse"], 
                ImageSize -> {{234., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Wolfram HTTPClient 11.3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[1, 
                   Key["SourceInformation"], 
                   Key["SourceDetails"], 
                   Key["UserAgent"]]], "Mouse"], 
                ImageSize -> {{207., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{
                    EntityInstance[
                    Entity["MyFood", "HawaiianPizza"], 
                    Quantity[
                    Rational[1, 2], "Servings"]], 
                    EntityInstance[
                    Entity["MyFood", "PizzaHutBreadsticks"], 
                    Quantity[1., "Servings"]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    EntityInstance[
                    Entity["MyFood", "HawaiianPizza"], 
                    Quantity[
                    Rational[1, 2], "Servings"]], 
                    EntityInstance[
                    Entity["MyFood", "PizzaHutBreadsticks"], 
                    Quantity[1., "Servings"]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{2, 
                    Key["Data"], 
                    Key["Meal"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["Meal"]]], "Mouse"]], 
               Pane[
                Annotation["Dinner", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["MealType"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"308.74`", "\"Cal\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["TotalCalories"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"89.16`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["Calcium"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"5.26`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["Cholesterol"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.4095`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["Iron"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"591.02`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["Sodium"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"41.5214`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["TotalCarbohydrates"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"11.2684`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["TotalFat"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2.082`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["TotalFiber"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"10.451`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["TotalProtein"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.35888`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["TotalSaturatedFat"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"9.375`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Data"], 
                   Key["VitaminC"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 27 Apr 2018 20:12:45\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["data24672139-c133-4e31-8802-d15789ad1b41", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["UUID"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.792`", "\"kB\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["Size"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 30 Apr 2018 15:12:45\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["SourceInformation"], 
                   Key["TimeRecorded"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Fri 27 Apr 2018 20:12:45\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["SourceInformation"], 
                   Key["TimeGiven"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["SourceInformation"], 
                   Key["Authenticated"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"40.11\[Degree]N 88.24\[Degree]W\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["SourceInformation"], 
                   Key["GeoLocation"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Connected Wolfram Language", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["SourceInformation"], 
                   Key["SourceType"]]], "Mouse"], 
                ImageSize -> {{234., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Wolfram HTTPClient 11.3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[2, 
                   Key["SourceInformation"], 
                   Key["SourceDetails"], 
                   Key["UserAgent"]]], "Mouse"], 
                ImageSize -> {{207., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{
                    EntityInstance[
                    Entity["MyFood", "HawaiianPizza"], 
                    Quantity[
                    Rational[1, 2], "Servings"]]}, ShowStringCharacters -> 
                    False], 
                    Style[
                    Style[{
                    EntityInstance[
                    Entity["MyFood", "HawaiianPizza"], 
                    Quantity[
                    Rational[1, 2], "Servings"]]}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1517436890][{3, 
                    Key["Data"], 
                    Key["Meal"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["Meal"]]], "Mouse"]], 
               Pane[
                Annotation["Dinner", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["MealType"]]], "Mouse"], 
                ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"161.25`", "\"Cal\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["TotalCalories"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"51.75`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["Calcium"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2.25`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["Cholesterol"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.41`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["Iron"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"359.25`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["Sodium"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"22.395`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["TotalCarbohydrates"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"5.73`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["TotalFat"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"1.05`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["TotalFiber"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"5.205`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["TotalProtein"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"2.0835`", "\"g\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["TotalSaturatedFat"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"9.375`", "\"mg\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Data"], 
                   Key["VitaminC"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Sat 28 Apr 2018 15:13:49\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Timestamp"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["datae774685e-33b6-4f04-862c-5d5bcd225f4e", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["UUID"]]], "Mouse"], 
                ImageSize -> {{384.00000000000006`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"3.472`", "\"kB\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["Size"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Mon 30 Apr 2018 15:13:49\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["SourceInformation"], 
                   Key["TimeRecorded"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"Sat 28 Apr 2018 15:13:49\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["SourceInformation"], 
                   Key["TimeGiven"]]], "Mouse"], 
                ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["True"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["SourceInformation"], 
                   Key["Authenticated"]]], "Mouse"], 
                ImageSize -> {{36, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "\"40.11\[Degree]N 88.24\[Degree]W\"", FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["SourceInformation"], 
                   Key["GeoLocation"]]], "Mouse"], 
                ImageSize -> {{106, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Connected Wolfram Language", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["SourceInformation"], 
                   Key["SourceType"]]], "Mouse"], 
                ImageSize -> {{234., Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Wolfram HTTPClient 11.3", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
                  GeneralUtilities`Slice[3, 
                   Key["SourceInformation"], 
                   Key["SourceDetails"], 
                   Key["UserAgent"]]], "Mouse"], 
                ImageSize -> {{207., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1517436890][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1517436890]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1517436890][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {3577., {99., 105.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.7341030508647585`*^9, 3.734104498520519*^9, 
  3.734108070343729*^9},ExpressionUUID->"25c3bb56-0aa7-403a-a87c-\
b725135eb87d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Meal Count Breakdown", "Subsection",
 CellChangeTimes->{{3.734096560304598*^9, 3.734096573085876*^9}, {
  3.7341032146311336`*^9, 
  3.734103217575428*^9}},ExpressionUUID->"47872461-7698-4909-a28a-\
1be1ab0a1f4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ReverseSort", "@", 
    RowBox[{"Counts", "[", 
     RowBox[{"allData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "\"\<Data\>\"", ",", "\"\<MealType\>\""}], "]"}], 
      "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.734103076389311*^9, 3.7341031158232536`*^9}, {
  3.7341031760522757`*^9, 
  3.734103196873358*^9}},ExpressionUUID->"9648d810-20ce-4025-bf38-\
c5dd189b7ee6"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   DynamicModuleBox[{DynamicChart`click$394492$394535 = False, 
    DynamicChart`click$394497$394535 = False, 
    DynamicChart`click$394502$394535 = False, 
    DynamicChart`click$394507$394535 = False}, {
     {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  DiskBox[{0, 0}, 1., {0.2593975585532857, 
                   3.141592653589793}]},
                 
                 ImageSizeCache->{{31.585786437626894`, 
                  323.4962813365716}, {-151.4142135623731, \
-1.5857864376268935`}}], {}},
               StatusArea[#, 50]& ,
               TagBoxNote->"50"],
              StyleBox["50", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[50, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394492$394535, 
                FEPrivate`Not[DynamicChart`click$394492$394535]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$394492$394535, {{{1., 0}, {
               0, 1.}}, {-0.02586709155044524, 0.19832017944405175`}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$394492$394535}]]}, 
         {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  DiskBox[{0, 0}, 1., {-1.3546316946671588`, 
                   0.2593975585532857}]},
                 
                 ImageSizeCache->{{178.5857864376269, 
                  328.4142135623731}, {-42.11946541152622, 
                  141.99312084469852`}}], {}},
               StatusArea[#, 28]& ,
               TagBoxNote->"28"],
              StyleBox["28", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[28, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394497$394535, 
                FEPrivate`Not[DynamicChart`click$394497$394535]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$394497$394535, {{{1., 0}, {0, 1.}}, {
              0.1707535257006777, -0.10413084778675337`}}, {{1, 0}, {0, 
             1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$394497$394535}]]}, 
         {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], EdgeForm[{
          GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  DiskBox[{0, 0}, 
                   1., {-2.6227975364832217`, -1.3546316946671588`}]},
                 
                 ImageSizeCache->{{50.92845333569582, 
                  212.94352347574437`}, {-4.414213562373078, 
                  145.4142135623731}}], {}},
               StatusArea[#, 22]& ,
               TagBoxNote->"22"],
              StyleBox["22", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[22, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394502$394535, 
                FEPrivate`Not[DynamicChart`click$394502$394535]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$394502$394535, {{{1., 0}, {
               0, 1.}}, {-0.08117175668434715, -0.1827871601529417}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$394502$394535}]]}, 
         {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  DiskBox[{0, 0}, 
                   1., {-3.141592653589793, -2.6227975364832217`}]},
                 
                 ImageSizeCache->{{31.585786437626894`, 
                  181.41421356237308`}, {-4.4142135623731065`, 
                  71.30183463277581}}], {}},
               StatusArea[#, 9]& ,
               TagBoxNote->"9"],
              StyleBox["9", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[9, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394507$394535, 
                FEPrivate`Not[DynamicChart`click$394507$394535]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$394507$394535, {{{1., 0}, {
               0, 1.}}, {-0.19330893574720887`, -0.051299662379800194`}}, {{1,
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {
             DynamicChart`click$394507$394535}]]}}}, {}}, {}}, {{{
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            
            TagBox[{{}, {{}, 
               InsetBox["\<\"Breakfast\"\>", \
{-0.08622363850148412, 0.6610672648135058}]}},
             StatusArea[#, 50]& ,
             TagBoxNote->"50"],
            StyleBox["50", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[50, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394492$394535, 
              FEPrivate`Not[DynamicChart`click$394492$394535]], 
            PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
            True}]], Dynamic[
         If[DynamicChart`click$394492$394535, {{{1., 0}, {
             0, 1.}}, {-0.02586709155044524, 0.19832017944405175`}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$394492$394535}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            
            TagBox[{{}, {{}, 
               InsetBox["\<\"Dinner\"\>", \
{0.569178419002259, -0.3471028259558445}]}},
             StatusArea[#, 28]& ,
             TagBoxNote->"28"],
            StyleBox["28", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[28, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394497$394535, 
              FEPrivate`Not[DynamicChart`click$394497$394535]], 
            PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
            True}]], Dynamic[
         If[DynamicChart`click$394497$394535, {{{1., 0}, {0, 1.}}, {
            0.1707535257006777, -0.10413084778675337`}}, {{1, 0}, {0, 1}}, {{
           1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$394497$394535}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {{}, 
               InsetBox["\<\"Snack\"\>", \
{-0.27057252228115714, -0.6092905338431389}]}},
             StatusArea[#, 22]& ,
             TagBoxNote->"22"],
            StyleBox["22", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[22, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394502$394535, 
              FEPrivate`Not[DynamicChart`click$394502$394535]], 
            PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
            True}]], Dynamic[
         If[DynamicChart`click$394502$394535, {{{1., 0}, {
             0, 1.}}, {-0.08117175668434715, -0.1827871601529417}}, {{1, 0}, {
           0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$394502$394535}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            
            TagBox[{{}, {{}, 
               InsetBox["\<\"Lunch\"\>", \
{-0.6443631191573628, -0.17099887459933397}]}},
             StatusArea[#, 9]& ,
             TagBoxNote->"9"],
            StyleBox["9", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[9, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$394507$394535, 
              FEPrivate`Not[DynamicChart`click$394507$394535]], 
            PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
            True}]], Dynamic[
         If[DynamicChart`click$394507$394535, {{{1., 0}, {
             0, 1.}}, {-0.19330893574720887`, -0.051299662379800194`}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {
           DynamicChart`click$394507$394535}]]}, {}}, {}}, {}, {}},
    DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
  ContentSelectable->False,
  DisplayFunction->Identity,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangePadding->Scaled[0.09166666666666669]]], "Output",
 CellChangeTimes->{{3.734103078200492*^9, 3.734103116208292*^9}, {
   3.7341031940070715`*^9, 3.7341031972383947`*^9}, 3.734104511117519*^9, 
   3.734108074375729*^9},ExpressionUUID->"225d36ea-ec06-43ce-a163-\
42b7467ee08b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complete Meal days", "Subsection",
 CellChangeTimes->{{3.734095023974966*^9, 
  3.73409502621819*^9}},ExpressionUUID->"bd12a3e3-2840-48d9-a57b-\
3b131f50ac89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"groupedByDate", "=", 
   RowBox[{"GroupBy", "[", 
    RowBox[{"allData", ",", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"First", "[", "#Timestamp", "]"}], ",", "3"}], "]"}], "]"}], 
      "&"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{"#Data", "&"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7340950306176305`*^9, 3.734095050159584*^9}, {
  3.734095090409609*^9, 3.73409509751932*^9}, {3.734095204405198*^9, 
  3.7340952339411983`*^9}},ExpressionUUID->"c906f86d-762e-47ac-9468-\
77b2d76129cf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"completeMealDays", "=", 
  RowBox[{"Keys", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"groupedByDate", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "All", ",", "\"\<MealType\>\""}], "]"}], "]"}], 
     ",", 
     RowBox[{"ContainsAll", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Breakfast\>\"", ",", 
        RowBox[{"(*", 
         RowBox[{"\"\<Lunch\>\"", ","}], "*)"}], "\"\<Dinner\>\""}], "}"}], 
      "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"completeMealDays", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.734095238013198*^9, 3.734095246032198*^9}, {
  3.7341046687475185`*^9, 3.7341047364835186`*^9}, {3.734104786644519*^9, 
  3.734104802519519*^9}},ExpressionUUID->"e99a5d54-701a-4928-9c21-\
7a0bf41f103f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Wed 4 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "4"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Thu 5 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "5"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Sun 8 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "8"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Sat 7 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "7"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Tue 10 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "10"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Fri 13 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "13"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Wed 18 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "18"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Sun 22 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "22"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Mon 23 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "23"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Tue 24 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "24"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Wed 25 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "25"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Thu 26 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "26"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Fri 27 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "27"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False], ",", 
   TemplateBox[{RowBox[{
       StyleBox[
       "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> Plain], 
       "\"Sat 28 Apr 2018\""}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"2018", ",", "4", ",", "28"}], "}"}], ",", "\"Day\"", ",", 
         "\"Gregorian\"", ",", 
         RowBox[{"-", "5.`"}]}], "]"}]},
    "DateObject",
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.734095239150198*^9, 3.734095246592198*^9}, 
   3.7341045133695188`*^9, {3.7341046730565186`*^9, 3.734104736857519*^9}, {
   3.734104791380519*^9, 3.734104802991519*^9}, 
   3.734108082317729*^9},ExpressionUUID->"6d6fea89-421c-4b11-88f2-\
6fbf0d4e4a21"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.734095239150198*^9, 3.734095246592198*^9}, 
   3.7341045133695188`*^9, {3.7341046730565186`*^9, 3.734104736857519*^9}, {
   3.734104791380519*^9, 3.734104802991519*^9}, 
   3.734108082350729*^9},ExpressionUUID->"c9824f59-3eef-41ff-9764-\
4ff1c9786211"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Keys", "[", "groupedByDate", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.73410629689397*^9, 
  3.7341062978910694`*^9}},ExpressionUUID->"1b3e8565-f70b-4e9a-bbb3-\
1b741df5cf2a"],

Cell[BoxData["33"], "Output",
 CellChangeTimes->{3.7341062982711077`*^9, 
  3.734108083282729*^9},ExpressionUUID->"4d57df26-1b8f-4240-a0ae-\
b3cc742d3589"]
}, Open  ]],

Cell["\<\
I have completely logged ~42% of the days that I have logged data.
In order to improve, I can set up reminders for myself via the cloud.\
\>", "Text",
 CellChangeTimes->{{3.734106342731553*^9, 3.734106385563836*^9}, {
  3.734108087125729*^9, 
  3.734108087460729*^9}},ExpressionUUID->"2d01ecdb-ba56-4a08-9539-\
a6942c854d0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"100", "*", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Length", "[", "completeMealDays", "]"}], "/", 
      RowBox[{"Length", "[", 
       RowBox[{"Keys", "[", "groupedByDate", "]"}], "]"}]}], "]"}]}], ",", 
   "\"\<Percent\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7341063016584463`*^9, 
  3.7341063319344735`*^9}},ExpressionUUID->"503c369c-75f5-431f-b78d-\
7d1a53abcb74"],

Cell[BoxData[
 TemplateBox[{"42.42424242424242`","\"%\"","percent","\"Percent\""},
  "QuantityPostfix"]], "Output",
 CellChangeTimes->{{3.734106303046585*^9, 3.7341063323525157`*^9}, 
   3.7341080847717295`*^9},ExpressionUUID->"e6584d29-db80-4b42-8a3f-\
6908a1b6704c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimelinePlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<Logged\>\"", "\[Rule]", 
      RowBox[{"Keys", "[", "groupedByDate", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Complete\>\"", "\[Rule]", "completeMealDays"}]}], 
    "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"DateObject", "[", 
       RowBox[{"{", 
        RowBox[{"2018", ",", "3", ",", "15"}], "}"}], "]"}], ",", "Today"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotLayout", "\[Rule]", "\"\<Packed\>\""}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"InfiniteLine", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"#", ",", "1"}], "}"}]}], "}"}], "&"}], "[", "Today", 
        "]"}], "]"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.734105366875519*^9, 3.7341054522405157`*^9}, {
  3.7341054961833024`*^9, 3.7341057219584823`*^9}, {3.7341057588141675`*^9, 
  3.734106000646348*^9}, {3.7341060411143947`*^9, 
  3.7341060674600286`*^9}},ExpressionUUID->"85939ca9-eb29-4a3b-8867-\
5e5bbd01503a"],

Cell[BoxData[
 GraphicsBox[{
   {AbsolutePointSize[0], Opacity[0], 
    PointBox[NCache[{{3.7300608*^9, 1}, {3.7340352*^9, Rational[5, 2]}}, {{
       3.7300608*^9, 1}, {3.7340352*^9, 2.5}}]], 
    PointBox[NCache[{{3.7300608*^9, Rational[-1, 2]}, {3.7340352*^9, 0}}, {{
       3.7300608*^9, -0.5}, {3.7340352*^9, 0}}]]}, InsetBox[
    GraphicsBox[
     StyleBox[{
       {GrayLevel[0.5], LineBox[{{0, 1}, {0, 3}}], 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, 
       StyleBox[{
         {GrayLevel[0.5], LineBox[{{0, 1}, Offset[{-6., 0.}, {0, 1}]}], 
          LineBox[{{0, 3}, Offset[{-6., 0.}, {0, 3}]}], {{}, {}, {}, {}, {
            LineBox[{{0, 2}, Offset[{-6., 0.}, {0, 2}]}], 
            LineBox[{{0, 2}, Offset[{-6., 0.}, {0, 2}]}]}}}, 
         StyleBox[
          {GrayLevel[0.5], 
           InsetBox["\<\"Logged\"\>", NCache[
            Offset[{-2, 0}, {0, Rational[3, 2]}], 
             Offset[{-2, 0}, {0, 1.5}]], {1, 0}, Automatic, {1, 0}], 
           InsetBox["\<\"Complete\"\>", NCache[
            Offset[{-2, 0}, {0, Rational[5, 2]}], 
             Offset[{-2, 0}, {0, 2.5}]], {1, 0}, Automatic, {1, 0}]}, 
          "GraphicsLabel",
          StripOnInput->False]}, "GraphicsTicks",
        StripOnInput->False]}, "GraphicsAxes",
      StripOnInput->False,
      Antialiasing->False],
     AspectRatio->Automatic,
     Axes->False,
     ImagePadding->{{All, All}, {0, 0}},
     PlotRange->All,
     PlotRangePadding->{None, None},
     Ticks->False], {Left, 0.5}, {Left, 0.5}, {Automatic, 1}], {
    {PointSize[0], Opacity[0], PointBox[{{3730492800, 1}, {3734035200, 2}}]}, {
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733862400, 2}, {3733862400, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733862400, 2}]}, 
                 PointBox[{3733862400, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{536., 
          546.2118570182356}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/28/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "28"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 28}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733776000, 2}, {3733776000, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733776000, 2}]}, 
                 PointBox[{3733776000, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{525., 
          535.0584132518852}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/27/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "27"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 27}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733689600, 2}, {3733689600, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733689600, 2}]}, 
                 PointBox[{3733689600, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{513., 
          523.9049694855348}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/26/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "26"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 26}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733603200, 2}, {3733603200, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733603200, 2}]}, 
                 PointBox[{3733603200, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{502., 
          512.7515257191844}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/25/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "25"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 25}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733516800, 2}, {3733516800, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733516800, 2}]}, 
                 PointBox[{3733516800, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{491., 
          501.59808195283404`}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/24/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "24"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 24}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733430400, 2}, {3733430400, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733430400, 2}]}, 
                 PointBox[{3733430400, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{480., 
          490.44463818648364`}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/23/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "23"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 23}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733344000, 2}, {3733344000, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733344000, 2}]}, 
                 PointBox[{3733344000, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{469., 
          479.29119442013325`}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/22/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "22"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 22}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732998400, 2}, {3732998400, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732998400, 2}]}, 
                 PointBox[{3732998400, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{424., 
          434.6774193547899}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/18/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "18"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 18}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732566400, 2}, {3732566400, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732566400, 2}]}, 
                 PointBox[{3732566400, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{368., 
          378.91020052303793`}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/13/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "13"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 13}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732307200, 2}, {3732307200, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732307200, 2}]}, 
                 PointBox[{3732307200, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{335., 
          345.44986922398675`}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/10/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "10"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 10}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732048000, 2}, {3732048000, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732048000, 2}]}, 
                 PointBox[{3732048000, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{301., 
          311.9895379249356}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/07/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "7"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 7}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732134400, 2}, {3732134400, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732134400, 2}]}, 
                 PointBox[{3732134400, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{313., 
          323.14298169128597`}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/08/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "8"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 8}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731875200, 2}, {3731875200, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731875200, 2}]}, 
                 PointBox[{3731875200, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{279., 
          289.682650392293}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/05/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "5"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 5}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[0.587148, 0.40736066666666665`, 0.09470066666666668], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731788800, 2}, {3731788800, 2}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731788800, 2}]}, 
                 PointBox[{3731788800, 2}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{268., 
          278.5292066259426}, {-31.007497820400513`, -21.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/04/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "4"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 4}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733948800, 1}, {3733948800, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733948800, 1}]}, 
                 PointBox[{3733948800, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{547., 557.365300784586}, {-8.852702702701325, 2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/29/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "29"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 29}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733862400, 1}, {3733862400, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733862400, 1}]}, 
                 PointBox[{3733862400, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{536., 546.2118570182356}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/28/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "28"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 28}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3734035200, 1}, {3734035200, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3734035200, 1}]}, 
                 PointBox[{3734035200, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{558., 568.5187445509364}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/30/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "30"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 30}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3730579200, 1}, {3730579200, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3730579200, 1}]}, 
                 PointBox[{3730579200, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{112., 122.38099389709532`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"03/21/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "3", ",", "21"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 3, 21}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731702400, 1}, {3731702400, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731702400, 1}]}, 
                 PointBox[{3731702400, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{257., 267.3757628595922}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/03/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "3"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 3}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733776000, 1}, {3733776000, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733776000, 1}]}, 
                 PointBox[{3733776000, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{525., 535.0584132518852}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/27/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "27"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 27}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733689600, 1}, {3733689600, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733689600, 1}]}, 
                 PointBox[{3733689600, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{513., 523.9049694855348}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/26/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "26"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 26}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733603200, 1}, {3733603200, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733603200, 1}]}, 
                 PointBox[{3733603200, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{502., 512.7515257191844}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/25/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "25"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 25}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733516800, 1}, {3733516800, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733516800, 1}]}, 
                 PointBox[{3733516800, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{491., 501.59808195283404`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/24/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "24"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 24}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733430400, 1}, {3733430400, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733430400, 1}]}, 
                 PointBox[{3733430400, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{480., 490.44463818648364`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/23/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "23"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 23}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733257600, 1}, {3733257600, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733257600, 1}]}, 
                 PointBox[{3733257600, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{458., 468.13775065384107`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/21/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "21"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 21}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733344000, 1}, {3733344000, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733344000, 1}]}, 
                 PointBox[{3733344000, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{469., 479.29119442013325`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/22/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "22"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 22}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733171200, 1}, {3733171200, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733171200, 1}]}, 
                 PointBox[{3733171200, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{446., 456.9843068874907}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/20/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "20"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 20}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732912000, 1}, {3732912000, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732912000, 1}]}, 
                 PointBox[{3732912000, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{413., 423.5239755884395}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/17/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "17"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 17}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732998400, 1}, {3732998400, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732998400, 1}]}, 
                 PointBox[{3732998400, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{424., 434.6774193547899}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/18/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "18"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 18}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3733084800, 1}, {3733084800, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3733084800, 1}]}, 
                 PointBox[{3733084800, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{435., 445.8308631211403}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/19/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "19"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 19}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732739200, 1}, {3732739200, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732739200, 1}]}, 
                 PointBox[{3732739200, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{391., 401.2170880557387}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/15/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "15"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 15}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732566400, 1}, {3732566400, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732566400, 1}]}, 
                 PointBox[{3732566400, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{368., 378.91020052303793`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/13/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "13"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 13}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732480000, 1}, {3732480000, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732480000, 1}]}, 
                 PointBox[{3732480000, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{357., 367.75675675668754`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/12/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "12"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 12}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732393600, 1}, {3732393600, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732393600, 1}]}, 
                 PointBox[{3732393600, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{346., 356.60331299033714`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/11/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "11"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 11}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732307200, 1}, {3732307200, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732307200, 1}]}, 
                 PointBox[{3732307200, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{335., 345.44986922398675`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/10/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "10"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 10}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731961600, 1}, {3731961600, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731961600, 1}]}, 
                 PointBox[{3731961600, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{290., 300.8360941585852}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/06/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "6"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 6}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732048000, 1}, {3732048000, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732048000, 1}]}, 
                 PointBox[{3732048000, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{301., 311.9895379249356}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/07/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "7"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 7}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732134400, 1}, {3732134400, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732134400, 1}]}, 
                 PointBox[{3732134400, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{313., 323.14298169128597`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/08/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "8"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 8}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3732220800, 1}, {3732220800, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3732220800, 1}]}, 
                 PointBox[{3732220800, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{324., 334.29642545763636`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/09/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "9"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 9}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731529600, 1}, {3731529600, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731529600, 1}]}, 
                 PointBox[{3731529600, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{235., 245.06887532689143`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/01/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "1"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 1}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731875200, 1}, {3731875200, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731875200, 1}]}, 
                 PointBox[{3731875200, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{279., 289.682650392293}, {-8.852702702701325, 2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/05/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "5"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 5}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], FrameBoxOptions -> {BoxFrame -> 2.5}], {}, 
           {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731788800, 1}, {3731788800, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731788800, 1}]}, 
                 PointBox[{3731788800, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{268., 278.5292066259426}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/04/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "4"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 4}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731616000, 1}, {3731616000, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731616000, 1}]}, 
                 PointBox[{3731616000, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{246., 256.2223190932418}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"04/02/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "4", ",", "2"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 4, 2}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3730492800, 1}, {3730492800, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3730492800, 1}]}, 
                 PointBox[{3730492800, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{101., 111.22755013074493`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"03/20/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "3", ",", "20"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 3, 20}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731356800, 1}, {3731356800, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731356800, 1}]}, 
                 PointBox[{3731356800, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{212., 222.76198779419065`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"03/30/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "3", ",", "30"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 3, 30}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731270400, 1}, {3731270400, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731270400, 1}]}, 
                 PointBox[{3731270400, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{201., 211.60854402784025`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"03/29/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "3", ",", "29"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 3, 29}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsolutePointSize[7], 
      AbsoluteThickness[1.6], Opacity[1], 
      TagBox[
       TooltipBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           Directive[
            EdgeForm[
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              Thickness[Large], 
              Opacity[0.2]]], 
            FaceForm[{
              RGBColor[
              0.24561133333333335`, 0.3378526666666667, 0.4731986666666667], 
              Opacity[1]}], 
            CapForm["Round"], 
            AbsoluteThickness[2.5], 
            AbsolutePointSize[10], 
            FrameBoxOptions -> {BoxFrame -> 2.5}], {}, {}], {{
            Directive[
             Opacity[0.2]], {
             CapForm["Round"], 
             LineBox[{{3731184000, 1}, {3731184000, 1}}]}}, {{}, {{{{}, {{{
                  AbsolutePointSize[10], 
                  GrayLevel[1], 
                  PointBox[{3731184000, 1}]}, 
                 PointBox[{3731184000, 1}]}}, {}, {}}, {}}, {{}}}}}},
         ImageSizeCache->{{190., 200.45510026148986`}, {-8.852702702701325, 
          2.}}],
        StyleBox[
         TagBox[
          GridBox[{{
             TemplateBox[{
               RowBox[{
                 StyleBox[
                 "\"Day: \"", FontColor -> GrayLevel[0.5], FontWeight -> 
                  Plain], "\"03/28/2018\""}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2018", ",", "3", ",", "28"}], "}"}], ",", 
                   "\"Day\"", ",", "\"Gregorian\"", ",", 
                   RowBox[{"-", "5.`"}], ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Month\"", ",", "\"/\"", ",", "\"Day\"", ",", "\"/\"", 
                    ",", "\"Year\""}], "}"}]}], "]"}]}, "DateObject", 
              Editable -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Right}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            
            DateObject[{2018, 3, 28}, "Day", "Gregorian", -5., {
             "Month", "/", "Day", "/", "Year"}]}}, Alignment -> Right], {}], 
        "Tooltip"]& ]}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}}, {}, {}},
  AspectRatio->NCache[
    Rational[1, 10], 0.1],
  Axes->{False, False},
  AxesOrigin->{0, 0},
  Epilog->{
    RGBColor[1, 0, 0], 
    TagBox[
     ConicHullRegionBox[{{3.7340352*^9, 0}, {3.7340352*^9, 1}}], 
     "InfiniteLine"]},
  Frame->{{None, None}, {True, None}},
  FrameTicks->
   FrontEndValueCache[{{None, None}, {
     Charting`getDateTicks[Automatic, {Automatic}, 
       (Map[DateList, {
         SlotSequence[1]}]& )[
        SlotSequence[1]], None, 7, {{0.01, 0}, {0.005, 0}}, Automatic]& , 
      Automatic}}, {{None, None}, {{{3.7298016*^9, 
        FormBox["\"Mar 12\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.7310112*^9, 
        FormBox["\"Mar 26\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.7322208*^9, 
        FormBox["\"Apr 09\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.7334304*^9, 
        FormBox["\"Apr 23\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.73464*^9, 
        FormBox["\"May 07\"", TraditionalForm], {0.006666666666666666, 0.}}, {
       3.7298016*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}, {3.7304064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}, {3.7310112*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}, {3.731616*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}, {3.7322208*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}, {3.7328256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}, {3.7334304*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}, {3.7340352*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.006666666666666666, 0.}}}, Automatic}}],
  GridLines->{None, None},
  ImagePadding->All,
  ImageSize->{600, Automatic},
  PlotRange->{{3.7300608*^9, 3.7340352*^9}, {0, All}},
  PlotRangePadding->{{
     Scaled[0.06], 
     Scaled[0.06]}, {None, 
     Scaled[0.05]}},
  Ticks->{{{3.7298016*^9, 
      FormBox["\"Mar 12\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7310112*^9, 
      FormBox["\"Mar 26\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7322208*^9, 
      FormBox["\"Apr 09\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7334304*^9, 
      FormBox["\"Apr 23\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.73464*^9, 
      FormBox["\"May 07\"", TraditionalForm], {0.006666666666666666, 0}}, {
     3.7298016*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7304064*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7310112*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.731616*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7322208*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7328256*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7334304*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}, {3.7340352*^9, 
      FormBox[
       TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
      0.006666666666666666, 0}}}, None}]], "Output",
 CellChangeTimes->{{3.7341053702785187`*^9, 3.734105452629594*^9}, {
   3.7341055155041656`*^9, 3.7341055937118044`*^9}, {3.73410563534813*^9, 
   3.734105669901039*^9}, 3.7341057089391804`*^9, {3.734105794824768*^9, 
   3.7341059483561196`*^9}, {3.73410600286357*^9, 3.7341060681400967`*^9}, 
   3.7341080911687293`*^9, 
   3.734108298933729*^9},ExpressionUUID->"ae13e40c-ffc5-4e00-923c-\
43a9d884e031"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"completeMealDayData", "=", 
   RowBox[{"KeyTake", "[", 
    RowBox[{"groupedByDate", ",", "completeMealDays"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.734104738222519*^9, 3.7341047634505186`*^9}, {
  3.7341048230945187`*^9, 
  3.734104823408519*^9}},ExpressionUUID->"54e81495-d549-4de4-9796-\
2c8c55d7b373"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Values", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"DeleteMissing", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "\"\<TotalCalories\>\""}], "]"}], "]"}], "]"}], 
       "]"}], "&"}], "/@", "completeMealDayData"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"Quantity", "[", 
     RowBox[{"200", ",", "\"\<LargeCalories\>\""}], "]"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7341048317645187`*^9, 3.734104983519519*^9}, {
  3.7341081068667293`*^9, 3.7341081152267294`*^9}, {3.7341100483940964`*^9, 
  3.7341100582630835`*^9}},ExpressionUUID->"3d025157-d94c-466f-83ea-\
8c68ae2f1c15"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.637], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.637], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1000., 0}, {1200., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{24.560000000000002`, 61.379999999999995`}, {
          27.05105833238177, 94.19057316933916}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1200., 0}, {1400., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{60.879999999999995`, 97.69999999999999}, {
          27.05105833238177, 94.19057316933916}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1400., 0}, {1600., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{97.19999999999999, 
          134.01999999999998`}, {-39.58845650457562, 94.19057316933916}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1600., 0}, {1800., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{133.51999999999998`, 
          170.33999999999997`}, {-106.22797134153299`, 94.19057316933916}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2000., 0}, {2200., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{206.16000000000003`, 242.98000000000002`}, {
          27.05105833238177, 94.19057316933916}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2200., 0}, {2400., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{242.48000000000002`, 279.3}, {-106.22797134153299`,
           94.19057316933916}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2400., 0}, {2600., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{278.8, 315.62}, {27.05105833238177, 
          94.19057316933916}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2600., 0}, {2800., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{315.12, 351.94}, {-39.58845650457562, 
          94.19057316933916}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{964., 0},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  PlotRange->{{1000., 2800.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.734104827795519*^9, {3.734104872821519*^9, 3.734104983966519*^9}, {
   3.734108100692729*^9, 3.7341081156357293`*^9}, {3.7341100505823154`*^9, 
   3.7341100585811152`*^9}},ExpressionUUID->"a4200ba0-9839-4d49-808c-\
fe740979dd6f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complete Nutrition Days (TotalCalories only?)", "Subsection",
 CellChangeTimes->{{3.734095308597198*^9, 
  3.7340953181731977`*^9}},ExpressionUUID->"64272c8c-c0e5-4c66-b049-\
bce1658a096c"],

Cell["# of days that I got enough of each mineral", "Text",
 CellChangeTimes->{{3.734105021237519*^9, 
  3.734105035680519*^9}},ExpressionUUID->"0368df97-e281-4853-82f1-\
a0bb6677021b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Date Histograms", "Subsection",
 CellChangeTimes->{{3.734094371570732*^9, 
  3.734094373602936*^9}},ExpressionUUID->"8771ef9c-8a81-4378-8b63-\
cebc97cae826"],

Cell[CellGroupData[{

Cell["All Meal types", "Subsubsection",
 CellChangeTimes->{{3.7340948068032513`*^9, 
  3.7340948095265236`*^9}},ExpressionUUID->"5cd26fab-78e3-4881-8b3a-\
f7b6c2fdab0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allTimes", "=", 
   RowBox[{"(*", 
    RowBox[{"TimeObject", "/@"}], "*)"}], 
   RowBox[{"allData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Timestamp\>\""}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7340942500005765`*^9, 3.734094328514427*^9}, {
  3.734095687383198*^9, 
  3.734095689840198*^9}},ExpressionUUID->"9076a049-8264-43a1-9bb1-\
180be18075e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateHistogram", "[", 
  RowBox[{
   RowBox[{"TimeObject", "/@", "allTimes"}], ",", "\"\<Hour\>\"", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Nutrition Logging Times\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TimeObject", "[", 
         RowBox[{"{", 
          RowBox[{"7", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"TimeObject", "[", 
         RowBox[{"{", 
          RowBox[{"23", ",", "59"}], "}"}], "]"}]}], "}"}], ",", 
      "Automatic"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734094340880664*^9, 3.734094358493425*^9}, {
  3.7340947191764894`*^9, 3.734094767475319*^9}, {3.734095673558198*^9, 
  3.7340956837461977`*^9}, {3.734095714025198*^9, 3.7340957143631983`*^9}, {
  3.734105207816519*^9, 
  3.734105253000519*^9}},ExpressionUUID->"902801fb-b5e6-4928-9396-\
feb27b8e6e5d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.567], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.567], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340352*^9, 0}, {3.7340388*^9, 2.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{-194.5490355938673, -162.55740911141038`}, {
          152.35351312229005`, 168.06754414254192`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.734064*^9, 0}, {3.7340676*^9, 5.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{57.38397626951337, 89.37560275197029}, {
          129.53246659191228`, 168.06754414254192`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340676*^9, 0}, {3.7340712*^9, 43.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{88.87560275197029, 
          120.8672292381525}, {-159.53412279287295`, 168.06754414254192`}}],
        StatusArea[#, 43]& ,
        TagBoxNote->"43"],
       StyleBox["43", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[43, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340712*^9, 0}, {3.7340748*^9, 2.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{120.3672292381525, 152.35885572060943`}, {
          152.35351312229005`, 168.06754414254192`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340748*^9, 0}, {3.7340784*^9, 1.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{151.85885572060943`, 183.85048220306635`}, {
          159.960528632416, 168.06754414254192`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.7340784*^9, 0}, {3.734082*^9, 2.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{183.35048220306635`, 215.34210868552327`}, {
          152.35351312229005`, 168.06754414254192`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.734082*^9, 0}, {3.7340856*^9, 6.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{214.84210868552327`, 246.8337351679802}, {
          121.92545108178635`, 168.06754414254192`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340856*^9, 0}, {3.7340892*^9, 3.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{246.3337351679802, 278.3253616504371}, {
          144.74649761216415`, 168.06754414254192`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340892*^9, 0}, {3.7340928*^9, 3.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{277.8253616504371, 309.81698813661933`}, {
          144.74649761216415`, 168.06754414254192`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340928*^9, 0}, {3.7340964*^9, 5.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{309.31698813661933`, 341.30861461907625`}, {
          129.53246659191228`, 168.06754414254192`}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7340964*^9, 0}, {3.7341*^9, 2.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{340.80861461907625`, 372.8002411015332}, {
          152.35351312229005`, 168.06754414254192`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7341*^9, 0}, {3.7341036*^9, 9.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{372.3002411015332, 404.2918675839901}, {
          99.10440455140858, 168.06754414254192`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7341036*^9, 0}, {3.7341072*^9, 11.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{403.7918675839901, 435.783494066447}, {
          83.89037353115673, 168.06754414254192`}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7341072*^9, 0}, {3.7341108*^9, 9.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{435.283494066447, 467.27512055262923`}, {
          99.10440455140858, 168.06754414254192`}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7341108*^9, 0}, {3.7341144*^9, 4.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{466.77512055262923`, 498.76674703508615`}, {
          137.13948210203822`, 168.06754414254192`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{3.7341144*^9, 0}, {3.734118*^9, 2.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{498.26674703508615`, 530.2583735175431}, {
          152.35351312229005`, 168.06754414254192`}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.7340591772*^9, 0},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->
   FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
       (Charting`getDateTicks[Automatic, {Automatic}, 
        (Map[DateList, {
          SlotSequence[1]}]& )[
         SlotSequence[1]], None, 6, {{0, 0.01}, {0, 0.01}}, Automatic]& )[
        SlotSequence[1]], {Identity, Identity}]& , Automatic}}, {{
     Automatic, Automatic}, {{{3.7340568*^9, 
        FormBox["\"06:00\"", TraditionalForm], {0., 0.006666666666666666}}, {
       3.7340676*^9, 
        FormBox["\"09:00\"", TraditionalForm], {0., 0.006666666666666666}}, {
       3.7340784*^9, 
        FormBox["\"12:00\"", TraditionalForm], {0., 0.006666666666666666}}, {
       3.7340892*^9, 
        FormBox["\"15:00\"", TraditionalForm], {0., 0.006666666666666666}}, {
       3.7341*^9, 
        FormBox["\"18:00\"", TraditionalForm], {0., 0.006666666666666666}}, {
       3.7341108*^9, 
        FormBox["\"21:00\"", TraditionalForm], {0., 0.006666666666666666}}, {
       3.7341216*^9, 
        FormBox["\"00:00\"", TraditionalForm], {0., 0.006666666666666666}}, {
       3.7340568*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340604*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.734064*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340676*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340712*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340748*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340784*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.734082*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340856*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340892*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340928*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7340964*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7341*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7341036*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7341072*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7341108*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7341144*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.734118*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}, {3.7341216*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0., 
        0.006666666666666666}}}, Automatic}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      ((Transpose[{#, 
        Table[
         Directive[
          GrayLevel[0.4, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], {
          Length[#]}]}]& )[
       Part[
        Select[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 6, {{0, 0.01}, {0, 0.01}}, Automatic]& )[
          SlotSequence[1]], And[
          FreeQ[#, 
           Alternatives["", 
            Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]]& )[
       SlotSequence[1]], {Identity, Identity}]& , Automatic}, {{{3.7340568*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7340676*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7340784*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7340892*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7341*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7341108*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7341216*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}}, Automatic}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  PlotLabel->FormBox["\"Nutrition Logging Times\"", TraditionalForm],
  PlotRange->{{3.7340604*^9, 3.73412154*^9}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Charting`FindScaledTicks[
     (Charting`getDateTicks[Automatic, {Automatic}, 
      (Map[DateList, {
        SlotSequence[1]}]& )[
       SlotSequence[1]], None, 6, {{0, 0.01}, {0, 0.01}}, Automatic]& )[
      SlotSequence[1]], {Identity, Identity}]& , Automatic}]], "Output",
 CellChangeTimes->{{3.7340943513207073`*^9, 3.7340943589634714`*^9}, {
   3.734094699233495*^9, 3.7340947681133823`*^9}, {3.7340956916651983`*^9, 
   3.734095721082198*^9}, 3.7341032286885395`*^9, 3.734104518138519*^9, {
   3.734105199293519*^9, 3.734105215385519*^9}, 3.734105253545519*^9, 
   3.734108127739729*^9},ExpressionUUID->"739f4cd7-a83e-44bd-a3b3-\
42f608830737"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Breakdown by meal type (individual plots, messier)", "Subsubsection",
 CellChangeTimes->{{3.734094816740245*^9, 3.7340948249490657`*^9}, {
  3.7341033419671683`*^9, 
  3.734103352933072*^9}},ExpressionUUID->"01e7a0b2-b8c8-44e8-aee1-\
666da8ff0141"],

Cell["\<\
Breakfast happens more or less the same time each day.
There is some noise that may require some curation to clean up... Likely due \
to bad parsing and/or bugs that have been fixed since then.\
\>", "Text",
 CellChangeTimes->{{3.7340948352120914`*^9, 3.734094844081979*^9}, {
  3.7340949354151115`*^9, 
  3.7340949622727966`*^9}},ExpressionUUID->"f021170a-4260-4e83-9363-\
140395b9b700"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DateHistogram", "[", 
      RowBox[{"#2", ",", 
       RowBox[{"Quantity", "[", 
        RowBox[{"1", ",", "\"\<Hours\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DateReduction", "\[Rule]", "\"\<Day\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PlotLabel", "\[Rule]", "#1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Merge", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"#Data", ",", "\"\<MealType\>\""}], "]"}], "\[Rule]", 
          "#Timestamp"}], "|>"}], "&"}], "/@", "allData"}], ",", 
      RowBox[{"Map", "[", "TimeObject", "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "Multicolumn"}]], "Input",
 CellChangeTimes->{{3.734094384307006*^9, 3.734094642187791*^9}, {
  3.734094780937665*^9, 3.734094790008572*^9}, {3.7340948517707477`*^9, 
  3.7340948725398245`*^9}, {3.734095730407198*^9, 3.7340957317861977`*^9}, {
  3.7340957773381977`*^9, 
  3.734095785043198*^9}},ExpressionUUID->"efece8d5-5b4d-42a7-b315-\
50b93b299a08"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {3600., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{15.617346938775512`, 29.852040816326532`}, {
              0.6616627933962036, 101.96269103504041`}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{43200., 0}, {46800., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{180.43367346938777`, 194.6683673469388}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{46800., 0}, {50400., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{194.1683673469388, 208.4030612244898}, {
              0.6616627933962036, 101.96269103504041`}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50400., 0}, {54000., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{207.9030612244898, 222.1377551020408}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{54000., 0}, {57600., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{221.6377551020408, 235.87244897959184`}, {
              0.6616627933962036, 101.96269103504041`}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{57600., 0}, {61200., 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{235.37244897959184`, 
              249.60714285714286`}, {-49.738851327425905`, 
              101.96269103504041`}}],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{61200., 0}, {64800., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{249.10714285714286`, 263.34183673469386`}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{72000., 0}, {75600., 4.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{290.3112244897959, 
              304.545918367347}, {-100.139365448248, 101.96269103504041`}}],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{75600., 0}, {79200., 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{304.045918367347, 
              318.28061224489795`}, {-49.738851327425905`, 
              101.96269103504041`}}],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{79200., 0}, {82800., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{317.78061224489795`, 332.01530612244903`}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1728., 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {{{0., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
           FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
           FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
           FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}},
      GridLines->{{{0., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {21600., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {43200., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {64800., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {86400., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}}, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->Medium,
      PlotLabel->FormBox["\"Snack\"", TraditionalForm],
      PlotRange->{{0, 86400}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{{{0., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
          FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
          FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
          FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.6649999999999999], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.6649999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{28800., 0}, {32400., 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{129.41326530612244`, 143.4030612244898}, {
              85.53542597142969, 100.17880947126557`}}],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{32400., 0}, {36000., 42.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{142.9030612244898, 
              156.89285714285714`}, {-98.32855952643672, 
              100.17880947126557`}}],
            StatusArea[#, 42]& ,
            TagBoxNote->"42"],
           StyleBox["42", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[42, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{36000., 0}, {39600., 2.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{156.39285714285714`, 170.3826530612245}, {
              90.24988713804164, 100.17880947126557`}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1728., 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {{{0., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
           FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
           FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
           FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}},
      GridLines->{{{0., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {21600., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {43200., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {64800., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {86400., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}}, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->Medium,
      PlotLabel->FormBox["\"Breakfast\"", TraditionalForm],
      PlotRange->{{0, 86400}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{{{0., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
          FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
          FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
          FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}]},
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.644], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.644], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{39600., 0}, {43200., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{166.69897959183675`, 180.93367346938777`}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{43200., 0}, {46800., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{180.43367346938777`, 194.6683673469388}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{46800., 0}, {50400., 4.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{194.1683673469388, 
              208.4030612244898}, {-100.139365448248, 101.96269103504041`}}],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50400., 0}, {54000., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{207.9030612244898, 222.1377551020408}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{57600., 0}, {61200., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{235.37244897959184`, 249.60714285714286`}, {
              51.062176914218306`, 101.96269103504041`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1728., 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {{{0., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
           FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
           FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
           FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}},
      GridLines->{{{0., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {21600., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {43200., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {64800., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {86400., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}}, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->Medium,
      PlotLabel->FormBox["\"Lunch\"", TraditionalForm],
      PlotRange->{{0, 86400}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{{{0., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
          FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
          FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
          FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}], 
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.651], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.651], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{57600., 0}, {61200., 1.}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{235.37244897959184`, 249.60714285714286`}, {
              79.06246253689723, 101.96269103504038`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{61200., 0}, {64800., 1.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{249.10714285714286`, 263.34183673469386`}, {
              79.06246253689723, 101.96269103504038`}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{64800., 0}, {68400., 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{262.84183673469386`, 
              277.0765306122449}, {-100.139365448248, 101.96269103504038`}}],
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{68400., 0}, {72000., 9.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{276.5765306122449, 
              290.8112244897959}, {-100.139365448248, 101.96269103504038`}}],
            StatusArea[#, 9]& ,
            TagBoxNote->"9"],
           StyleBox["9", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[9, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{72000., 0}, {75600., 3.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{290.3112244897959, 304.5459183673469}, {
              34.262005540610915`, 101.96269103504038`}}],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-1728., 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {{{0., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
           FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
           FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
           FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
           FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}},
      GridLines->{{{0., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {21600., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {43200., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {64800., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}, {86400., 
          Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]]}}, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImageSize->Medium,
      PlotLabel->FormBox["\"Dinner\"", TraditionalForm],
      PlotRange->{{0, 86400}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{{{0., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}, {21600., 
          FormBox["\"06:00\"", TraditionalForm], {0, 0.01}}, {43200., 
          FormBox["\"12:00\"", TraditionalForm], {0, 0.01}}, {64800., 
          FormBox["\"18:00\"", TraditionalForm], {0, 0.01}}, {86400., 
          FormBox["\"00:00\"", TraditionalForm], {0, 0.01}}}, Automatic}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.7340945944400167`*^9, 3.7340946427808504`*^9}, {
   3.734094772217793*^9, 3.7340947906466355`*^9}, {3.7340948568282533`*^9, 
   3.734094873046875*^9}, 3.734094965240093*^9, 3.734095695377198*^9, 
   3.734095732449198*^9, 3.734095788758198*^9, 3.734103231925863*^9, 
   3.734104526109519*^9},ExpressionUUID->"ea441a66-0aa2-42ea-b5a4-\
c433fbe30d7a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Breakdown by meal type (combined into one plot)", "Subsubsection",
 CellChangeTimes->{{3.734094816740245*^9, 3.7340948249490657`*^9}, {
  3.734095375921198*^9, 
  3.734095379826198*^9}},ExpressionUUID->"bb9c7077-542b-45e0-ba07-\
0d001f00b1af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateHistogram", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Merge", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"#Data", ",", "\"\<MealType\>\""}], "]"}], "\[Rule]", 
          RowBox[{"TimeObject", "@", "#Timestamp"}]}], "|>"}], "&"}], "/@", 
       "allData"}], ",", "Identity"}], "]"}], "//", 
    RowBox[{"KeyTake", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Breakfast\>\"", ",", "\"\<Lunch\>\"", ",", "\"\<Dinner\>\"", ",", 
       "\"\<Snack\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Quantity", "[", 
    RowBox[{"0.5", ",", "\"\<Hours\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"DateReduction", "\[Rule]", "\"\<Day\>\""}], ","}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ChartLegends", "\[Rule]", "Automatic"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLayout", "\[Rule]", "\"\<Stacked\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TimeObject", "[", 
         RowBox[{"{", 
          RowBox[{"7", ",", "0"}], "}"}], "]"}], ",", 
        RowBox[{"TimeObject", "[", 
         RowBox[{"{", 
          RowBox[{"23", ",", "59"}], "}"}], "]"}]}], "}"}], ",", 
      "Automatic"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Meal Type Histograms\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.734095355768198*^9, 3.7340953587051983`*^9}, {
  3.7340954061471977`*^9, 3.734095410335198*^9}, {3.7340954461791983`*^9, 
  3.7340955020991983`*^9}, {3.7340955472571983`*^9, 3.734095558813198*^9}, {
  3.734095737844198*^9, 3.734095747410198*^9}, {3.7340958028711977`*^9, 
  3.734095806583198*^9}, {3.734095847057198*^9, 3.734095904412198*^9}, {
  3.7341032592825985`*^9, 3.7341033178194513`*^9}, {3.7341033640529594`*^9, 
  3.7341034631480494`*^9}, {3.7341036401865187`*^9, 3.7341036821015186`*^9}, {
  3.7341037190185184`*^9, 3.7341037196525187`*^9}, {3.7341045475425186`*^9, 
  3.7341045575825186`*^9}},ExpressionUUID->"9704c6dd-4c19-4182-bbd6-\
537ef2e6c94b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.46199999999999997`]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.46199999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{{
             
             RectangleBox[{3.7340658*^9, 0.}, {3.7340676*^9, 5}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340676*^9, 0.}, {3.7340694*^9, 32}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340694*^9, 0.}, {3.7340712*^9, 11}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.734073*^9, 0.}, {3.7340748*^9, 2}, 
              "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.46199999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{{
             
             RectangleBox[{3.7340748*^9, 0}, {3.7340766*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340784*^9, 0}, {3.7340802*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.734082*^9, 0}, {3.7340838*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340838*^9, 0}, {3.7340856*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340856*^9, 0}, {3.7340874*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340874*^9, 0}, {3.7340892*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340928*^9, 0}, {3.7340946*^9, 1}, 
              "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.46199999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885]]], {{{
             
             RectangleBox[{3.7340892*^9, 0}, {3.734091*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340946*^9, 0}, {3.7340964*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340982*^9, 0}, {3.7341*^9, 1}, "RoundingRadius" -> 
              0]}}, {{
             
             RectangleBox[{3.7341*^9, 0}, {3.7341018*^9, 3}, "RoundingRadius" -> 
              0]}}, {{
             
             RectangleBox[{3.7341018*^9, 0}, {3.7341036*^9, 6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7341036*^9, 0}, {3.7341054*^9, 8}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7341054*^9, 0}, {3.7341072*^9, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7341072*^9, 0}, {3.734109*^9, 4}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.734109*^9, 0}, {3.7341108*^9, 1}, 
              "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.46199999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.922526, 0.385626, 0.209179]]], {{{
             
             RectangleBox[{3.7340352*^9, 0}, {3.734037*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340784*^9, 1}, {3.7340802*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.734082*^9, 2}, {3.7340838*^9, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340838*^9, 2}, {3.7340856*^9, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340856*^9, 1}, {3.7340874*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340892*^9, 1}, {3.734091*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.734091*^9, 0}, {3.7340928*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340928*^9, 1}, {3.7340946*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340946*^9, 1}, {3.7340964*^9, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7340964*^9, 0}, {3.7340982*^9, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7341072*^9, 4}, {3.734109*^9, 6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.734109*^9, 1}, {3.7341108*^9, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7341108*^9, 0}, {3.7341126*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7341126*^9, 0}, {3.7341144*^9, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.7341144*^9, 0}, {3.7341162*^9, 2}, 
              "RoundingRadius" -> 
              0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, \
{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.7340591772*^9, 0}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 6, {{0, 0.01}, {0, 0.01}}, Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Automatic}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 6, {{0, 0.01}, {0, 0.01}}, Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, PlotLabel -> 
     FormBox["\"Meal Type Histograms\"", TraditionalForm], 
     PlotRange -> {{3.7340604*^9, 3.73412154*^9}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {Charting`FindScaledTicks[
        (Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 6, {{0, 0.01}, {0, 0.01}}, Automatic]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Breakfast\"", "\"Lunch\"", "\"Dinner\"", "\"Snack\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.46199999999999997`]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.46199999999999997`]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.46199999999999997`]]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.46199999999999997`]]], 
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.97858`", ",", "0.678934`", ",", "0.157834`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.46199999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.734095351630198*^9, 3.734095359228198*^9}, 
   3.734095410766198*^9, {3.734095453307198*^9, 3.734095503130198*^9}, {
   3.734095552203198*^9, 3.7340955593711977`*^9}, {3.7340957398641977`*^9, 
   3.734095747959198*^9}, {3.734095793097198*^9, 3.734095806998198*^9}, {
   3.7340958524891977`*^9, 3.734095904992198*^9}, {3.7341032473244023`*^9, 
   3.734103260133683*^9}, {3.734103291293799*^9, 3.7341033185405235`*^9}, {
   3.7341033912932353`*^9, 3.734103463764988*^9}, {3.734103642216519*^9, 
   3.7341036826205187`*^9}, 3.734103720168519*^9, {3.734104520315519*^9, 
   3.734104558125519*^9}, 
   3.734108131595729*^9},ExpressionUUID->"1e453ead-b965-4040-a9c9-\
71fd7829fa8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Averaged Meal nutrition", "Subsection",
 CellChangeTimes->{{3.734108156959729*^9, 
  3.734108171421729*^9}},ExpressionUUID->"34ff79a8-c943-4af3-b922-\
b31155b2d3e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gridOfRadarPlots", "=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "aggregationFunction", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"KeyValueMap", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Column", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"StringTemplate", "[", "\"\<`` (``)\>\"", "]"}], "[", 
              RowBox[{"#1", ",", "aggregationFunction"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"NutritionRadarPlot", "[", 
              RowBox[{"#2", ",", 
               RowBox[{"\"\<NutritionTargets\>\"", "\[Rule]", 
                RowBox[{"<|", 
                 RowBox[{"\"\<TotalCalories\>\"", "\[Rule]", 
                  RowBox[{"Quantity", "[", 
                   RowBox[{"2000", ",", "\"\<LargeCalories\>\""}], "]"}]}], 
                 "|>"}]}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
          "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Merge", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"GroupBy", "[", 
               RowBox[{"#", ",", 
                RowBox[{"#MealType", "&"}], ",", 
                RowBox[{
                 RowBox[{"Total", "@", 
                  RowBox[{"DeleteMissing", "[", 
                   RowBox[{"KeyDrop", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Meal\>\"", ",", "\"\<MealType\>\""}], 
                    "}"}]}], "]"}], "]"}]}], "&"}]}], "]"}], "&"}], "/@", 
             RowBox[{"Values", "[", "completeMealDayData", "]"}]}], ",", 
            RowBox[{
             RowBox[{"Merge", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"aggregationFunction", "[", 
                 RowBox[{
                  RowBox[{"DeleteMissing", "[", "#", "]"}], "/.", 
                  RowBox[{"_Missing", "\[Rule]", "0"}]}], "]"}], "&"}]}], 
              "]"}], "&"}]}], "]"}], "//", 
          RowBox[{"Map", "[", 
           RowBox[{"KeyDrop", "[", "\"\<TotalFiber\>\"", "]"}], "]"}]}], "//", 
         RowBox[{"KeyDrop", "[", 
          RowBox[{"{", "\"\<Lunch\>\"", "}"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "/@", 
    RowBox[{"{", 
     RowBox[{"Median", ",", "Mean"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7341083606153355`*^9, 3.7341084791171846`*^9}, {
  3.734108900224291*^9, 3.7341089456258307`*^9}, {3.7341090845467215`*^9, 
  3.7341093730945735`*^9}, {3.7341094601992826`*^9, 3.734109612116473*^9}, {
  3.734109667857047*^9, 3.7341097765619164`*^9}, {3.7341098166019197`*^9, 
  3.734109821617421*^9}},ExpressionUUID->"1c8c81c4-15a9-467a-8aef-\
662ffc372e1b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"gridOfRadarPlots", "//", "Transpose"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.734109779753235*^9, 3.734109799889249*^9}, {
  3.734109851116371*^9, 
  3.7341098531755767`*^9}},ExpressionUUID->"a8a57b5a-d504-4539-8a91-\
c582f84fa8d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"Breakfast (Median)\"\>"},
        {
         RotationBox[
          GraphicsBox[{{}, {}, {
             {RGBColor[0.5, 0.5, 1.], Thickness[Large], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], {{{}, {
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{39.834218750000005`, 0}, {
                    37.755205093490055`, 27.43076215398514}, {0, 0}}]}, 
                    
                    LineBox[{{{39.834218750000005`, 0}, {37.755205093490055`, 
                    27.43076215398514}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    176.41421356237308`}, {-60.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484279, 
                    FEPrivate`Not[DynamicChart`click$484279]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484279, {{{1., 0}, {0, 1.}}, {
                    8.876781100492448, 2.8842410186980096`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484279}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{37.755205093490055`, 27.43076215398514}, {
                    15.772742421221277`, 48.543509685898464`}, {0, 0}}]}, 
                    
                    LineBox[{{{37.755205093490055`, 27.43076215398514}, {
                    15.772742421221277`, 48.543509685898464`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    173.4142135623731}, {-83.41421356237312, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484283, 
                    FEPrivate`Not[DynamicChart`click$484283]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484283, {{{1., 0}, {0, 1.}}, {
                    6.0003077838189975`, 8.258715150910923}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484283}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{15.772742421221277`, 
                    48.543509685898464`}, {-3.8241711434439694`, 
                    11.769588571518163`}, {0, 0}}]}, 
                    
                    LineBox[{{{15.772742421221277`, 
                    48.543509685898464`}, {-3.8241711434439694`, 
                    11.769588571518163`}}}]}},
                    ImageSizeCache->{{125.5857864376269, 
                    150.4142135623731}, {-83.41421356237312, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484287, 
                    FEPrivate`Not[DynamicChart`click$484287]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484287, {{{1., 0}, {0, 1.}}, {
                    1.5155344319114928`*^-16, 2.475055555555556}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484287}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-3.8241711434439694`, 
                    11.769588571518163`}, {-17.92849077617748, 
                    13.025811011844786`}, {0, 0}}]}, 
                    
                    LineBox[{{{-3.8241711434439694`, 
                    11.769588571518163`}, {-17.92849077617748, 
                    13.025811011844786`}}}]}},
                    
                    ImageSizeCache->{{110.5857864376269, 
                    133.4142135623731}, {-45.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484291, 
                    FEPrivate`Not[DynamicChart`click$484291]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484291, {{{1., 0}, {
                    0, 1.}}, {-2.6051622023689562`, 3.5856981552354967`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484291}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-17.92849077617748, 
                    13.025811011844786`}, {-43.4237, 
                    5.317869521213492*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{-17.92849077617748, 
                    13.025811011844786`}, {-43.4237, 
                    5.317869521213492*^-15}}}]}},
                    
                    ImageSizeCache->{{82.5857864376269, 
                    132.4142135623731}, {-45.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484295, 
                    FEPrivate`Not[DynamicChart`click$484295]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484295, {{{1., 0}, {
                    0, 1.}}, {-8.259678569329171, 2.6837322517278817`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484295}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    PolygonBox[{{-43.4237, 
                    5.317869521213492*^-15}, {-17.568239657387412`, \
-12.764073253282293`}, {0, 0}}]}, 
                    
                    LineBox[{{{-43.4237, 
                    5.317869521213492*^-15}, {-17.568239657387412`, \
-12.764073253282293`}}}]}},
                    
                    ImageSizeCache->{{82.5857864376269, 
                    132.4142135623731}, {-31.414213562373106`, \
-14.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484299, 
                    FEPrivate`Not[DynamicChart`click$484299]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484299, {{{1., 0}, {
                    0, 1.}}, {-4.130540871740838, -1.3420940853236365`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484299}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-17.568239657387412`, -12.764073253282293`}, \
{-21.161354549507855`, -65.12795252134894}, {0, 0}}]}, 
                    
                    LineBox[{{{-17.568239657387412`, -12.764073253282293`}, \
{-21.161354549507855`, -65.12795252134894}}}]}},
                    
                    ImageSizeCache->{{106.5857864376269, 
                    132.4142135623731}, {-31.414213562373106`, 
                    42.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484303, 
                    FEPrivate`Not[DynamicChart`click$484303]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484303, {{{1., 0}, {
                    0, 1.}}, {-8.050257655176614, -11.080229091719751`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484303}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-21.161354549507855`, -65.12795252134894}, {
                    10.446164986347902`, -32.14999000509952}, {0, 0}}]}, 
                    
                    LineBox[{{{-21.161354549507855`, -65.12795252134894}, {
                    10.446164986347902`, -32.14999000509952}}}]}},
                    
                    ImageSizeCache->{{106.5857864376269, 
                    144.4142135623731}, {-31.414213562373106`, 
                    42.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484307, 
                    FEPrivate`Not[DynamicChart`click$484307]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484307, {{{1., 0}, {
                    0, 1.}}, {-1.2419571816533009`*^-15, \
-6.7608999999999995`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484307}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{10.446164986347902`, -32.14999000509952}, {
                    102.35247859751524`, -74.36342854785336}, {0, 0}}]}, 
                    
                    LineBox[{{{10.446164986347902`, -32.14999000509952}, {
                    102.35247859751524`, -74.36342854785336}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    244.41421356237308`}, {-31.414213562373106`, 
                    52.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484311, 
                    FEPrivate`Not[DynamicChart`click$484311]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484311, {{{1., 0}, {0, 1.}}, {
                    14.87268570957066, -20.470495719503056`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484311}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{102.35247859751524`, -74.36342854785336}, {
                    39.834218750000005`, -9.756569697744598*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{102.35247859751524`, -74.36342854785336}, {
                    39.834218750000005`, -9.756569697744598*^-15}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    243.4142135623731}, {-31.414213562373106`, 
                    52.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484315, 
                    FEPrivate`Not[DynamicChart`click$484315]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484315, {{{1., 0}, {0, 1.}}, {
                    7.576918662742819, -2.461890110279837}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$484315}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484279, 
                    FEPrivate`Not[DynamicChart`click$484279]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484279, {{{1., 0}, {0, 1.}}, {
                    8.876781100492448, 2.8842410186980096`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484279}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484283, 
                    FEPrivate`Not[DynamicChart`click$484283]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484283, {{{1., 0}, {0, 1.}}, {
                    6.0003077838189975`, 8.258715150910923}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484283}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484287, 
                    FEPrivate`Not[DynamicChart`click$484287]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484287, {{{1., 0}, {0, 1.}}, {
                    1.5155344319114928`*^-16, 2.475055555555556}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484287}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484291, 
                    FEPrivate`Not[DynamicChart`click$484291]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484291, {{{1., 0}, {
                    0, 1.}}, {-2.6051622023689562`, 3.5856981552354967`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484291}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484295, 
                    FEPrivate`Not[DynamicChart`click$484295]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484295, {{{1., 0}, {
                    0, 1.}}, {-8.259678569329171, 2.6837322517278817`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484295}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484299, 
                    FEPrivate`Not[DynamicChart`click$484299]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484299, {{{1., 0}, {
                    0, 1.}}, {-4.130540871740838, -1.3420940853236365`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484299}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484303, 
                    FEPrivate`Not[DynamicChart`click$484303]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484303, {{{1., 0}, {
                    0, 1.}}, {-8.050257655176614, -11.080229091719751`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484303}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484307, 
                    FEPrivate`Not[DynamicChart`click$484307]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484307, {{{1., 0}, {
                    0, 1.}}, {-1.2419571816533009`*^-15, \
-6.7608999999999995`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484307}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484311, 
                    FEPrivate`Not[DynamicChart`click$484311]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484311, {{{1., 0}, {0, 1.}}, {
                    14.87268570957066, -20.470495719503056`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484311}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484315, 
                    FEPrivate`Not[DynamicChart`click$484315]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484315, {{{1., 0}, {0, 1.}}, {
                    7.576918662742819, -2.461890110279837}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$484315}]]}, {}}, {}}, {}, {}}, {{
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {80.90169943749474, 58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {30.901699437494745`, 95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-30.901699437494745`, 
                95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-80.90169943749474, 
                58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-80.90169943749474, -58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                80.90169943749474, -58.778525229247315`}}]}}, {
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 0, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 25, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 50, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 75, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 100, {0., 6.283185307179586}]}}}, {{{
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749474, 58.778525229247315`}], 
                  Scaled[{0.004854101966249685, 0.003526711513754839}, {
                   80.90169943749474, 58.778525229247315`}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494745`, 95.10565162951535}], 
                  Scaled[{0.0018541019662496848`, 0.005706339097770921}, {
                   30.901699437494745`, 95.10565162951535}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494734`, 95.10565162951536}], 
                  Scaled[{-0.0018541019662496841`, 
                   0.005706339097770922}, {-30.901699437494734`, 
                   95.10565162951536}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749473, 58.77852522924732}], 
                  Scaled[{-0.004854101966249684, 
                   0.0035267115137548395`}, {-80.90169943749473, 
                   58.77852522924732}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-100., 1.2246467991473532`*^-14}], 
                  Scaled[{-0.006, 7.347880794884119*^-19}, {-100., 
                   1.2246467991473532`*^-14}]}], {{{0, 1}, {-1, 0}}, Center}],
                GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749474, -58.7785252292473}], 
                  Scaled[{-0.004854101966249685, -0.0035267115137548382`}, \
{-80.90169943749474, -58.7785252292473}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494756`, -95.10565162951535}],
                   Scaled[{-0.0018541019662496854`, -0.005706339097770921}, \
{-30.901699437494756`, -95.10565162951535}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494724`, -95.10565162951536}], 
                  Scaled[{0.0018541019662496835`, -0.005706339097770922}, {
                   30.901699437494724`, -95.10565162951536}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749473, -58.778525229247336`}], 
                  Scaled[{0.004854101966249684, -0.0035267115137548404`}, {
                   80.90169943749473, -58.778525229247336`}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                  Scaled[{0.006, -1.4695761589768239`*^-18}, {
                   100., -2.4492935982947064`*^-14}]}], {{{0, 1}, {-1, 0}}, 
                 Center}]}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {InsetBox[
                RotationBox[
                 StyleBox["\<\"Calcium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.47213595499958, 4.702282018339785}, \
{80.90169943749474, 58.778525229247315}], {-0.8090169943749475, -0.5877852522924731},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Cholesterol\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.4721359549995796, 7.608452130361228}, \
{30.901699437494745, 95.10565162951535}], {-0.30901699437494745, -0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Iron\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995787, 7.608452130361229}, \
{-30.901699437494734, 95.10565162951536}], {0.30901699437494734, -0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Sodium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.472135954999579, 4.702282018339786}, \
{-80.90169943749473, 58.77852522924732}], {0.8090169943749473, -0.5877852522924732},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Carbohydrates\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], Offset[{-8., 9.797174393178826*^-16},
                 {-100., 1.2246467991473532*^-14}], {1., -1.2246467991473532*^-16},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.47213595499958, -4.702282018339784}, \
{-80.90169943749474, -58.7785252292473}], {0.8090169943749475, 0.587785252292473},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Protein\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995805, -7.608452130361228}, \
{-30.901699437494756, -95.10565162951535}], {0.30901699437494756, 0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Saturated Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.472135954999578, -7.608452130361229}, \
{30.901699437494724, -95.10565162951536}], {-0.30901699437494723, 0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Vitamin C\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.472135954999579, -4.702282018339787}, \
{80.90169943749473, -58.778525229247336}], {-0.8090169943749473, 0.5877852522924734},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Calories\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{8., -1.959434878635765*^-15}, \
{100., -2.4492935982947064*^-14}], {-1., 2.4492935982947064*^-16},
                Background->Automatic]}, 
              CircleBox[{0, 0}, 100., {0., 6.283185307179586}]}, {
              {GrayLevel[0.6], 
               StyleBox[{},
                Antialiasing->False]}, {}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {}}}},
           ContentSelectable->False,
           DisplayFunction->Identity,
           GridLinesStyle->Dashing[{Small, Small}],
           ImageSize->Medium,
           PlotRange->{{All, All}, {All, All}},
           PlotRangePadding->Scaled[0.05]],
          BoxRotation->1.5707963267948966`]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Breakfast (Mean)\"\>"},
        {
         RotationBox[
          GraphicsBox[{{}, {}, {
             {RGBColor[0.5, 0.5, 1.], Thickness[Large], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], {{{}, {
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{44.43326056877751, 0}, {37.9999168607623, 
                    27.608555660011778`}, {0, 0}}]}, 
                    
                    LineBox[{{{44.43326056877751, 0}, {37.9999168607623, 
                    27.608555660011778`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    180.41421356237308`}, {-60.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486138, 
                    FEPrivate`Not[DynamicChart`click$486138]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486138, {{{1., 0}, {0, 1.}}, {
                    8.934316287638469, 2.9029353342281983`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486138}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{37.9999168607623, 27.608555660011778`}, {
                    16.589883536265024`, 51.05841144321763}, {0, 0}}]}, 
                    
                    LineBox[{{{37.9999168607623, 27.608555660011778`}, {
                    16.589883536265024`, 51.05841144321763}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    174.41421356237308`}, {-86.41421356237312, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486142, 
                    FEPrivate`Not[DynamicChart`click$486142]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486142, {{{1., 0}, {0, 1.}}, {
                    6.311166736697015, 8.686575793468824}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486142}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{16.589883536265024`, 
                    51.05841144321763}, {-5.421852046591781, 
                    16.686744784795472`}, {0, 0}}]}, 
                    
                    LineBox[{{{16.589883536265024`, 
                    51.05841144321763}, {-5.421852046591781, 
                    16.686744784795472`}}}]}},
                    
                    ImageSizeCache->{{123.5857864376269, 
                    150.4142135623731}, {-86.41421356237312, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486146, 
                    FEPrivate`Not[DynamicChart`click$486146]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486146, {{{1., 0}, {0, 1.}}, {
                    2.148701810960159*^-16, 3.509096357343471}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486146}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-5.421852046591781, 
                    16.686744784795472`}, {-19.90560278554443, 
                    14.462266969280007`}, {0, 0}}]}, 
                    
                    LineBox[{{{-5.421852046591781, 
                    16.686744784795472`}, {-19.90560278554443, 
                    14.462266969280007`}}}]}},
                    
                    ImageSizeCache->{{108.5857864376269, 
                    133.4142135623731}, {-49.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486150, 
                    FEPrivate`Not[DynamicChart`click$486150]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486150, {{{1., 0}, {
                    0, 1.}}, {-2.8924533938560004`, 3.9811205571088863`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486150}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-19.90560278554443, 
                    14.462266969280007`}, {-50.435668374484855`, 
                    6.176587983767027*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{-19.90560278554443, 
                    14.462266969280007`}, {-50.435668374484855`, 
                    6.176587983767027*^-15}}}]}},
                    
                    ImageSizeCache->{{75.5857864376269, 
                    133.4142135623731}, {-46.41421356237311, \
-27.585786437626894`}}],
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486154, 
                    FEPrivate`Not[DynamicChart`click$486154]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486154, {{{1., 0}, {
                    0, 1.}}, {-9.593434212251044, 3.117095730074981}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486154}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-50.435668374484855`, 
                    6.176587983767027*^-15}, {-24.737298926426146`, \
-17.972699698029963`}, {0, 0}}]}, 
                    
                    LineBox[{{{-50.435668374484855`, 
                    6.176587983767027*^-15}, {-24.737298926426146`, \
-17.972699698029963`}}}]}},
                    
                    ImageSizeCache->{{75.5857864376269, 
                    133.4142135623731}, {-31.414213562373106`, \
-8.585786437626894}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486158, 
                    FEPrivate`Not[DynamicChart`click$486158]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486158, {{{1., 0}, {
                    0, 1.}}, {-5.816087796201489, -1.8897614800057003`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486158}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-24.737298926426146`, -17.972699698029963`}, \
{-19.798021226769517`, -60.93204399827472}, {0, 0}}]}, 
                    
                    LineBox[{{{-24.737298926426146`, -17.972699698029963`}, \
{-19.798021226769517`, -60.93204399827472}}}]}},
                    
                    ImageSizeCache->{{103.5857864376269, 
                    133.4142135623731}, {-31.414213562373106`, 
                    37.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486162, 
                    FEPrivate`Not[DynamicChart`click$486162]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486162, {{{1., 0}, {
                    0, 1.}}, {-7.531614838987565, -10.36637849633489}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486162}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-19.798021226769517`, -60.93204399827472}, {
                    12.708493555863177`, -39.11272139917792}, {0, 0}}]}, 
                    LineBox[{{{-19.798021226769517`, -60.93204399827472}, {
                    12.708493555863177`, -39.11272139917792}}}]}},
                    
                    ImageSizeCache->{{108.5857864376269, 
                    147.4142135623731}, {-31.414213562373106`, 
                    37.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486166, 
                    FEPrivate`Not[DynamicChart`click$486166]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486166, {{{1., 0}, {
                    0, 1.}}, {-1.510928159791302*^-15, -8.225109807678257}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486166}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{12.708493555863177`, -39.11272139917792}, {
                    74.29243827585186, -53.97661591661967}, {0, 0}}]}, 
                    
                    LineBox[{{{12.708493555863177`, -39.11272139917792}, {
                    74.29243827585186, -53.97661591661967}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    213.41421356237308`}, {-31.414213562373106`, 
                    30.414213562373106`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486170, 
                    FEPrivate`Not[DynamicChart`click$486170]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486170, {{{1., 0}, {0, 1.}}, {
                    10.795323183323926`, -14.858487655170377`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486170}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{74.29243827585186, -53.97661591661967}, {
                    44.43326056877751, -1.0883010066246736`*^-14}, {0, 0}}]}, 
                    
                    LineBox[{{{74.29243827585186, -53.97661591661967}, {
                    44.43326056877751, -1.0883010066246736`*^-14}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    213.41421356237308`}, {-31.414213562373106`, 
                    30.414213562373106`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486174, 
                    FEPrivate`Not[DynamicChart`click$486174]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486174, {{{1., 0}, {0, 1.}}, {
                    8.45170840083527, -2.746126526248501}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$486174}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486138, 
                    FEPrivate`Not[DynamicChart`click$486138]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486138, {{{1., 0}, {0, 1.}}, {
                    8.934316287638469, 2.9029353342281983`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486138}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486142, 
                    FEPrivate`Not[DynamicChart`click$486142]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486142, {{{1., 0}, {0, 1.}}, {
                    6.311166736697015, 8.686575793468824}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486142}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486146, 
                    FEPrivate`Not[DynamicChart`click$486146]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486146, {{{1., 0}, {0, 1.}}, {
                    2.148701810960159*^-16, 3.509096357343471}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486146}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486150, 
                    FEPrivate`Not[DynamicChart`click$486150]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486150, {{{1., 0}, {
                    0, 1.}}, {-2.8924533938560004`, 3.9811205571088863`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486150}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486154, 
                    FEPrivate`Not[DynamicChart`click$486154]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486154, {{{1., 0}, {
                    0, 1.}}, {-9.593434212251044, 3.117095730074981}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486154}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486158, 
                    FEPrivate`Not[DynamicChart`click$486158]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486158, {{{1., 0}, {
                    0, 1.}}, {-5.816087796201489, -1.8897614800057003`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486158}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486162, 
                    FEPrivate`Not[DynamicChart`click$486162]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486162, {{{1., 0}, {
                    0, 1.}}, {-7.531614838987565, -10.36637849633489}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486162}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486166, 
                    FEPrivate`Not[DynamicChart`click$486166]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486166, {{{1., 0}, {
                    0, 1.}}, {-1.510928159791302*^-15, -8.225109807678257}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486166}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486170, 
                    FEPrivate`Not[DynamicChart`click$486170]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486170, {{{1., 0}, {0, 1.}}, {
                    10.795323183323926`, -14.858487655170377`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486170}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486174, 
                    FEPrivate`Not[DynamicChart`click$486174]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486174, {{{1., 0}, {0, 1.}}, {
                    8.45170840083527, -2.746126526248501}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$486174}]]}, {}}, {}}, {}, {}}, {{
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {80.90169943749474, 58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {30.901699437494745`, 95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-30.901699437494745`, 
                95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-80.90169943749474, 
                58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-80.90169943749474, -58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                80.90169943749474, -58.778525229247315`}}]}}, {
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 0, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 25, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 50, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 75, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 100, {0., 6.283185307179586}]}}}, {{{
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749474, 58.778525229247315`}], 
                  Scaled[{0.004854101966249685, 0.003526711513754839}, {
                   80.90169943749474, 58.778525229247315`}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494745`, 95.10565162951535}], 
                  Scaled[{0.0018541019662496848`, 0.005706339097770921}, {
                   30.901699437494745`, 95.10565162951535}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494734`, 95.10565162951536}], 
                  Scaled[{-0.0018541019662496841`, 
                   0.005706339097770922}, {-30.901699437494734`, 
                   95.10565162951536}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749473, 58.77852522924732}], 
                  Scaled[{-0.004854101966249684, 
                   0.0035267115137548395`}, {-80.90169943749473, 
                   58.77852522924732}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-100., 1.2246467991473532`*^-14}], 
                  Scaled[{-0.006, 7.347880794884119*^-19}, {-100., 
                   1.2246467991473532`*^-14}]}], {{{0, 1}, {-1, 0}}, Center}],
                GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749474, -58.7785252292473}], 
                  Scaled[{-0.004854101966249685, -0.0035267115137548382`}, \
{-80.90169943749474, -58.7785252292473}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494756`, -95.10565162951535}],
                   Scaled[{-0.0018541019662496854`, -0.005706339097770921}, \
{-30.901699437494756`, -95.10565162951535}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494724`, -95.10565162951536}], 
                  Scaled[{0.0018541019662496835`, -0.005706339097770922}, {
                   30.901699437494724`, -95.10565162951536}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749473, -58.778525229247336`}], 
                  Scaled[{0.004854101966249684, -0.0035267115137548404`}, {
                   80.90169943749473, -58.778525229247336`}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                  Scaled[{0.006, -1.4695761589768239`*^-18}, {
                   100., -2.4492935982947064`*^-14}]}], {{{0, 1}, {-1, 0}}, 
                 Center}]}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {InsetBox[
                RotationBox[
                 StyleBox["\<\"Calcium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.47213595499958, 4.702282018339785}, \
{80.90169943749474, 58.778525229247315}], {-0.8090169943749475, -0.5877852522924731},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Cholesterol\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.4721359549995796, 7.608452130361228}, \
{30.901699437494745, 95.10565162951535}], {-0.30901699437494745, -0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Iron\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995787, 7.608452130361229}, \
{-30.901699437494734, 95.10565162951536}], {0.30901699437494734, -0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Sodium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.472135954999579, 4.702282018339786}, \
{-80.90169943749473, 58.77852522924732}], {0.8090169943749473, -0.5877852522924732},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Carbohydrates\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-8., 9.797174393178826*^-16}, \
{-100., 1.2246467991473532*^-14}], {1., -1.2246467991473532*^-16},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.47213595499958, -4.702282018339784}, \
{-80.90169943749474, -58.7785252292473}], {0.8090169943749475, 0.587785252292473},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Protein\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995805, -7.608452130361228}, \
{-30.901699437494756, -95.10565162951535}], {0.30901699437494756, 0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Saturated Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.472135954999578, -7.608452130361229}, \
{30.901699437494724, -95.10565162951536}], {-0.30901699437494723, 0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Vitamin C\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.472135954999579, -4.702282018339787}, \
{80.90169943749473, -58.778525229247336}], {-0.8090169943749473, 0.5877852522924734},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Calories\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{8., -1.959434878635765*^-15}, \
{100., -2.4492935982947064*^-14}], {-1., 2.4492935982947064*^-16},
                Background->Automatic]}, 
              CircleBox[{0, 0}, 100., {0., 6.283185307179586}]}, {
              {GrayLevel[0.6], 
               StyleBox[{},
                Antialiasing->False]}, {}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {}}}},
           ContentSelectable->False,
           DisplayFunction->Identity,
           GridLinesStyle->Dashing[{Small, Small}],
           ImageSize->Medium,
           PlotRange->{{All, All}, {All, All}},
           PlotRangePadding->Scaled[0.05]],
          BoxRotation->1.5707963267948966`]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"Snack (Median)\"\>"},
        {
         RotationBox[
          GraphicsBox[{{}, {}, {
             {RGBColor[0.5, 0.5, 1.], Thickness[Large], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], {{{}, {
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{14.000000000000002`, 0}, {5.152089892511124, 
                    3.7432124150158996`}, {0, 0}}]}, 
                    
                    LineBox[{{{14.000000000000002`, 0}, {5.152089892511124, 
                    3.7432124150158996`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    148.41421356237308`}, {-35.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484637, 
                    FEPrivate`Not[DynamicChart`click$484637]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484637, {{{1., 0}, {0, 1.}}, {
                    1.2113289829212606`, 0.39358464516889136`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484637}]]}, {}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{5.152089892511124, 
                    3.7432124150158996`}, {-1.6542572424652473`, 
                    5.0912802813882205`}, {0, 0}}]}, 
                    
                    LineBox[{{{5.152089892511124, 
                    3.7432124150158996`}, {-1.6542572424652473`, 
                    5.0912802813882205`}}}]}},
                    
                    ImageSizeCache->{{128.5857864376269, 
                    139.4142135623731}, {-36.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484641, 
                    FEPrivate`Not[DynamicChart`click$484641]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484641, {{{1., 0}, {0, 1.}}, {
                    6.55588810268887*^-17, 1.070657777777778}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484641}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-1.6542572424652473`, 
                    5.0912802813882205`}, {-7.604759747124505, 
                    5.525181371549249}, {0, 0}}]}, 
                    
                    LineBox[{{{-1.6542572424652473`, 
                    5.0912802813882205`}, {-7.604759747124505, 
                    5.525181371549249}}}]}},
                    ImageSizeCache->{{121.5857864376269, 
                    133.4142135623731}, {-37.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484645, 
                    FEPrivate`Not[DynamicChart`click$484645]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484645, {{{1., 0}, {
                    0, 1.}}, {-1.1050362743098494`, 1.5209519494249015`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484645}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-7.604759747124505, 
                    5.525181371549249}, {-13.574111111111112`, 
                    1.6623491723492746`*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{-7.604759747124505, 
                    5.525181371549249}, {-13.574111111111112`, 
                    1.6623491723492746`*^-15}}}]}},
                    
                    ImageSizeCache->{{115.5857864376269, 
                    133.4142135623731}, {-36.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484649, 
                    FEPrivate`Not[DynamicChart`click$484649]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484649, {{{1., 0}, {
                    0, 1.}}, {-2.5819493650273344`, 0.8389262033734269}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484649}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-13.574111111111112`, 
                    1.6623491723492746`*^-15}, {-17.786004054275672`, \
-12.922288348707054`}, {0, 0}}]}, 
                    
                    LineBox[{{{-13.574111111111112`, 
                    1.6623491723492746`*^-15}, {-17.786004054275672`, \
-12.922288348707054`}}}]}},
                    
                    ImageSizeCache->{{110.5857864376269, 
                    133.4142135623731}, {-30.414213562373106`, \
-13.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484653, 
                    FEPrivate`Not[DynamicChart`click$484653]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484653, {{{1., 0}, {
                    0, 1.}}, {-4.181740352126952, -1.3587298049379752`}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484653}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-17.786004054275672`, -12.922288348707054`}, \
{-4.889081474803796, -15.047045566912145`}, {0, 0}}]}, 
                    
                    LineBox[{{{-17.786004054275672`, -12.922288348707054`}, \
{-4.889081474803796, -15.047045566912145`}}}]}},
                    
                    ImageSizeCache->{{110.5857864376269, 
                    133.4142135623731}, {-31.414213562373106`, \
-11.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484657, 
                    FEPrivate`Not[DynamicChart`click$484657]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484657, {{{1., 0}, {
                    0, 1.}}, {-1.8599171181240277`, -2.559956294960759}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484657}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-4.889081474803796, -15.047045566912145`}, {
                    6.39748612944622, -19.689437739903678`}, {0, 0}}]}, 
                    
                    LineBox[{{{-4.889081474803796, -15.047045566912145`}, {
                    6.39748612944622, -19.689437739903678`}}}]}},
                    
                    ImageSizeCache->{{124.5857864376269, 
                    140.4142135623731}, {-31.414213562373106`, \
-6.5857864376268935`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484661, 
                    FEPrivate`Not[DynamicChart`click$484661]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484661, {{{1., 0}, {
                    0, 1.}}, {-7.606048586612373*^-16, \
-4.1405400000000006`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484661}]]}, {}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{6.39748612944622, -19.689437739903678`}, {
                    14.000000000000002`, -3.4290110376125893`*^-15}, {0, 
                    0}}]}, 
                    
                    LineBox[{{{6.39748612944622, -19.689437739903678`}, {
                    14.000000000000002`, -3.4290110376125893`*^-15}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    148.41421356237308`}, {-31.414213562373106`, \
-6.5857864376268935`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484665, 
                    FEPrivate`Not[DynamicChart`click$484665]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484665, {{{1., 0}, {0, 1.}}, {
                    2.6629582456264305`, -0.8652475842498536}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$484665}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484637, 
                    FEPrivate`Not[DynamicChart`click$484637]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484637, {{{1., 0}, {0, 1.}}, {
                    1.2113289829212606`, 0.39358464516889136`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484637}]], {}, 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484641, 
                    FEPrivate`Not[DynamicChart`click$484641]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484641, {{{1., 0}, {0, 1.}}, {
                    6.55588810268887*^-17, 1.070657777777778}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484641}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484645, 
                    FEPrivate`Not[DynamicChart`click$484645]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484645, {{{1., 0}, {
                    0, 1.}}, {-1.1050362743098494`, 1.5209519494249015`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484645}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484649, 
                    FEPrivate`Not[DynamicChart`click$484649]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484649, {{{1., 0}, {
                    0, 1.}}, {-2.5819493650273344`, 0.8389262033734269}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484649}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484653, 
                    FEPrivate`Not[DynamicChart`click$484653]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484653, {{{1., 0}, {
                    0, 1.}}, {-4.181740352126952, -1.3587298049379752`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484653}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484657, 
                    FEPrivate`Not[DynamicChart`click$484657]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484657, {{{1., 0}, {
                    0, 1.}}, {-1.8599171181240277`, -2.559956294960759}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484657}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484661, 
                    FEPrivate`Not[DynamicChart`click$484661]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484661, {{{1., 0}, {
                    0, 1.}}, {-7.606048586612373*^-16, \
-4.1405400000000006`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484661}]], {}, 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484665, 
                    FEPrivate`Not[DynamicChart`click$484665]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484665, {{{1., 0}, {0, 1.}}, {
                    2.6629582456264305`, -0.8652475842498536}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$484665}]]}, {}}, {}}, {}, {}}, {{
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {80.90169943749474, 58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {30.901699437494745`, 95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-30.901699437494745`, 
                95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-80.90169943749474, 
                58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-80.90169943749474, -58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                80.90169943749474, -58.778525229247315`}}]}}, {
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 0, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 25, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 50, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 75, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 100, {0., 6.283185307179586}]}}}, {{{
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749474, 58.778525229247315`}], 
                  Scaled[{0.004854101966249685, 0.003526711513754839}, {
                   80.90169943749474, 58.778525229247315`}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494745`, 95.10565162951535}], 
                  Scaled[{0.0018541019662496848`, 0.005706339097770921}, {
                   30.901699437494745`, 95.10565162951535}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494734`, 95.10565162951536}], 
                  Scaled[{-0.0018541019662496841`, 
                   0.005706339097770922}, {-30.901699437494734`, 
                   95.10565162951536}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749473, 58.77852522924732}], 
                  Scaled[{-0.004854101966249684, 
                   0.0035267115137548395`}, {-80.90169943749473, 
                   58.77852522924732}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-100., 1.2246467991473532`*^-14}], 
                  Scaled[{-0.006, 7.347880794884119*^-19}, {-100., 
                   1.2246467991473532`*^-14}]}], {{{0, 1}, {-1, 0}}, Center}],
                GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749474, -58.7785252292473}], 
                  Scaled[{-0.004854101966249685, -0.0035267115137548382`}, \
{-80.90169943749474, -58.7785252292473}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494756`, -95.10565162951535}],
                   Scaled[{-0.0018541019662496854`, -0.005706339097770921}, \
{-30.901699437494756`, -95.10565162951535}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494724`, -95.10565162951536}], 
                  Scaled[{0.0018541019662496835`, -0.005706339097770922}, {
                   30.901699437494724`, -95.10565162951536}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749473, -58.778525229247336`}], 
                  Scaled[{0.004854101966249684, -0.0035267115137548404`}, {
                   80.90169943749473, -58.778525229247336`}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                  Scaled[{0.006, -1.4695761589768239`*^-18}, {
                   100., -2.4492935982947064`*^-14}]}], {{{0, 1}, {-1, 0}}, 
                 Center}]}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {InsetBox[
                RotationBox[
                 StyleBox["\<\"Calcium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.47213595499958, 4.702282018339785}, \
{80.90169943749474, 58.778525229247315}], {-0.8090169943749475, -0.5877852522924731},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Cholesterol\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.4721359549995796, 7.608452130361228}, \
{30.901699437494745, 95.10565162951535}], {-0.30901699437494745, -0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Iron\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995787, 7.608452130361229}, \
{-30.901699437494734, 95.10565162951536}], {0.30901699437494734, -0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Sodium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.472135954999579, 4.702282018339786}, \
{-80.90169943749473, 58.77852522924732}], {0.8090169943749473, -0.5877852522924732},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Carbohydrates\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-8., 9.797174393178826*^-16}, \
{-100., 1.2246467991473532*^-14}], {1., -1.2246467991473532*^-16},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.47213595499958, -4.702282018339784}, \
{-80.90169943749474, -58.7785252292473}], {0.8090169943749475, 0.587785252292473},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Protein\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995805, -7.608452130361228}, \
{-30.901699437494756, -95.10565162951535}], {0.30901699437494756, 0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Saturated Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.472135954999578, -7.608452130361229}, \
{30.901699437494724, -95.10565162951536}], {-0.30901699437494723, 0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Vitamin C\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.472135954999579, -4.702282018339787}, \
{80.90169943749473, -58.778525229247336}], {-0.8090169943749473, 0.5877852522924734},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Calories\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{8., -1.959434878635765*^-15}, \
{100., -2.4492935982947064*^-14}], {-1., 2.4492935982947064*^-16},
                Background->Automatic]}, 
              CircleBox[{0, 0}, 100., {0., 6.283185307179586}]}, {
              {GrayLevel[0.6], 
               StyleBox[{},
                Antialiasing->False]}, {}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {}}}},
           ContentSelectable->False,
           DisplayFunction->Identity,
           GridLinesStyle->Dashing[{Small, Small}],
           ImageSize->Medium,
           PlotRange->{{All, All}, {All, All}},
           PlotRangePadding->Scaled[0.05]],
          BoxRotation->1.5707963267948966`]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Snack (Mean)\"\>"},
        {
         RotationBox[
          GraphicsBox[{{}, {}, {
             {RGBColor[0.5, 0.5, 1.], Thickness[Large], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], {{{}, {
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    PolygonBox[{{20.546118162393164`, 0}, {
                    22.421611837295664`, 16.290254546223714`}, {0, 0}}]}, 
                    
                    LineBox[{{{20.546118162393164`, 0}, {22.421611837295664`, 
                    16.290254546223714`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    157.41421356237308`}, {-48.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486556, 
                    FEPrivate`Not[DynamicChart`click$486556]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486556, {{{1., 0}, {0, 1.}}, {
                    5.271637108235494, 1.712858727857993}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486556}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{22.421611837295664`, 16.290254546223714`}, {
                    3.4617912060431677`, 10.654297803977121`}, {0, 0}}]}, 
                    
                    LineBox[{{{22.421611837295664`, 16.290254546223714`}, {
                    3.4617912060431677`, 10.654297803977121`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    157.4142135623731}, {-49.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486560, 
                    FEPrivate`Not[DynamicChart`click$486560]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486560, {{{1., 0}, {0, 1.}}, {
                    1.3169436338242453`, 1.8126174078753008`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486560}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{3.4617912060431677`, 
                    10.654297803977121`}, {-3.117406764239216, 
                    9.594391476977806}, {0, 0}}]}, 
                    
                    LineBox[{{{3.4617912060431677`, 
                    10.654297803977121`}, {-3.117406764239216, 
                    9.594391476977806}}}]}},
                    
                    ImageSizeCache->{{126.5857864376269, 
                    137.4142135623731}, {-43.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486564, 
                    FEPrivate`Not[DynamicChart`click$486564]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486564, {{{1., 0}, {0, 1.}}, {
                    1.2354408608458628`*^-16, 2.017628040519152}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486564}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-3.117406764239216, 
                    9.594391476977806}, {-13.69131271888343, 
                    9.947320954489522}, {0, 0}}]}, 
                    
                    LineBox[{{{-3.117406764239216, 
                    9.594391476977806}, {-13.69131271888343, 
                    9.947320954489522}}}]}},
                    
                    ImageSizeCache->{{115.5857864376269, 
                    133.4142135623731}, {-42.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486568, 
                    FEPrivate`Not[DynamicChart`click$486568]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486568, {{{1., 0}, {
                    0, 1.}}, {-1.9894641908979034`, 2.7382625437766865`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486568}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-13.69131271888343, 
                    9.947320954489522}, {-20.758277789648623`, 
                    2.5421558450904782`*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{-13.69131271888343, 
                    9.947320954489522}, {-20.758277789648623`, 
                    2.5421558450904782`*^-15}}}]}},
                    ImageSizeCache->{{107.5857864376269, 
                    133.4142135623731}, {-41.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486572, 
                    FEPrivate`Not[DynamicChart`click$486572]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486572, {{{1., 0}, {
                    0, 1.}}, {-3.948459071782056, 1.2829321221914896`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486572}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-20.758277789648623`, 
                    2.5421558450904782`*^-15}, {-18.64358126096919, \
-13.545354660417937`}, {0, 0}}]}, 
                    
                    LineBox[{{{-20.758277789648623`, 
                    2.5421558450904782`*^-15}, {-18.64358126096919, \
-13.545354660417937`}}}]}},
                    
                    ImageSizeCache->{{107.5857864376269, 
                    133.4142135623731}, {-31.414213562373106`, \
-13.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486576, 
                    FEPrivate`Not[DynamicChart`click$486576]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486576, {{{1., 0}, {
                    0, 1.}}, {-4.3833688460456015`, -1.4242428739339212`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486576}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-18.64358126096919, -13.545354660417937`}, \
{-6.881714703163413, -21.179740049462914`}, {0, 0}}]}, 
                    
                    LineBox[{{{-18.64358126096919, -13.545354660417937`}, \
{-6.881714703163413, -21.179740049462914`}}}]}},
                    
                    ImageSizeCache->{{109.5857864376269, 
                    133.4142135623731}, {-31.414213562373106`, \
-5.5857864376268935`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486580, 
                    FEPrivate`Not[DynamicChart`click$486580]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486580, {{{1., 0}, {
                    0, 1.}}, {-2.617959844691093, -3.60331259875234}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486580}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-6.881714703163413, -21.179740049462914`}, {
                    8.96868757346647, -27.602782094926045`}, {0, 0}}]}, 
                    
                    LineBox[{{{-6.881714703163413, -21.179740049462914`}, {
                    8.96868757346647, -27.602782094926045`}}}]}},
                    
                    ImageSizeCache->{{122.5857864376269, 
                    143.4142135623731}, {-31.414213562373106`, 
                    1.4142135623731065`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486584, 
                    FEPrivate`Not[DynamicChart`click$486584]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486584, {{{1., 0}, {
                    0, 1.}}, {-1.0662981061881183`*^-15, \
-5.804656531339031}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486584}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{8.96868757346647, -27.602782094926045`}, {
                    4.381597516915935, -3.1834169366421174`}, {0, 0}}]}, 
                    
                    LineBox[{{{8.96868757346647, -27.602782094926045`}, {
                    4.381597516915935, -3.1834169366421174`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    142.41421356237308`}, {-31.414213562373106`, 
                    1.4142135623731065`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486588, 
                    FEPrivate`Not[DynamicChart`click$486588]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486588, {{{1., 0}, {0, 1.}}, {
                    0.636683387328423, -0.8763195033831874}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486588}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{4.381597516915935, -3.1834169366421174`}, {
                    20.546118162393164`, -5.032347568495617*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{4.381597516915935, -3.1834169366421174`}, {
                    20.546118162393164`, -5.032347568495617*^-15}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    155.41421356237308`}, {-31.414213562373106`, \
-24.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486592, 
                    FEPrivate`Not[DynamicChart`click$486592]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486592, {{{1., 0}, {0, 1.}}, {
                    3.908103912582845, -1.2698199361230518`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$486592}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486556, 
                    FEPrivate`Not[DynamicChart`click$486556]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486556, {{{1., 0}, {0, 1.}}, {
                    5.271637108235494, 1.712858727857993}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486556}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486560, 
                    FEPrivate`Not[DynamicChart`click$486560]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486560, {{{1., 0}, {0, 1.}}, {
                    1.3169436338242453`, 1.8126174078753008`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486560}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486564, 
                    FEPrivate`Not[DynamicChart`click$486564]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486564, {{{1., 0}, {0, 1.}}, {
                    1.2354408608458628`*^-16, 2.017628040519152}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486564}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486568, 
                    FEPrivate`Not[DynamicChart`click$486568]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486568, {{{1., 0}, {
                    0, 1.}}, {-1.9894641908979034`, 2.7382625437766865`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486568}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486572, 
                    FEPrivate`Not[DynamicChart`click$486572]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486572, {{{1., 0}, {
                    0, 1.}}, {-3.948459071782056, 1.2829321221914896`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486572}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486576, 
                    FEPrivate`Not[DynamicChart`click$486576]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486576, {{{1., 0}, {
                    0, 1.}}, {-4.3833688460456015`, -1.4242428739339212`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486576}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486580, 
                    FEPrivate`Not[DynamicChart`click$486580]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486580, {{{1., 0}, {
                    0, 1.}}, {-2.617959844691093, -3.60331259875234}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486580}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486584, 
                    FEPrivate`Not[DynamicChart`click$486584]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486584, {{{1., 0}, {
                    0, 1.}}, {-1.0662981061881183`*^-15, \
-5.804656531339031}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486584}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486588, 
                    FEPrivate`Not[DynamicChart`click$486588]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486588, {{{1., 0}, {0, 1.}}, {
                    0.636683387328423, -0.8763195033831874}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486588}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486592, 
                    FEPrivate`Not[DynamicChart`click$486592]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486592, {{{1., 0}, {0, 1.}}, {
                    3.908103912582845, -1.2698199361230518`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$486592}]]}, {}}, {}}, {}, {}}, {{
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {80.90169943749474, 58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {30.901699437494745`, 95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-30.901699437494745`, 
                95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-80.90169943749474, 
                58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-80.90169943749474, -58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                80.90169943749474, -58.778525229247315`}}]}}, {
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 0, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 25, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 50, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 75, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 100, {0., 6.283185307179586}]}}}, {{{
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749474, 58.778525229247315`}], 
                  Scaled[{0.004854101966249685, 0.003526711513754839}, {
                   80.90169943749474, 58.778525229247315`}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494745`, 95.10565162951535}], 
                  Scaled[{0.0018541019662496848`, 0.005706339097770921}, {
                   30.901699437494745`, 95.10565162951535}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494734`, 95.10565162951536}], 
                  Scaled[{-0.0018541019662496841`, 
                   0.005706339097770922}, {-30.901699437494734`, 
                   95.10565162951536}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749473, 58.77852522924732}], 
                  Scaled[{-0.004854101966249684, 
                   0.0035267115137548395`}, {-80.90169943749473, 
                   58.77852522924732}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-100., 1.2246467991473532`*^-14}], 
                  Scaled[{-0.006, 7.347880794884119*^-19}, {-100., 
                   1.2246467991473532`*^-14}]}], {{{0, 1}, {-1, 0}}, Center}],
                GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749474, -58.7785252292473}], 
                  Scaled[{-0.004854101966249685, -0.0035267115137548382`}, \
{-80.90169943749474, -58.7785252292473}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494756`, -95.10565162951535}],
                   Scaled[{-0.0018541019662496854`, -0.005706339097770921}, \
{-30.901699437494756`, -95.10565162951535}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494724`, -95.10565162951536}], 
                  Scaled[{0.0018541019662496835`, -0.005706339097770922}, {
                   30.901699437494724`, -95.10565162951536}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749473, -58.778525229247336`}], 
                  Scaled[{0.004854101966249684, -0.0035267115137548404`}, {
                   80.90169943749473, -58.778525229247336`}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                  Scaled[{0.006, -1.4695761589768239`*^-18}, {
                   100., -2.4492935982947064`*^-14}]}], {{{0, 1}, {-1, 0}}, 
                 Center}]}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {InsetBox[
                RotationBox[
                 StyleBox["\<\"Calcium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.47213595499958, 4.702282018339785}, \
{80.90169943749474, 58.778525229247315}], {-0.8090169943749475, -0.5877852522924731},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Cholesterol\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], Offset[{2.4721359549995796, 7.608452130361228},
                 {30.901699437494745, 95.10565162951535}], {-0.30901699437494745, -0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Iron\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995787, 7.608452130361229}, \
{-30.901699437494734, 95.10565162951536}], {0.30901699437494734, -0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Sodium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.472135954999579, 4.702282018339786}, \
{-80.90169943749473, 58.77852522924732}], {0.8090169943749473, -0.5877852522924732},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Carbohydrates\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-8., 9.797174393178826*^-16}, \
{-100., 1.2246467991473532*^-14}], {1., -1.2246467991473532*^-16},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.47213595499958, -4.702282018339784}, \
{-80.90169943749474, -58.7785252292473}], {0.8090169943749475, 0.587785252292473},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Protein\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], Offset[
                {-2.4721359549995805, -7.608452130361228}, \
{-30.901699437494756, -95.10565162951535}], {0.30901699437494756, 0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Saturated Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.472135954999578, -7.608452130361229}, \
{30.901699437494724, -95.10565162951536}], {-0.30901699437494723, 0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Vitamin C\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.472135954999579, -4.702282018339787}, \
{80.90169943749473, -58.778525229247336}], {-0.8090169943749473, 0.5877852522924734},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Calories\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{8., -1.959434878635765*^-15}, \
{100., -2.4492935982947064*^-14}], {-1., 2.4492935982947064*^-16},
                Background->Automatic]}, 
              CircleBox[{0, 0}, 100., {0., 6.283185307179586}]}, {
              {GrayLevel[0.6], 
               StyleBox[{},
                Antialiasing->False]}, {}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {}}}},
           ContentSelectable->False,
           DisplayFunction->Identity,
           GridLinesStyle->Dashing[{Small, Small}],
           ImageSize->Medium,
           PlotRange->{{All, All}, {All, All}},
           PlotRangePadding->Scaled[0.05]],
          BoxRotation->1.5707963267948966`]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {"\<\"Dinner (Median)\"\>"},
        {
         RotationBox[
          GraphicsBox[{{}, {}, {
             {RGBColor[0.5, 0.5, 1.], Thickness[Large], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], {{{}, {
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{33.010749999999994`, 0}, {20.52425563059643, 
                    14.911744571281792`}, {0, 0}}]}, 
                    
                    LineBox[{{{33.010749999999994`, 0}, {20.52425563059643, 
                    14.911744571281792`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    168.41421356237308`}, {-47.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484960, 
                    FEPrivate`Not[DynamicChart`click$484960]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484960, {{{1., 0}, {0, 1.}}, {
                    4.825541909578134, 1.5679136114192858`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484960}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{20.52425563059643, 14.911744571281792`}, {
                    4.7923385544314785`, 14.74930147354401}, {0, 0}}]}, 
                    
                    LineBox[{{{20.52425563059643, 14.911744571281792`}, {
                    4.7923385544314785`, 14.74930147354401}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    155.4142135623731}, {-47.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484964, 
                    FEPrivate`Not[DynamicChart`click$484964]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484964, {{{1., 0}, {0, 1.}}, {
                    1.8231139241938217`, 2.5093010442196295`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484964}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{4.7923385544314785`, 
                    14.74930147354401}, {-8.678817395317648, 
                    26.71065341971932}, {0, 0}}]}, 
                    LineBox[{{{4.7923385544314785`, 
                    14.74930147354401}, {-8.678817395317648, 
                    26.71065341971932}}}]}},
                    
                    ImageSizeCache->{{120.5857864376269, 
                    138.4142135623731}, {-59.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484968, 
                    FEPrivate`Not[DynamicChart`click$484968]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484968, {{{1., 0}, {0, 1.}}, {
                    3.4394503011261547`*^-16, 5.617048611111112}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484968}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-8.678817395317648, 
                    26.71065341971932}, {-48.15859058744752, 
                    34.98926415057931}, {0, 0}}]}, 
                    
                    LineBox[{{{-8.678817395317648, 
                    26.71065341971932}, {-48.15859058744752, 
                    34.98926415057931}}}]}},
                    
                    ImageSizeCache->{{77.5857864376269, 
                    132.4142135623731}, {-68.4142135623731, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484972, 
                    FEPrivate`Not[DynamicChart`click$484972]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484972, {{{1., 0}, {
                    0, 1.}}, {-6.99785283011586, 9.631718117489505}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484972}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-48.15859058744752, 
                    34.98926415057931}, {-26.568033333333336`, 
                    3.2536456981306855`*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{-48.15859058744752, 
                    34.98926415057931}, {-26.568033333333336`, 
                    3.2536456981306855`*^-15}}}]}},
                    
                    ImageSizeCache->{{77.5857864376269, 
                    132.4142135623731}, {-68.4142135623731, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484976, 
                    FEPrivate`Not[DynamicChart`click$484976]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484976, {{{1., 0}, {
                    0, 1.}}, {-5.053540245362704, 1.6419947614240173`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484976}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-26.568033333333336`, 
                    3.2536456981306855`*^-15}, {-43.56127113381308, \
-31.649116052687525`}, {0, 0}}]}, 
                    
                    LineBox[{{{-26.568033333333336`, 
                    3.2536456981306855`*^-15}, {-43.56127113381308, \
-31.649116052687525`}}}]}},
                    
                    ImageSizeCache->{{82.5857864376269, 
                    132.4142135623731}, {-31.414213562373106`, 
                    6.4142135623731065`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484980, 
                    FEPrivate`Not[DynamicChart`click$484980]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484980, {{{1., 0}, {
                    0, 1.}}, {-10.241869097427662`, -3.327784995993385}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484980}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-43.56127113381308, -31.649116052687525`}, \
{-17.63865887084992, -54.28621002466502}, {0, 0}}]}, 
                    
                    LineBox[{{{-43.56127113381308, -31.649116052687525`}, \
{-17.63865887084992, -54.28621002466502}}}]}},
                    
                    ImageSizeCache->{{82.5857864376269, 
                    132.4142135623731}, {-31.414213562373106`, 
                    30.414213562373106`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484984, 
                    FEPrivate`Not[DynamicChart`click$484984]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484984, {{{1., 0}, {
                    0, 1.}}, {-6.710144583131651, -9.235721687969983}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484984}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-17.63865887084992, -54.28621002466502}, {
                    23.246490964667892`, -71.54534253905169}, {0, 0}}]}, 
                    
                    LineBox[{{{-17.63865887084992, -54.28621002466502}, {
                    23.246490964667892`, -71.54534253905169}}}]}},
                    
                    ImageSizeCache->{{110.5857864376269, 
                    158.4142135623731}, {-31.414213562373106`, 
                    49.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484988, 
                    FEPrivate`Not[DynamicChart`click$484988]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484988, {{{1., 0}, {
                    0, 1.}}, {-2.7638034091496326`*^-15, -15.045445}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484988}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{23.246490964667892`, -71.54534253905169}, {
                    27.688600036297352`, -20.116945467300816`}, {0, 0}}]}, 
                    
                    LineBox[{{{23.246490964667892`, -71.54534253905169}, {
                    27.688600036297352`, -20.116945467300816`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    162.4142135623731}, {-31.414213562373106`, 
                    49.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484992, 
                    FEPrivate`Not[DynamicChart`click$484992]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484992, {{{1., 0}, {0, 1.}}, {
                    4.02338909346016, -5.537720007259472}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$484992}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{27.688600036297352`, -20.116945467300816`}, {
                    33.010749999999994`, -8.085301864990697*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{27.688600036297352`, -20.116945467300816`}, {
                    33.010749999999994`, -8.085301864990697*^-15}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    168.41421356237308`}, {-31.414213562373106`, \
-6.5857864376268935`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484996, 
                    FEPrivate`Not[DynamicChart`click$484996]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$484996, {{{1., 0}, {0, 1.}}, {
                    6.279017779058047, -2.0401765494125605`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$484996}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484960, 
                    FEPrivate`Not[DynamicChart`click$484960]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484960, {{{1., 0}, {0, 1.}}, {
                    4.825541909578134, 1.5679136114192858`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484960}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484964, 
                    FEPrivate`Not[DynamicChart`click$484964]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484964, {{{1., 0}, {0, 1.}}, {
                    1.8231139241938217`, 2.5093010442196295`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484964}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484968, 
                    FEPrivate`Not[DynamicChart`click$484968]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484968, {{{1., 0}, {0, 1.}}, {
                    3.4394503011261547`*^-16, 5.617048611111112}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484968}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484972, 
                    FEPrivate`Not[DynamicChart`click$484972]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484972, {{{1., 0}, {
                    0, 1.}}, {-6.99785283011586, 9.631718117489505}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484972}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484976, 
                    FEPrivate`Not[DynamicChart`click$484976]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484976, {{{1., 0}, {
                    0, 1.}}, {-5.053540245362704, 1.6419947614240173`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484976}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484980, 
                    FEPrivate`Not[DynamicChart`click$484980]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484980, {{{1., 0}, {
                    0, 1.}}, {-10.241869097427662`, -3.327784995993385}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484980}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484984, 
                    FEPrivate`Not[DynamicChart`click$484984]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484984, {{{1., 0}, {
                    0, 1.}}, {-6.710144583131651, -9.235721687969983}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484984}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484988, 
                    FEPrivate`Not[DynamicChart`click$484988]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484988, {{{1., 0}, {
                    0, 1.}}, {-2.7638034091496326`*^-15, -15.045445}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484988}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484992, 
                    FEPrivate`Not[DynamicChart`click$484992]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484992, {{{1., 0}, {0, 1.}}, {
                    4.02338909346016, -5.537720007259472}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$484992}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$484996, 
                    FEPrivate`Not[DynamicChart`click$484996]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$484996, {{{1., 0}, {0, 1.}}, {
                    6.279017779058047, -2.0401765494125605`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$484996}]]}, {}}, {}}, {}, {}}, {{
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {80.90169943749474, 58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {30.901699437494745`, 95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-30.901699437494745`, 
                95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-80.90169943749474, 
                58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-80.90169943749474, -58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                80.90169943749474, -58.778525229247315`}}]}}, {
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 0, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 25, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 50, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 75, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 100, {0., 6.283185307179586}]}}}, {{{
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749474, 58.778525229247315`}], 
                  Scaled[{0.004854101966249685, 0.003526711513754839}, {
                   80.90169943749474, 58.778525229247315`}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494745`, 95.10565162951535}], 
                  Scaled[{0.0018541019662496848`, 0.005706339097770921}, {
                   30.901699437494745`, 95.10565162951535}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494734`, 95.10565162951536}], 
                  Scaled[{-0.0018541019662496841`, 
                   0.005706339097770922}, {-30.901699437494734`, 
                   95.10565162951536}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749473, 58.77852522924732}], 
                  Scaled[{-0.004854101966249684, 
                   0.0035267115137548395`}, {-80.90169943749473, 
                   58.77852522924732}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-100., 1.2246467991473532`*^-14}], 
                  Scaled[{-0.006, 7.347880794884119*^-19}, {-100., 
                   1.2246467991473532`*^-14}]}], {{{0, 1}, {-1, 0}}, Center}],
                GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749474, -58.7785252292473}], 
                  Scaled[{-0.004854101966249685, -0.0035267115137548382`}, \
{-80.90169943749474, -58.7785252292473}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494756`, -95.10565162951535}],
                   Scaled[{-0.0018541019662496854`, -0.005706339097770921}, \
{-30.901699437494756`, -95.10565162951535}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494724`, -95.10565162951536}], 
                  Scaled[{0.0018541019662496835`, -0.005706339097770922}, {
                   30.901699437494724`, -95.10565162951536}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749473, -58.778525229247336`}], 
                  Scaled[{0.004854101966249684, -0.0035267115137548404`}, {
                   80.90169943749473, -58.778525229247336`}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                  Scaled[{0.006, -1.4695761589768239`*^-18}, {
                   100., -2.4492935982947064`*^-14}]}], {{{0, 1}, {-1, 0}}, 
                 Center}]}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {InsetBox[
                RotationBox[
                 StyleBox["\<\"Calcium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.47213595499958, 4.702282018339785}, \
{80.90169943749474, 58.778525229247315}], {-0.8090169943749475, -0.5877852522924731},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Cholesterol\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.4721359549995796, 7.608452130361228}, \
{30.901699437494745, 95.10565162951535}], {-0.30901699437494745, -0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Iron\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995787, 7.608452130361229}, \
{-30.901699437494734, 95.10565162951536}], {0.30901699437494734, -0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Sodium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.472135954999579, 4.702282018339786}, \
{-80.90169943749473, 58.77852522924732}], {0.8090169943749473, -0.5877852522924732},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Carbohydrates\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-8., 9.797174393178826*^-16}, \
{-100., 1.2246467991473532*^-14}], {1., -1.2246467991473532*^-16},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.47213595499958, -4.702282018339784}, \
{-80.90169943749474, -58.7785252292473}], {0.8090169943749475, 0.587785252292473},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Protein\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995805, -7.608452130361228}, \
{-30.901699437494756, -95.10565162951535}], {0.30901699437494756, 0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Saturated Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.472135954999578, -7.608452130361229}, \
{30.901699437494724, -95.10565162951536}], {-0.30901699437494723, 0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Vitamin C\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.472135954999579, -4.702282018339787}, \
{80.90169943749473, -58.778525229247336}], {-0.8090169943749473, 0.5877852522924734},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Calories\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{8., -1.959434878635765*^-15}, \
{100., -2.4492935982947064*^-14}], {-1., 2.4492935982947064*^-16},
                Background->Automatic]}, 
              CircleBox[{0, 0}, 100., {0., 6.283185307179586}]}, {
              {GrayLevel[0.6], 
               StyleBox[{},
                Antialiasing->False]}, {}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {}}}},
           ContentSelectable->False,
           DisplayFunction->Identity,
           GridLinesStyle->Dashing[{Small, Small}],
           ImageSize->Medium,
           PlotRange->{{All, All}, {All, All}},
           PlotRangePadding->Scaled[0.05]],
          BoxRotation->1.5707963267948966`]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {"\<\"Dinner (Mean)\"\>"},
        {
         RotationBox[
          GraphicsBox[{{}, {}, {
             {RGBColor[0.5, 0.5, 1.], Thickness[Large], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], {{{}, {
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{38.16180359707143, 0}, {26.958320406548957`, 
                    19.586366258952587`}, {0, 0}}]}, 
                    
                    LineBox[{{{38.16180359707143, 0}, {26.958320406548957`, 
                    19.586366258952587`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    174.41421356237308`}, {-52.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486891, 
                    FEPrivate`Not[DynamicChart`click$486891]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486891, {{{1., 0}, {0, 1.}}, {
                    6.338281264617882, 2.0594324231383636`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486891}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{26.958320406548957`, 19.586366258952587`}, {
                    6.676094380065181, 20.546905766154833`}, {0, 0}}]}, 
                    
                    LineBox[{{{26.958320406548957`, 19.586366258952587`}, {
                    6.676094380065181, 20.546905766154833`}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    162.4142135623731}, {-53.414213562373114`, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486895, 
                    FEPrivate`Not[DynamicChart`click$486895]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486895, {{{1., 0}, {0, 1.}}, {
                    2.5397372254249775`, 3.49564839982256}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486895}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{6.676094380065181, 
                    20.546905766154833`}, {-9.060694522305225, 
                    27.88595036667277}, {0, 0}}]}, 
                    
                    LineBox[{{{6.676094380065181, 
                    20.546905766154833`}, {-9.060694522305225, 
                    27.88595036667277}}}]}},
                    
                    ImageSizeCache->{{120.5857864376269, 
                    140.4142135623731}, {-61.41421356237311, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486899, 
                    FEPrivate`Not[DynamicChart`click$486899]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486899, {{{1., 0}, {0, 1.}}, {
                    3.5907897451521613`*^-16, 5.864204679507935}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486899}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-9.060694522305225, 
                    27.88595036667277}, {-53.141845723592354`, 
                    38.60981093488967}, {0, 0}}]}, 
                    
                    LineBox[{{{-9.060694522305225, 
                    27.88595036667277}, {-53.141845723592354`, 
                    38.60981093488967}}}]}},
                    
                    ImageSizeCache->{{72.5857864376269, 
                    133.4142135623731}, {-72.4142135623731, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486903, 
                    FEPrivate`Not[DynamicChart`click$486903]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486903, {{{1., 0}, {
                    0, 1.}}, {-7.721962186977932, 10.628369144718473`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486903}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-53.141845723592354`, 
                    38.60981093488967}, {-27.228961969195243`, 
                    3.3345861119679965`*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{-53.141845723592354`, 
                    38.60981093488967}, {-27.228961969195243`, 
                    3.3345861119679965`*^-15}}}]}},
                    ImageSizeCache->{{72.5857864376269, 
                    133.4142135623731}, {-72.4142135623731, \
-27.585786437626894`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486907, 
                    FEPrivate`Not[DynamicChart`click$486907]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486907, {{{1., 0}, {
                    0, 1.}}, {-5.17925634255121, 1.6828423975340934`}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486907}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-27.228961969195243`, 
                    3.3345861119679965`*^-15}, {-46.76411308345474, \
-33.9761169395818}, {0, 0}}]}, 
                    
                    LineBox[{{{-27.228961969195243`, 
                    3.3345861119679965`*^-15}, {-46.76411308345474, \
-33.9761169395818}}}]}},
                    
                    ImageSizeCache->{{79.5857864376269, 
                    133.4142135623731}, {-31.414213562373106`, 
                    8.414213562373106}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486911, 
                    FEPrivate`Not[DynamicChart`click$486911]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486911, {{{1., 0}, {
                    0, 1.}}, {-10.99490240279688, -3.572460348827212}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486911}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-46.76411308345474, -33.9761169395818}, \
{-17.404494561730633`, -53.56552638549457}, {0, 0}}]}, 
                    
                    LineBox[{{{-46.76411308345474, -33.9761169395818}, \
{-17.404494561730633`, -53.56552638549457}}}]}},
                    
                    ImageSizeCache->{{79.5857864376269, 
                    133.4142135623731}, {-31.414213562373106`, 
                    29.414213562373106`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486915, 
                    FEPrivate`Not[DynamicChart`click$486915]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486915, {{{1., 0}, {
                    0, 1.}}, {-6.621063186302992, -9.113111663924697}}, {{1, 
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486915}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-17.404494561730633`, -53.56552638549457}, {
                    24.622836800281576`, -75.78129945877966}, {0, 0}}]}, 
                    
                    LineBox[{{{-17.404494561730633`, -53.56552638549457}, {
                    24.622836800281576`, -75.78129945877966}}}]}},
                    
                    ImageSizeCache->{{111.5857864376269, 
                    160.4142135623731}, {-31.414213562373106`, 
                    53.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486919, 
                    FEPrivate`Not[DynamicChart`click$486919]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486919, {{{1., 0}, {
                    0, 1.}}, {-2.927438829154294*^-15, \
-15.936234736918928`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486919}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{24.622836800281576`, -75.78129945877966}, {
                    32.55540357552266, -23.65288521399501}, {0, 0}}]}, 
                    
                    LineBox[{{{24.622836800281576`, -75.78129945877966}, {
                    32.55540357552266, -23.65288521399501}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    168.4142135623731}, {-31.414213562373106`, 
                    53.41421356237311}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486923, 
                    FEPrivate`Not[DynamicChart`click$486923]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486923, {{{1., 0}, {0, 1.}}, {
                    4.730577042798998, -6.511080715104534}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$486923}]]}, 
                 {RGBColor[1, 0.5, 0], Thickness[Large], EdgeForm[{GrayLevel[
                  0], Opacity[0.5]}], GeometricTransformationBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{32.55540357552266, -23.65288521399501}, {
                    38.16180359707143, -9.346946124968696*^-15}, {0, 0}}]}, 
                    
                    LineBox[{{{32.55540357552266, -23.65288521399501}, {
                    38.16180359707143, -9.346946124968696*^-15}}}]}},
                    
                    ImageSizeCache->{{129.5857864376269, 
                    174.41421356237308`}, {-31.414213562373106`, \
-2.5857864376268935`}}],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486927, 
                    FEPrivate`Not[DynamicChart`click$486927]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                   Dynamic[
                   If[DynamicChart`click$486927, {{{1., 0}, {0, 1.}}, {
                    7.258806396914124, -2.358529169498816}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$486927}]]}}}, {}}, {}}, {{{
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486891, 
                    FEPrivate`Not[DynamicChart`click$486891]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486891, {{{1., 0}, {0, 1.}}, {
                    6.338281264617882, 2.0594324231383636`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486891}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486895, 
                    FEPrivate`Not[DynamicChart`click$486895]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486895, {{{1., 0}, {0, 1.}}, {
                    2.5397372254249775`, 3.49564839982256}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486895}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486899, 
                    FEPrivate`Not[DynamicChart`click$486899]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486899, {{{1., 0}, {0, 1.}}, {
                    3.5907897451521613`*^-16, 5.864204679507935}}, {{1, 0}, {
                   0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486899}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486903, 
                    FEPrivate`Not[DynamicChart`click$486903]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486903, {{{1., 0}, {
                    0, 1.}}, {-7.721962186977932, 10.628369144718473`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486903}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486907, 
                    FEPrivate`Not[DynamicChart`click$486907]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486907, {{{1., 0}, {
                    0, 1.}}, {-5.17925634255121, 1.6828423975340934`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486907}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486911, 
                    FEPrivate`Not[DynamicChart`click$486911]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486911, {{{1., 0}, {
                    0, 1.}}, {-10.99490240279688, -3.572460348827212}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486911}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486915, 
                    FEPrivate`Not[DynamicChart`click$486915]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486915, {{{1., 0}, {
                    0, 1.}}, {-6.621063186302992, -9.113111663924697}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486915}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486919, 
                    FEPrivate`Not[DynamicChart`click$486919]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486919, {{{1., 0}, {
                    0, 1.}}, {-2.927438829154294*^-15, \
-15.936234736918928`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486919}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486923, 
                    FEPrivate`Not[DynamicChart`click$486923]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486923, {{{1., 0}, {0, 1.}}, {
                    4.730577042798998, -6.511080715104534}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$486923}]], 
                GeometricTransformationBox[
                 TagBox[{{}, {}},
                  
                  EventHandlerTag[{
                   "MouseClicked" :> FEPrivate`Set[DynamicChart`click$486927, 
                    FEPrivate`Not[DynamicChart`click$486927]], PassEventsDown -> 
                    True, Method -> "Preemptive", PassEventsUp -> True}]], 
                 Dynamic[
                 If[DynamicChart`click$486927, {{{1., 0}, {0, 1.}}, {
                    7.258806396914124, -2.358529169498816}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {
                   DynamicChart`click$486927}]]}, {}}, {}}, {}, {}}, {{
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {80.90169943749474, 58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {30.901699437494745`, 95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-30.901699437494745`, 
                95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-80.90169943749474, 
                58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {-100., 0.}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-80.90169943749474, -58.778525229247315`}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 
                0.}, {-30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                30.901699437494745`, -95.10565162951535}}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               LineBox[{{0., 0.}, {
                80.90169943749474, -58.778525229247315`}}]}}, {
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 0, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 25, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 50, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 75, {0., 6.283185307179586}]}, 
              {GrayLevel[0.6], Dashing[{Small, Small}], 
               CircleBox[{0, 0}, 100, {0., 6.283185307179586}]}}}, {{{
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749474, 58.778525229247315`}], 
                  Scaled[{0.004854101966249685, 0.003526711513754839}, {
                   80.90169943749474, 58.778525229247315`}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494745`, 95.10565162951535}], 
                  Scaled[{0.0018541019662496848`, 0.005706339097770921}, {
                   30.901699437494745`, 95.10565162951535}]}], {{{0, 1}, {-1, 
                 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494734`, 95.10565162951536}], 
                  Scaled[{-0.0018541019662496841`, 
                   0.005706339097770922}, {-30.901699437494734`, 
                   95.10565162951536}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749473, 58.77852522924732}], 
                  Scaled[{-0.004854101966249684, 
                   0.0035267115137548395`}, {-80.90169943749473, 
                   58.77852522924732}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-100., 1.2246467991473532`*^-14}], 
                  Scaled[{-0.006, 7.347880794884119*^-19}, {-100., 
                   1.2246467991473532`*^-14}]}], {{{0, 1}, {-1, 0}}, Center}],
                GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-80.90169943749474, -58.7785252292473}], 
                  Scaled[{-0.004854101966249685, -0.0035267115137548382`}, \
{-80.90169943749474, -58.7785252292473}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {-30.901699437494756`, -95.10565162951535}],
                   Scaled[{-0.0018541019662496854`, -0.005706339097770921}, \
{-30.901699437494756`, -95.10565162951535}]}], {{{0, 1}, {-1, 0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {30.901699437494724`, -95.10565162951536}], 
                  Scaled[{0.0018541019662496835`, -0.005706339097770922}, {
                   30.901699437494724`, -95.10565162951536}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {80.90169943749473, -58.778525229247336`}], 
                  Scaled[{0.004854101966249684, -0.0035267115137548404`}, {
                   80.90169943749473, -58.778525229247336`}]}], {{{0, 1}, {-1,
                  0}}, Center}], 
               GeometricTransformationBox[
                LineBox[{
                 Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                  Scaled[{0.006, -1.4695761589768239`*^-18}, {
                   100., -2.4492935982947064`*^-14}]}], {{{0, 1}, {-1, 0}}, 
                 Center}]}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {InsetBox[
                RotationBox[
                 StyleBox["\<\"Calcium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.47213595499958, 4.702282018339785}, \
{80.90169943749474, 58.778525229247315}], {-0.8090169943749475, -0.5877852522924731},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Cholesterol\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.4721359549995796, 7.608452130361228}, \
{30.901699437494745, 95.10565162951535}], {-0.30901699437494745, -0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Iron\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-2.4721359549995787, 7.608452130361229}, \
{-30.901699437494734, 95.10565162951536}], {0.30901699437494734, -0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Sodium\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.472135954999579, 4.702282018339786}, \
{-80.90169943749473, 58.77852522924732}], {0.8090169943749473, -0.5877852522924732},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Carbohydrates\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-8., 9.797174393178826*^-16}, \
{-100., 1.2246467991473532*^-14}], {1., -1.2246467991473532*^-16},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{-6.47213595499958, -4.702282018339784}, \
{-80.90169943749474, -58.7785252292473}], {0.8090169943749475, 0.587785252292473},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Protein\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], Offset[
                {-2.4721359549995805, -7.608452130361228}, \
{-30.901699437494756, -95.10565162951535}], {0.30901699437494756, 0.9510565162951535},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Saturated Fat\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{2.472135954999578, -7.608452130361229}, \
{30.901699437494724, -95.10565162951536}], {-0.30901699437494723, 0.9510565162951536},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Vitamin C\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{6.472135954999579, -4.702282018339787}, \
{80.90169943749473, -58.778525229247336}], {-0.8090169943749473, 0.5877852522924734},
                Background->Automatic], InsetBox[
                RotationBox[
                 StyleBox["\<\"Total Calories\"\>",
                  StripOnInput->False,
                  FontSize->16],
                 BoxRotation->-1.5707963267948966`], 
                Offset[{8., -1.959434878635765*^-15}, \
{100., -2.4492935982947064*^-14}], {-1., 2.4492935982947064*^-16},
                Background->Automatic]}, 
              CircleBox[{0, 0}, 100., {0., 6.283185307179586}]}, {
              {GrayLevel[0.6], 
               StyleBox[{},
                Antialiasing->False]}, {}, 
              GeometricTransformationBox[
               LineBox[{}], {{{0, 1}, {-1, 0}}, Center}], {}}}},
           ContentSelectable->False,
           DisplayFunction->Identity,
           GridLinesStyle->Dashing[{Small, Small}],
           ImageSize->Medium,
           PlotRange->{{All, All}, {All, All}},
           PlotRangePadding->Scaled[0.05]],
          BoxRotation->1.5707963267948966`]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Center}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.734109784038664*^9, 
  3.7341098539326525`*^9}},ExpressionUUID->"05492963-78de-43bc-9332-\
917aa052c8df"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 11, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 216, 4, 67, "Section",ExpressionUUID->"12da3c17-3b11-4c93-ad2d-322a71677a35"],
Cell[CellGroupData[{
Cell[821, 30, 167, 3, 53, "Subsection",ExpressionUUID->"627fd8b8-42c7-4e66-8cd8-c9cff5885e6b"],
Cell[991, 35, 254, 6, 28, "Input",ExpressionUUID->"dbe7c7c5-7242-4639-ac92-1afa6a962c62"],
Cell[1248, 43, 387, 8, 28, "Input",ExpressionUUID->"f5c19d86-ad58-4eed-bb59-66991dc259d8"],
Cell[CellGroupData[{
Cell[1660, 55, 193, 4, 28, "Input",ExpressionUUID->"e239edc9-cf71-4ad8-a412-b550a9e787e9"],
Cell[1856, 61, 285, 5, 32, "Output",ExpressionUUID->"ac327dbe-43c6-40b2-8b7e-bc1f00e73ced"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2178, 71, 337, 9, 28, "Input",ExpressionUUID->"b5b27e4d-6b98-403e-9bbc-008cad00eed3"],
Cell[2518, 82, 94479, 1966, 223, "Output",ExpressionUUID->"25c3bb56-0aa7-403a-a87c-b725135eb87d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97046, 2054, 219, 4, 53, "Subsection",ExpressionUUID->"47872461-7698-4909-a28a-1be1ab0a1f4b"],
Cell[CellGroupData[{
Cell[97290, 2062, 589, 14, 86, "Input",ExpressionUUID->"9648d810-20ce-4025-bf38-c5dd189b7ee6"],
Cell[97882, 2078, 10841, 250, 377, "Output",ExpressionUUID->"225d36ea-ec06-43ce-a163-42b7467ee08b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108772, 2334, 165, 3, 53, "Subsection",ExpressionUUID->"bd12a3e3-2840-48d9-a57b-3b131f50ac89"],
Cell[108940, 2339, 620, 16, 28, "Input",ExpressionUUID->"c906f86d-762e-47ac-9468-77b2d76129cf"],
Cell[CellGroupData[{
Cell[109585, 2359, 785, 19, 48, "Input",ExpressionUUID->"e99a5d54-701a-4928-9c21-7a0bf41f103f"],
Cell[110373, 2380, 6060, 161, 78, "Output",ExpressionUUID->"6d6fea89-421c-4b11-88f2-6fbf0d4e4a21"],
Cell[116436, 2543, 304, 5, 32, "Output",ExpressionUUID->"c9824f59-3eef-41ff-9764-4ff1c9786211"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116777, 2553, 225, 5, 28, "Input",ExpressionUUID->"1b3e8565-f70b-4e9a-bbb3-1b741df5cf2a"],
Cell[117005, 2560, 155, 3, 32, "Output",ExpressionUUID->"4d57df26-1b8f-4240-a0ae-b3cc742d3589"]
}, Open  ]],
Cell[117175, 2566, 335, 7, 56, "Text",ExpressionUUID->"2d01ecdb-ba56-4a08-9539-a6942c854d0d"],
Cell[CellGroupData[{
Cell[117535, 2577, 451, 12, 28, "Input",ExpressionUUID->"503c369c-75f5-431f-b78d-7d1a53abcb74"],
Cell[117989, 2591, 268, 5, 41, "Output",ExpressionUUID->"e6584d29-db80-4b42-8a3f-6908a1b6704c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118294, 2601, 1492, 38, 181, "Input",ExpressionUUID->"85939ca9-eb29-4a3b-8867-5e5bbd01503a"],
Cell[119789, 2641, 120769, 3036, 92, "Output",ExpressionUUID->"ae13e40c-ffc5-4e00-923c-43a9d884e031"]
}, Open  ]],
Cell[240573, 5680, 354, 9, 28, "Input",ExpressionUUID->"54e81495-d549-4de4-9796-2c8c55d7b373"],
Cell[CellGroupData[{
Cell[240952, 5693, 973, 24, 124, "Input",ExpressionUUID->"3d025157-d94c-466f-83ea-8c68ae2f1c15"],
Cell[241928, 5719, 6071, 174, 245, "Output",ExpressionUUID->"a4200ba0-9839-4d49-808c-fe740979dd6f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248048, 5899, 195, 3, 53, "Subsection",ExpressionUUID->"64272c8c-c0e5-4c66-b049-bce1658a096c"],
Cell[248246, 5904, 185, 3, 34, "Text",ExpressionUUID->"0368df97-e281-4853-82f1-a0bb6677021b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248468, 5912, 163, 3, 53, "Subsection",ExpressionUUID->"8771ef9c-8a81-4378-8b63-cebc97cae826"],
Cell[CellGroupData[{
Cell[248656, 5919, 169, 3, 44, "Subsubsection",ExpressionUUID->"5cd26fab-78e3-4881-8b3a-f7b6c2fdab0c"],
Cell[248828, 5924, 419, 12, 28, "Input",ExpressionUUID->"9076a049-8264-43a1-9bb1-180be18075e4"],
Cell[CellGroupData[{
Cell[249272, 5940, 1038, 24, 28, "Input",ExpressionUUID->"902801fb-b5e6-4928-9396-feb27b8e6e5d"],
Cell[250313, 5966, 17448, 489, 396, "Output",ExpressionUUID->"739f4cd7-a83e-44bd-a3b3-42f608830737"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[267810, 6461, 254, 4, 44, "Subsubsection",ExpressionUUID->"01e7a0b2-b8c8-44e8-aee1-666da8ff0141"],
Cell[268067, 6467, 398, 8, 56, "Text",ExpressionUUID->"f021170a-4260-4e83-9363-140395b9b700"],
Cell[CellGroupData[{
Cell[268490, 6479, 1414, 32, 181, "Input",ExpressionUUID->"efece8d5-5b4d-42a7-b315-50b93b299a08"],
Cell[269907, 6513, 26669, 677, 518, "Output",ExpressionUUID->"ea441a66-0aa2-42ea-b5a4-c433fbe30d7a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[296625, 7196, 249, 4, 36, "Subsubsection",ExpressionUUID->"bb9c7077-542b-45e0-ba07-0d001f00b1af"],
Cell[CellGroupData[{
Cell[296899, 7204, 2437, 55, 219, "Input",ExpressionUUID->"9704c6dd-4c19-4182-bbd6-537ef2e6c94b"],
Cell[299339, 7261, 141921, 2759, 398, "Output",ExpressionUUID->"1e453ead-b965-4040-a9c9-71fd7829fa8d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[441321, 10027, 171, 3, 53, "Subsection",ExpressionUUID->"34ff79a8-c943-4af3-b922-b31155b2d3e7"],
Cell[441495, 10032, 3134, 69, 238, "Input",ExpressionUUID->"1c8c81c4-15a9-467a-8aef-662ffc372e1b"],
Cell[CellGroupData[{
Cell[444654, 10105, 341, 8, 28, "Input",ExpressionUUID->"a8a57b5a-d504-4539-8a91-c582f84fa8d6"],
Cell[444998, 10115, 197009, 3870, 886, "Output",ExpressionUUID->"05492963-78de-43bc-9332-917aa052c8df"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

