(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    355407,       7584]
NotebookOptionsPosition[    343266,       7357]
NotebookOutlinePosition[    343630,       7373]
CellTagsIndexPosition[    343587,       7370]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Meal Tracker Development", "Title",
 CellChangeTimes->{{3.7431662498041563`*^9, 
  3.743166259862156*^9}},ExpressionUUID->"b1dcdd09-a8e2-4035-935a-\
a83d6bcca31e"],

Cell[CellGroupData[{

Cell["Set Meal Tracker Cloud Path and Databin", "Section",
 CellChangeTimes->{{3.743164282046728*^9, 3.7431642888347282`*^9}, {
  3.7431664691333103`*^9, 
  3.7431664848288794`*^9}},ExpressionUUID->"0063112b-d067-4127-972c-\
91e346c7d7de"],

Cell["\<\
This will be the directory where your meal tracker is deployed in the Wolfram \
Cloud.
Using a relative path, like this one, will be inside your user\
\[CloseCurlyQuote]s \[OpenCurlyDoubleQuote]home\[CloseCurlyDoubleQuote] cloud \
directory.\
\>", "Text",
 CellChangeTimes->{{3.743164323008728*^9, 3.743164425922006*^9}, {
  3.7431650196417294`*^9, 
  3.7431650216849337`*^9}},ExpressionUUID->"4f2e33b5-f536-43ab-84c8-\
2ef337990a2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$MealTrackerCloudObject", "=", 
  RowBox[{"CloudObject", "[", "\"\<MealTracker/Andrew\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.743164291374728*^9, 3.743164318798728*^9}, 
   3.7431643963180866`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"ccd8beae-f565-493a-baf3-1bdf4cc50a12"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew\"",
     "https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.743164320873728*^9, 3.74316442834149*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"04bafe26-906a-4024-86ee-105f70a7b7ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"$MealTrackerHistoryDatabin", "=", 
  RowBox[{"Databin", "[", "\"\<YourDatabinIDGoesHere\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.743166488425239*^9, 
  3.7431664989882956`*^9}},ExpressionUUID->"72cb6b6f-6a11-47b8-811b-\
6f8cb6ca280c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create or Update Default User Data", "Section",
 CellChangeTimes->{{3.718381019153678*^9, 3.7183810293204746`*^9}, {
  3.7431654311601562`*^9, 
  3.7431654426181564`*^9}},ExpressionUUID->"24597c56-e243-4c42-a218-\
d096cb3605c6"],

Cell["\<\
This needs to be done whenever there is a code change to the underlying \
EntityStores.\
\>", "Text",
 CellChangeTimes->{{3.731849287423934*^9, 
  3.7318493063438263`*^9}},ExpressionUUID->"f4d54ec2-0e0d-4023-bccb-\
8b0b9216c2e4"],

Cell[CellGroupData[{

Cell["Default \[OpenCurlyDoubleQuote]MyFood\[CloseCurlyDoubleQuote] \
EntityStore", "Subsection",
 CellChangeTimes->{{3.7274664011648946`*^9, 3.7274664033258944`*^9}, {
  3.7299655762640696`*^9, 
  3.729965582286672*^9}},ExpressionUUID->"2379eb64-9608-425c-83e9-\
89b0b943efa9"],

Cell[CellGroupData[{

Cell["Create new entity store from scratch (Old, loses data)", "Subsubsection",
 CellChangeTimes->{{3.7318478920263987`*^9, 3.731847901627359*^9}, {
  3.731849033248519*^9, 
  3.731849038928087*^9}},ExpressionUUID->"997b3107-c1be-44e9-950a-\
ebc45015cf5b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"EntityUnregister", "[", "\"\<MyFood\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Internal`ClearEntityValueCache", "[", "\"\<MyFood\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"store", "=", 
    RowBox[{"GenerateEntityStore", "[", 
     RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyFood\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<white bread\>\"", ",", " ", "\"\<peanut butter\>\"", ",", " ", 
        "\"\<jelly\>\"", ",", "\"\<milk\>\"", ",", "\"\<oats\>\"", ",", 
        "\"\<greek yogurt\>\"", ",", "\"\<flax seed\>\"", ",", 
        "\"\<honey\>\"", ",", "\"\<vanilla extract\>\""}], "}"}]}], "]"}]}], 
   ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EntityRegister", "[", "store", "]"}]}], "Input",
 CellChangeTimes->{{3.7299572890253773`*^9, 3.7299572892173967`*^9}, {
   3.729961936043056*^9, 3.7299619681092625`*^9}, {3.7299624284902954`*^9, 
   3.729962433568804*^9}, {3.7299624687073174`*^9, 3.7299624959850445`*^9}, {
   3.729962542237669*^9, 3.729962575715017*^9}, {3.729964458650998*^9, 
   3.7299644589889984`*^9}, {3.7311736711034727`*^9, 
   3.7311736784900727`*^9}, {3.7311741853935966`*^9, 
   3.7311742732019825`*^9}, {3.7311743209659047`*^9, 3.731174328339153*^9}, {
   3.7311743587377543`*^9, 3.731174375364066*^9}, 3.7431644457519712`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"69f99c9f-97ab-4781-9762-c9f1aa1ee8cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Create new EntityStore from an old EntityStore (Preferred, keeps data)\
\>", "Subsubsection",
 CellChangeTimes->{{3.731847906254822*^9, 3.731847933382534*^9}, {
  3.7318487641589756`*^9, 3.731848794628976*^9}, {3.7318490429744916`*^9, 
  3.7318490463088255`*^9}},ExpressionUUID->"7a7080c4-6e31-44cd-87cd-\
1b17aae5bd05"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", "]"}]}], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"f686910a-17a1-4216-9849-4ba9e94d4ad1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadEntityStore", "[", 
  RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyFood\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7318481863018236`*^9, 3.7318481943826313`*^9}, 
   3.7431654821141562`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"7b746ef9-a16c-420c-bcc1-1822cea63880"],

Cell[BoxData[
 RowBox[{"{", "\<\"MyFood\"\>", "}"}]], "Output",
 CellChangeTimes->{3.7318482014533386`*^9, 3.7318486612159758`*^9, 
  3.731848807984976*^9, 3.7326431284474306`*^9, 3.733495159757634*^9, 
  3.733498987436378*^9, 3.743165540312156*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"055e7107-7209-4bdf-ae8c-1b50e7eb286d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"oldStore", "=", 
   RowBox[{
    RowBox[{"Entity", "[", "\"\<MyFood\>\"", "]"}], "[", 
    "\"\<EntityStore\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7318482144666395`*^9, 3.7318482301662097`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"4daf345c-b3a5-48f9-a272-eb50f42e49fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oldEntityData", "=", 
   RowBox[{"oldStore", "[", 
    RowBox[{"[", 
     RowBox[{
     "1", ",", "\"\<Types\>\"", ",", "\"\<MyFood\>\"", ",", 
      "\"\<Entities\>\""}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"oldEntityData", "//", "Keys"}]}], "Input",
 CellChangeTimes->{{3.731848232952488*^9, 3.7318482956527576`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"da76f5ab-7f03-400b-831f-cb7b65345841"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"WhiteBread\"\>", ",", "\<\"PeanutButter\"\>", 
   ",", "\<\"Jelly\"\>", ",", "\<\"Milk\"\>", ",", "\<\"GreekYogurt\"\>", 
   ",", "\<\"FlaxSeed\"\>", ",", "\<\"Honey\"\>", 
   ",", "\<\"VanillaExtract\"\>", ",", "\<\"Egg\"\>", ",", "\<\"Oats\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7318482935705495`*^9, 3.731848295987791*^9}, 
   3.7318486612959757`*^9, 3.7318488080459757`*^9, 3.732643129223741*^9, 
   3.733495161980857*^9, 3.7334989892225566`*^9, 3.743165543417156*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"6a60587a-cbc8-42fc-8c53-5555c47a3a6b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Update basic data for test deployments (OPTIONAL)", "Subsubsection",
 CellChangeTimes->{{3.733498568354474*^9, 
  3.7334985916177998`*^9}},ExpressionUUID->"15d75e51-7618-4a35-8bde-\
70084de35121"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newBasicData", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"oldEntityData", "[", 
      RowBox[{"[", 
       RowBox[{";;", "9"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{"\"\<Oats\>\"", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\"\<Label\>\"", "\[Rule]", "\"\<Oats\>\""}], ",", 
         RowBox[{"\"\<Food\>\"", "\[Rule]", 
          TemplateBox[{"\"Quaker Oats Old Fashioned\"",RowBox[{"Entity", "[", 
              RowBox[{"\"Food\"", ",", "\"QuakerOatsOldFashioned::8t545\""}], 
              "]"}],"\"Entity[\\\"Food\\\", \\\"QuakerOatsOldFashioned::8t545\
\\\"]\"","\"food\""},
           "Entity"]}], ",", 
         RowBox[{
         "\"\<ServingSizeString\>\"", "\[Rule]", "\"\<0.5 cup;40. g\>\""}], 
         ",", 
         RowBox[{"\"\<ServingSizes\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            TemplateBox[{"0.5`","\"cups\"","cups","\"Cups\""},
             "Quantity"], ",", 
            TemplateBox[{"40.`","\"g\"","grams","\"Grams\""},
             "Quantity"]}], "}"}]}], ",", 
         RowBox[{"\"\<Description\>\"", "\[Rule]", "\"\<Oats\>\""}], ",", 
         RowBox[{"\"\<ServingSize\>\"", "\[Rule]", "\"\<0.5 cup;40. g\>\""}], 
         ",", 
         RowBox[{"\"\<TotalCalories\>\"", "\[Rule]", 
          
          TemplateBox[{
           "150.`","\"Cal\"","dietary Calories","\"LargeCalories\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<Calcium\>\"", "\[Rule]", 
          TemplateBox[{"0.`","\"mg\"","milligrams","\"Milligrams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<Cholesterol\>\"", "\[Rule]", 
          TemplateBox[{"0.`","\"mg\"","milligrams","\"Milligrams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<Iron\>\"", "\[Rule]", 
          TemplateBox[{"1.8`","\"mg\"","milligrams","\"Milligrams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<Sodium\>\"", "\[Rule]", 
          TemplateBox[{"0.`","\"mg\"","milligrams","\"Milligrams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<TotalCarbohydrates\>\"", "\[Rule]", 
          TemplateBox[{"27.`","\"g\"","grams","\"Grams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<TotalFat\>\"", "\[Rule]", 
          TemplateBox[{"3.`","\"g\"","grams","\"Grams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<TotalFiber\>\"", "\[Rule]", 
          RowBox[{"Missing", "[", "\"\<NoInput\>\"", "]"}]}], ",", 
         RowBox[{"\"\<TotalProtein\>\"", "\[Rule]", 
          TemplateBox[{"5.`","\"g\"","grams","\"Grams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<TotalSaturatedFat\>\"", "\[Rule]", 
          TemplateBox[{"0.5`","\"g\"","grams","\"Grams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<VitaminC\>\"", "\[Rule]", 
          TemplateBox[{"0.`","\"mg\"","milligrams","\"Milligrams\""},
           "Quantity"]}], ",", 
         RowBox[{"\"\<Resubmit\>\"", "\[Rule]", "True"}], ",", 
         RowBox[{"\"\<Entity\>\"", "\[Rule]", 
          TemplateBox[{"\"Quaker Oats Old Fashioned\"",RowBox[{"Entity", "[", 
              RowBox[{"\"Food\"", ",", "\"QuakerOatsOldFashioned::8t545\""}], 
              "]"}],"\"Entity[\\\"Food\\\", \\\"QuakerOatsOldFashioned::8t545\
\\\"]\"","\"food\""},
           "Entity"]}], ",", 
         RowBox[{"\"\<DateCreated\>\"", "\[Rule]", 
          TemplateBox[{RowBox[{"\"Thu 29 Mar 2018 11:57:46\"", 
              StyleBox[
               RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                 StyleBox[
                  RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
                  False]}], FontColor -> GrayLevel[0.5]]}],
            RowBox[{"DateObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{
                   "2018", ",", "3", ",", "29", ",", "11", ",", "57", ",", 
                    "46.197763`8.417195923159113"}], "}"}], ",", 
                "\"Instant\"", ",", "\"Gregorian\"", ",", 
                RowBox[{"-", "5.`"}]}], "]"}]},
           "DateObject",
           Editable->False]}], ",", 
         RowBox[{"\"\<DateModified\>\"", "\[Rule]", 
          TemplateBox[{RowBox[{"\"Thu 29 Mar 2018 11:57:46\"", 
              StyleBox[
               RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
                 StyleBox[
                  RowBox[{"-", "5.`"}], NumberMarks -> False, StripOnInput -> 
                  False]}], FontColor -> GrayLevel[0.5]]}],
            RowBox[{"DateObject", "[", 
              RowBox[{
                RowBox[{"{", 
                  
                  RowBox[{
                   "2018", ",", "3", ",", "29", ",", "11", ",", "57", ",", 
                    "46.198024`8.4171983767528"}], "}"}], ",", "\"Instant\"", 
                ",", "\"Gregorian\"", ",", 
                RowBox[{"-", "5.`"}]}], "]"}]},
           "DateObject",
           Editable->False]}]}], "\[RightAssociation]"}]}], "|>"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.733496525997259*^9, 3.733496554126071*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"49169474-cd46-4e70-a87e-2cc3665ab2d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cleanerBasicData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"RotateLeft", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{"#", ",", 
        RowBox[{"\"\<DateCreated\>\"", "\[Rule]", 
         RowBox[{"Lookup", "[", 
          RowBox[{"#", ",", "\"\<DateCreated\>\"", ",", 
           RowBox[{"Lookup", "[", 
            RowBox[{"#", ",", "\"\<DateModified\>\"", ",", "Now"}], "]"}]}], 
          "]"}]}]}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Description\>\"", ",", "\"\<ServingSize\>\"", ",", 
         "\"\<Entity\>\""}], "}"}], "]"}], "/@", "newBasicData"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7334965595536137`*^9, 3.733496729691626*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"2005e3d7-44f5-4d8d-ad5c-45f0813164ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Use", " ", "this", " ", "to", " ", "create", " ", "a", " ", "new", " ", 
    "data", " ", "file", " ", "for", " ", "updating", " ", "the", " ", 
    "default"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Default\>\"", ",", 
       "\"\<MyFood\>\""}], "}"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{
        RowBox[{"DateString", "[", "\"\<ISODateTime\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<T\>\"", "\[Rule]", "\"\<_\>\""}], ",", 
          RowBox[{"\"\<:\>\"", "\[Rule]", "\"\<-\>\""}]}], "}"}]}], "]"}], 
      "<>", "\"\<.m\>\""}], ",", "\[IndentingNewLine]", "cleanerBasicData"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.733495194657124*^9, 3.733495198988557*^9}, {
  3.7334952394256*^9, 3.7334953857335176`*^9}, {3.7334955299685173`*^9, 
  3.7334955520015173`*^9}, {3.7334956701895175`*^9, 3.7334956708665175`*^9}, {
  3.733495808677518*^9, 3.7334958436745176`*^9}, {3.7334958891865177`*^9, 
  3.7334959285425177`*^9}, {3.733496511080767*^9, 3.733496523570016*^9}, {
  3.733496735583215*^9, 3.733496738408498*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"05cd6cb5-3a28-473c-933d-19e42d1dc69a"],

Cell[BoxData["\<\"C:\\\\Users\\\\andrews\\\\Stash\\\\open-source-meal-\
tracking\\\\MealTrackerApp\\\\Default\\\\MyFood\"\>"], "Output",
 CellChangeTimes->{{3.733495192352894*^9, 3.733495199361594*^9}, 
   3.7334952411047683`*^9, {3.733495319978655*^9, 3.7334953635640125`*^9}, {
   3.7334955409955177`*^9, 3.733495543830518*^9}, 3.7334956819805174`*^9, 
   3.733496738988556*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"ac4fad8e-74c3-4864-970b-a6e75db2639c"],

Cell[BoxData["\<\"2018-04-23_13-25-38.m\"\>"], "Output",
 CellChangeTimes->{{3.733495192352894*^9, 3.733495199361594*^9}, 
   3.7334952411047683`*^9, {3.733495319978655*^9, 3.7334953635640125`*^9}, {
   3.7334955409955177`*^9, 3.733495543830518*^9}, 3.7334956819805174`*^9, 
   3.7334967389965563`*^9},ExpressionUUID->"d39e4ed6-f5b6-4a64-b7f7-\
b540fc97f002"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test EntityStore", "Subsubsection",
 CellChangeTimes->{{3.7334985972003584`*^9, 
  3.7334986026008987`*^9}},ExpressionUUID->"ff530730-c89c-439d-8b62-\
9a2fd074aab4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EntityUnregister", "[", "\"\<MyFood\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Internal`ClearEntityValueCache", "[", "\"\<MyFood\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"store", "=", 
    RowBox[{"GenerateEntityStore", "[", 
     RowBox[{
     "$MealTrackerCloudObject", ",", "\"\<MyFood\>\"", ",", "oldEntityData"}],
      "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EntityRegister", "[", "store", "]"}]}], "Input",
 CellChangeTimes->{{3.7318486857529755`*^9, 3.7318487175719757`*^9}, 
   3.7334991443920717`*^9, 3.7335034051721015`*^9, 3.743165513431156*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"3106de44-cf70-44e1-8425-230e83412a51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.15520695147121988`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.731848694918976*^9, 3.7318487265919757`*^9}, 
   3.7318488081849756`*^9, 3.7326431739956427`*^9, 3.7334991453381667`*^9, 
   3.743165571362156*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"4c4f4444-0b58-441c-aa67-c4e6a8c12ec6"],

Cell[BoxData[
 RowBox[{"{", "\<\"MyFood\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.731848694918976*^9, 3.7318487265919757`*^9}, 
   3.7318488081849756`*^9, 3.7326431739956427`*^9, 3.7334991453381667`*^9, 
   3.7431655713681564`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"bf24addb-04b7-46d5-a740-53c8c02d6120"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<MyFood\>\"", ",", "\"\<EntityCount\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7318487339509754`*^9, 3.7318487450689754`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"6ae0c91e-56b1-4166-a433-64ef5093ae6c"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.7318487453729753`*^9, 3.7318488082029753`*^9, 
  3.7326431764746337`*^9, 3.7334991469303255`*^9, 3.7431655740411563`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"9db052c8-0f59-41b7-ba1a-eef1d707beb9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Update EntityStore in cloud", "Subsubsection",
 CellChangeTimes->{{3.7318479414433403`*^9, 
  3.7318479482190175`*^9}},ExpressionUUID->"33763dc1-f76b-4a6e-b037-\
6a18b191418a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", "]"}]}], "Input",
 CellLabel->"In[53]:=",ExpressionUUID->"d0f7dc38-64ed-4a23-8b61-4fd46ab459cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UpdateEntityStore", "[", 
  RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyFood\>\"", ",", "store"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7299629595233936`*^9, 3.729962979559397*^9}, 
   3.7431655240051565`*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"68090166-7b26-4df4-be6d-36004801a8f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew/MyFood/\
2018-08-13_11-13-02.WXF\"",
     "https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew/MyFood/\
2018-08-13_11-13-02.WXF"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew/MyFood/\
2018-08-13_11-13-02.WXF"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.729962992871728*^9, 3.72996319541198*^9, 
  3.7299632318356223`*^9, 3.72996348314075*^9, 3.7299635145518913`*^9, 
  3.7311744043720617`*^9, 3.731175021050068*^9, 3.731243777576311*^9, 
  3.7318490066388583`*^9, 3.733499171682801*^9, 3.743165583649156*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"b24a23c5-fb21-4498-8256-d56929543bad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadEntityStore", "[", 
  RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyFood\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.729962997827224*^9, 3.729963010220463*^9}, 
   3.743165588242156*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"4fe2df3c-7cc6-46fa-8892-42262adbd61a"],

Cell[BoxData[
 RowBox[{"{", "\<\"MyFood\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.7299630151759586`*^9, 3.7299630433007708`*^9}, 
   3.7299631288813276`*^9, 3.729963246408079*^9, 3.729963517993235*^9, 
   3.7311744143303275`*^9, 3.731175032311347*^9, 3.731243787714325*^9, 
   3.7318490217663713`*^9, 3.733499175125145*^9, 3.743165590128156*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"d0f9b0cd-c838-4f7a-a7c1-61af8cccb4fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{"\"\<MyFood\>\"", ",", "\"\<EntityCount\>\""}], "]"}]], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"b53cdc25-8bdd-43ed-a37b-ea2263033acd"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.7318490218113756`*^9, 3.7334991758762197`*^9, 
  3.743165591612156*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8d4efec4-5218-444d-8e54-c212c59117b7"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Default \[OpenCurlyDoubleQuote]MyMeal\[CloseCurlyDoubleQuote] \
EntityStore", "Subsection",
 CellChangeTimes->{{3.7312440926596384`*^9, 3.7312440940286384`*^9}, {
  3.7312459732204323`*^9, 
  3.731245977731432*^9}},ExpressionUUID->"9c35b16c-2126-46e2-ae0c-\
3601efb6abd3"],

Cell[CellGroupData[{

Cell["Create new EntityStore from scratch (Old, loses data)", "Subsubsection",
 CellChangeTimes->{{3.731849055578752*^9, 
  3.731849069378132*^9}},ExpressionUUID->"75faa1dc-16c2-400e-9164-\
2d57fcf74885"],

Cell["\<\
This loads from the latest file in MealTrackerApp/Default/MyMeal/\
\>", "Text",
 CellChangeTimes->{{3.7312442212786384`*^9, 
  3.7312442403636384`*^9}},ExpressionUUID->"2bb3554e-1f4c-4091-8f4a-\
26463f99053f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"EntityUnregister", "[", "\"\<MyMeal\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Internal`ClearEntityValueCache", "[", "\"\<MyMeal\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"mealStore", "=", 
    RowBox[{"GenerateEntityStore", "[", 
     RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyMeal\>\""}], "]"}]}], 
   ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EntityRegister", "[", "mealStore", "]"}]}], "Input",
 CellChangeTimes->{{3.731244094576638*^9, 3.7312441796396384`*^9}, 
   3.7431656036231565`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"f97bc631-d441-4c16-b4e9-07cf6bb0f879"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.3842653023213383`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7312441133966384`*^9, 3.7312441835676384`*^9, 3.731245110306585*^9, 
   3.7312454223237834`*^9, 3.731245983678432*^9, 3.7312462579264317`*^9, 
   3.7312463238534317`*^9, 3.731246597734432*^9, {3.731773873328724*^9, 
   3.731773894117423*^9}, 3.731773949068574*^9, {3.731774000304347*^9, 
   3.731774019997301*^9}, 3.731774104678426*^9, 3.731774223528054*^9, 
   3.7317780625776153`*^9, 3.743165609496156*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"a8b8282d-302c-495e-a03d-9bb3766864ab"],

Cell[BoxData[
 RowBox[{"{", "\<\"MyMeal\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.7312441133966384`*^9, 3.7312441835676384`*^9, 3.731245110306585*^9, 
   3.7312454223237834`*^9, 3.731245983678432*^9, 3.7312462579264317`*^9, 
   3.7312463238534317`*^9, 3.731246597734432*^9, {3.731773873328724*^9, 
   3.731773894117423*^9}, 3.731773949068574*^9, {3.731774000304347*^9, 
   3.731774019997301*^9}, 3.731774104678426*^9, 3.731774223528054*^9, 
   3.7317780625776153`*^9, 3.743165609501156*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"4ba94e2a-5204-4693-a7bf-ff17e55b35e9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Create new EntityStore from an old EntityStore (Preferred, keeps data)\
\>", "Subsubsection",
 CellChangeTimes->{{3.7318490848056746`*^9, 
  3.7318490931945133`*^9}},ExpressionUUID->"d65ccdef-b74c-46ba-b9a0-\
dd0aa552285f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", "]"}]}], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"6aa19c71-62d9-409a-93b5-6c167a7a9b99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadEntityStore", "[", 
  RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyMeal\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7318481863018236`*^9, 3.7318481943826313`*^9}, {
   3.7318491039085846`*^9, 3.731849104752669*^9}, 3.743165617681156*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"44674947-b396-446a-baa1-5ac70c9aa139"],

Cell[BoxData[
 RowBox[{"{", "\<\"MyMeal\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.7318482014533386`*^9, 3.7318486612159758`*^9, 3.731848807984976*^9, 
   3.73184910746294*^9, {3.7326432936951427`*^9, 3.7326433957245445`*^9}, 
   3.732643453987194*^9, {3.732643510212103*^9, 3.7326435395210342`*^9}, {
   3.732643612140295*^9, 3.7326436452796087`*^9}, 3.7326437012232027`*^9, 
   3.733499960408101*^9, 3.743165619546156*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"6a9c14c5-13b8-43aa-bd4b-01333765fe4d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"oldStore", "=", 
   RowBox[{
    RowBox[{"Entity", "[", "\"\<MyMeal\>\"", "]"}], "[", 
    "\"\<EntityStore\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7318482144666395`*^9, 3.7318482301662097`*^9}, 
   3.7318491107492685`*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"ac3553d2-871b-4570-97de-b7b9a49c7da2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oldEntityData", "=", 
   RowBox[{"oldStore", "[", 
    RowBox[{"[", 
     RowBox[{
     "1", ",", "\"\<Types\>\"", ",", "\"\<MyMeal\>\"", ",", 
      "\"\<Entities\>\""}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"oldEntityData", "//", "Keys"}]}], "Input",
 CellChangeTimes->{{3.731848232952488*^9, 3.7318482956527576`*^9}, 
   3.731849114915685*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"2ccb67b3-61d5-4f71-a8ee-80515d194bf8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"PB&JSandwich\"\>", ",", "\<\"OvernightOats\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7318482935705495`*^9, 3.731848295987791*^9}, 
   3.7318486612959757`*^9, 3.7318488080459757`*^9, 3.731849115917785*^9, {
   3.7326432951794395`*^9, 3.7326433957455482`*^9}, 3.7326434540081987`*^9, {
   3.732643510231105*^9, 3.732643539542036*^9}, {3.732643612161297*^9, 
   3.732643645299611*^9}, 3.732643701247205*^9, 3.7334999630221014`*^9, 
   3.7431656225471563`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"9a49ad03-9c40-4608-bfc2-a30f61edd605"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EntityUnregister", "[", "\"\<MyMeal\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Internal`ClearEntityValueCache", "[", "\"\<MyMeal\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"mealStore", "=", 
    RowBox[{"GenerateEntityStore", "[", 
     RowBox[{
     "$MealTrackerCloudObject", ",", "\"\<MyMeal\>\"", ",", "oldEntityData"}],
      "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"EntityRegister", "[", "mealStore", "]"}]}], "Input",
 CellChangeTimes->{{3.7318486857529755`*^9, 3.7318487175719757`*^9}, {
   3.7318491204672403`*^9, 3.731849146277821*^9}, 3.7431656274491563`*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"17f70711-34ee-4dd5-8711-3a8a3c44f737"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.13156062201375243`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.731848694918976*^9, 3.7318487265919757`*^9}, 
   3.7318488081849756`*^9, {3.7318491257437677`*^9, 3.73184914686788*^9}, {
   3.732643296894782*^9, 3.732643395889577*^9}, 3.732643454146226*^9, {
   3.732643510367119*^9, 3.7326435396790495`*^9}, {3.7326436122913103`*^9, 
   3.7326436454436255`*^9}, 3.7326437013832183`*^9, 3.7334999827131014`*^9, 
   3.743165630499156*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"a84d2aaa-c240-4dbd-8a1a-28a3055270ab"],

Cell[BoxData[
 RowBox[{"{", "\<\"MyMeal\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.731848694918976*^9, 3.7318487265919757`*^9}, 
   3.7318488081849756`*^9, {3.7318491257437677`*^9, 3.73184914686788*^9}, {
   3.732643296894782*^9, 3.732643395889577*^9}, 3.732643454146226*^9, {
   3.732643510367119*^9, 3.7326435396790495`*^9}, {3.7326436122913103`*^9, 
   3.7326436454436255`*^9}, 3.7326437013832183`*^9, 3.7334999827131014`*^9, 
   3.7431656305051565`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d52ee976-dfd4-4186-92a3-e640c81ffeb2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Update EntityStore in cloud", "Subsubsection",
 CellChangeTimes->{{3.731849074730667*^9, 
  3.7318490811383076`*^9}},ExpressionUUID->"556a86cc-dbea-4e9d-9771-\
f009512d9c5a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", "]"}]}], "Input",
 CellLabel->"In[75]:=",ExpressionUUID->"e3800d29-48b3-4082-9dc7-9a7e8d8e3ff5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UpdateEntityStore", "[", 
  RowBox[{
  "$MealTrackerCloudObject", ",", "\"\<MyMeal\>\"", ",", "mealStore"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7312441865036383`*^9, 3.731244200609638*^9}, 
   3.7431656485121565`*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"2af9c0c2-1231-4f16-8896-ad1a68071542"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew/MyMeal/\
2018-08-13_11-14-06.WXF\"",
     "https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew/MyMeal/\
2018-08-13_11-14-06.WXF"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/andrews/MealTracker/Andrew/MyMeal/\
2018-08-13_11-14-06.WXF"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.731244211788638*^9, 3.7312451175683107`*^9, 
  3.731245436860237*^9, 3.7317780739327507`*^9, 3.7318491566258554`*^9, 
  3.732643710825163*^9, 3.7335000334751015`*^9, 3.7431656502031565`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"7594eaef-3c49-447b-9632-f96bccba0a60"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Run test suites", "Section",
 CellChangeTimes->{{3.7183856605700936`*^9, 3.7183856616630936`*^9}, {
  3.743165761893156*^9, 3.743165770176156*^9}, {3.743166293378156*^9, 
  3.7431662958401566`*^9}},ExpressionUUID->"dcecef7e-512a-49b3-9050-\
1cd95f4e7ecf"],

Cell[CellGroupData[{

Cell["Deployment and full-system tests", "Subsection",
 CellChangeTimes->{{3.729257034208847*^9, 3.7292570378158474`*^9}, {
  3.731854337833028*^9, 
  3.7318543423750277`*^9}},ExpressionUUID->"ffbbf896-215d-46c1-87de-\
a809cb2d846d"],

Cell["\<\
This deploys a meal tracker instance to a temporary test cloud directory that \
is removed at the end of the test.
This test suite takes a few minutes to run.\
\>", "Text",
 CellChangeTimes->{{3.7431656746841564`*^9, 
  3.743165730904156*^9}},ExpressionUUID->"aee06e4e-4cd4-4e2b-aa0a-\
18d0aad1ed6f"],

Cell[BoxData[{
 RowBox[{"CloudConnect", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"results", "=", 
   RowBox[{"TestReport", "[", "\"\<MealTrackerApp.wlt\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"failedTestData", "=", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"\"\<AbsoluteTimeUsed\>\"", ","}], "*)"}], 
        RowBox[{
        "\"\<CPUTimeUsed\>\"", ",", "\"\<MemoryUsed\>\"", ",", 
         "\"\<TestIndex\>\"", ",", "\"\<Outcome\>\""}], "}"}], "]"}], "/@", 
      RowBox[{"First", "/@", 
       RowBox[{"Values", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Values", "[", 
          RowBox[{"results", "[", "\"\<TestsFailed\>\"", "]"}], "]"}]}], 
        "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "failedTestData", "]"}], ">", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Values", "/@", "failedTestData"}], ",", 
         RowBox[{"Keys", "[", 
          RowBox[{"First", "[", "failedTestData", "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7183857028786936`*^9, 3.7183857049326935`*^9}, {
  3.7183857684318933`*^9, 3.7183857693368936`*^9}, {3.727464083045461*^9, 
  3.7274640832984867`*^9}, {3.7274681926238947`*^9, 3.727468565588895*^9}, {
  3.7274686136388946`*^9, 3.7274686322218943`*^9}, {3.7288419124019527`*^9, 
  3.7288419144631524`*^9}, {3.7289117532552805`*^9, 3.7289117592188773`*^9}, {
  3.7289118688893633`*^9, 3.728911872499364*^9}, {3.728924943073042*^9, 
  3.7289249458372593`*^9}, {3.7314334746545644`*^9, 3.7314334762885647`*^9}, {
  3.732638915052343*^9, 
  3.732638915571291*^9}},ExpressionUUID->"51096657-1413-499c-acd4-\
bcd9cca8b0fd"],

Cell[CellGroupData[{

Cell["Visualize timing results", "Subsubsection",
 CellChangeTimes->{{3.7326386452232285`*^9, 
  3.732638658097516*^9}},ExpressionUUID->"f8aea494-e326-4381-9310-\
11dca5348d31"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"times", "=", 
   RowBox[{"KeySelect", "[", 
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", "\"\<TestID\>\"", "]"}], "\[Rule]", " ", 
         RowBox[{"#", "[", "\"\<AbsoluteTimeUsed\>\"", "]"}]}], "&"}], "/@", 
       RowBox[{"Values", "[", 
        RowBox[{"results", "[", "\"\<TestResults\>\"", "]"}], "]"}]}], "]"}], 
     ",", 
     RowBox[{"MatchQ", "[", "_String", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appreciableTimes", "=", 
   RowBox[{
    RowBox[{"Sort", "[", "times", "]"}], "//", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"#", ">", 
       RowBox[{"Quantity", "[", 
        RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}]}], "&"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"appreciableTimes", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"#", ",", "0.1"}], "]"}], "&"}], "/@", "appreciableTimes"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"appreciableTimes", ",", "\[IndentingNewLine]", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"#", ",", "Black"}], "]"}], "&"}], "/@", 
       RowBox[{"Keys", "[", "appreciableTimes", "]"}]}], ",", "Left"}], 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ChartStyle", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{
     RowBox[{
     "StringTemplate", "[", "\"\<Total Time: `` \\nMedian Time: ``\>\"", 
      "]"}], "[", 
     RowBox[{
      RowBox[{"Round", "@", 
       RowBox[{"Total", "[", "times", "]"}]}], ",", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"Median", "[", "times", "]"}], ",", "0.1"}], "]"}]}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7326348355210853`*^9, 3.7326349029133453`*^9}, {
  3.7326349507395625`*^9, 3.7326350721711826`*^9}, {3.7326381458732986`*^9, 
  3.7326381863953505`*^9}, {3.732638329109621*^9, 3.7326383966153708`*^9}, {
  3.732638446933402*^9, 3.73263861433214*^9}, {3.7326386770364103`*^9, 
  3.7326387342461305`*^9}, {3.7326387667523804`*^9, 3.7326387749822035`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"b982ab53-81d4-4c29-8e44-9b014c9a0371"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0., -0.12096975133303434`}, {0., 34.44324014551253}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.46199999999999997`], Thickness[Small]}], 
     {RGBColor[0.178927, 0.305394, 0.933501], EdgeForm[{Opacity[
      0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 0.556759854487467}, {1.1, 1.443240145512533}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 211.369}, {272.8634275290508, 
           288.44337045810136`}}],
         StatusArea[#, 1.1]& ,
         TagBoxNote->"1.1"],
        StyleBox["1.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2261339090909091, 0.3550114545454546, 0.9361893636363636], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 1.556759854487467}, {1.1, 2.443240145512533}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 211.369}, {255.8523974117166, 
           271.43234034076715`}}],
         StatusArea[#, 1.1]& ,
         TagBoxNote->"1.1"],
        StyleBox["1.1`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2733408181818182, 0.4046289090909091, 0.9388777272727273], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 2.556759854487467}, {1.4000000000000001`, 
            3.443240145512533}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 267.856}, {238.84136729438245`, 
           254.421310223433}}],
         StatusArea[#, 1.4000000000000001`]& ,
         TagBoxNote->"1.4000000000000001"],
        StyleBox["1.4000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.3218889090909091, 0.4532257272727273, 0.9417314545454546], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 3.556759854487467}, {1.4000000000000001`, 
            4.443240145512533}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 267.856}, {221.83033717704825`, 
           237.4102801060988}}],
         StatusArea[#, 1.4000000000000001`]& ,
         TagBoxNote->"1.4000000000000001"],
        StyleBox["1.4000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.37446054545454543`, 0.4987606363636364, 0.9450812727272727], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 4.556759854487467}, {1.4000000000000001`, 
            5.443240145512533}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 267.856}, {204.8193070597141, 
           220.39924998876467`}}],
         StatusArea[#, 1.4000000000000001`]& ,
         TagBoxNote->"1.4000000000000001"],
        StyleBox["1.4000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4270321818181818, 0.5442955454545454, 0.948431090909091], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 5.556759854487467}, {1.4000000000000001`, 
            6.443240145512533}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 267.856}, {187.8082769423799, 
           203.38821987143046`}}],
         StatusArea[#, 1.4000000000000001`]& ,
         TagBoxNote->"1.4000000000000001"],
        StyleBox["1.4000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4876890909090909, 0.594967, 0.9528118181818181], EdgeForm[{
      Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 6.556759854487467}, {1.5, 7.443240145512533}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 286.685}, {170.79724682504573`, 
           186.3771897540963}}],
         StatusArea[#, 1.5]& ,
         TagBoxNote->"1.5"],
        StyleBox["1.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5564312727272728, 0.650775, 0.9582234545454545], EdgeForm[{
      Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 7.556759854487467}, {1.5, 8.443240145512533}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 286.685}, {153.78621670771156`, 
           169.36615963676212`}}],
         StatusArea[#, 1.5]& ,
         TagBoxNote->"1.5"],
        StyleBox["1.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.6251734545454546, 0.7065830000000001, 0.9636350909090908], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 8.556759854487467}, {1.6, 9.443240145512533}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 305.514}, {136.7751865903774, 
           152.35512951942795`}}],
         StatusArea[#, 1.6]& ,
         TagBoxNote->"1.6"],
        StyleBox["1.6`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.6, {}], "Tooltip"]& ]}, 
     {RGBColor[0.6908021818181819, 0.7583791818181819, 0.9698163636363636], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 9.556759854487467}, {1.7000000000000002`, 
            10.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 324.343}, {119.76415647304322`, 
           135.34409940209378`}}],
         StatusArea[#, 1.7000000000000002`]& ,
         TagBoxNote->"1.7000000000000002"],
        StyleBox["1.7000000000000002`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.7000000000000002`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7553930909090909, 0.8088380909090909, 0.9762541818181818], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 10.556759854487467`}, {1.8, 11.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 343.17199999999997`}, {102.75312635570904`, 
           118.3330692847596}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.819984, 0.859297, 0.982692], EdgeForm[{Opacity[
      0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 11.556759854487467`}, {1.8, 12.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 343.17199999999997`}, {85.74209623837484, 
           101.32203916742543`}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8620621818181818, 0.892849, 0.9867054545454546], EdgeForm[{
      Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 12.556759854487467`}, {1.8, 13.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 343.17199999999997`}, {68.73106612104067, 
           84.31100905009123}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9041403636363636, 0.926401, 0.9907189090909091], EdgeForm[{
      Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 13.556759854487467`}, {1.8, 14.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 343.17199999999997`}, {51.7200360037065, 
           67.29997893275706}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9401074545454545, 0.9548528181818182, 0.9862666363636363], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 14.556759854487467`}, {1.8, 15.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 343.17199999999997`}, {34.709005886372324`, 
           50.288948815422884`}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9577412727272727, 0.9680040909090909, 0.9564171818181818], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 15.556759854487467`}, {1.8, 16.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 343.17199999999997`}, {17.697975769038123`, 
           33.27791869808874}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9753750909090908, 0.9811553636363637, 0.9265677272727273], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 16.556759854487467`}, {1.8, 17.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 343.17199999999997`}, {0.6869456517039794, 
           16.26688858075454}}],
         StatusArea[#, 1.8]& ,
         TagBoxNote->"1.8"],
        StyleBox["1.8`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9862083636363635, 0.9885648181818182, 0.8782266363636363], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 17.556759854487467`}, {1.9000000000000001`, 
            18.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           362.00100000000003`}, {-16.32408446563022, -0.7441415365796615}}],
         StatusArea[#, 1.9000000000000001`]& ,
         TagBoxNote->"1.9000000000000001"],
        StyleBox["1.9000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9902410909090908, 0.9902324545454546, 0.811393909090909], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 18.556759854487467`}, {1.9000000000000001`, 
            19.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           362.00100000000003`}, {-33.335114582964366`, \
-17.755171653913806`}}],
         StatusArea[#, 1.9000000000000001`]& ,
         TagBoxNote->"1.9000000000000001"],
        StyleBox["1.9000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9942738181818181, 0.9919000909090909, 0.7445611818181818], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 19.556759854487467`}, {1.9000000000000001`, 
            20.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           362.00100000000003`}, {-50.34614470029857, -34.76620177124801}}],
         StatusArea[#, 1.9000000000000001`]& ,
         TagBoxNote->"1.9000000000000001"],
        StyleBox["1.9000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9945240909090909, 0.9906959090909091, 0.6453592727272727], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 20.556759854487467`}, {1.9000000000000001`, 
            21.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           362.00100000000003`}, {-67.35717481763271, -51.77723188858215}}],
         StatusArea[#, 1.9000000000000001`]& ,
         TagBoxNote->"1.9000000000000001"],
        StyleBox["1.9000000000000001`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9000000000000001`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9935135454545455, 0.9885344545454546, 0.5353676363636364], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 21.556759854487467`}, {2.3000000000000003`, 
            22.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           437.317}, {-84.36820493496691, -68.78826200591635}}],
         StatusArea[#, 2.3000000000000003`]& ,
         TagBoxNote->"2.3000000000000003"],
        StyleBox["2.3000000000000003`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.3000000000000003`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.992503, 0.986373, 0.425376], EdgeForm[{Opacity[
      0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 22.556759854487467`}, {2.8000000000000003`, 
            23.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           531.462}, {-101.37923505230106`, -85.7992921232505}}],
         StatusArea[#, 2.8000000000000003`]& ,
         TagBoxNote->"2.8000000000000003"],
        StyleBox["2.8000000000000003`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8000000000000003`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9792157272727273, 0.9415519090909091, 0.3737574545454545], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 23.556759854487467`}, {2.8000000000000003`, 
            24.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           531.462}, {-118.39026516963526`, -102.8103222405847}}],
         StatusArea[#, 2.8000000000000003`]& ,
         TagBoxNote->"2.8000000000000003"],
        StyleBox["2.8000000000000003`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.8000000000000003`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9659284545454545, 0.8967308181818182, 0.3221389090909091], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 24.556759854487467`}, {3.2, 25.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           606.778}, {-135.40129528696946`, -119.8213523579189}}],
         StatusArea[#, 3.2]& ,
         TagBoxNote->"3.2"],
        StyleBox["3.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9512597272727272, 0.8444680909090909, 0.27964063636363634`], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 25.556759854487467`}, {3.4000000000000004`, 
            26.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           644.436}, {-152.4123254043036, -136.83238247525304`}}],
         StatusArea[#, 3.4000000000000004`]& ,
         TagBoxNote->"3.4000000000000004"],
        StyleBox["3.4000000000000004`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.4000000000000004`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9324466363636363, 0.7698804545454545, 0.26450318181818183`], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 26.556759854487467`}, {3.6, 27.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           682.0939999999999}, {-169.4233555216378, -153.84341259258724`}}],
         StatusArea[#, 3.6]& ,
         TagBoxNote->"3.6"],
        StyleBox["3.6`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.6, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9136335454545454, 0.6952928181818182, 0.24936572727272727`], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 27.556759854487467`}, {3.9000000000000004`, 
            28.443240145512533`}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           738.581}, {-186.43438563897195`, -170.8544427099214}}],
         StatusArea[#, 3.9000000000000004`]& ,
         TagBoxNote->"3.9000000000000004"],
        StyleBox["3.9000000000000004`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.9000000000000004`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8958957272727273, 0.6201686363636364, 0.23484518181818181`], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 28.556759854487467`}, {4.2, 29.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           795.068}, {-203.44541575630615`, -187.8654728272556}}],
         StatusArea[#, 4.2]& ,
         TagBoxNote->"4.2"],
        StyleBox["4.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8792331818181818, 0.5445079090909091, 0.22094154545454545`], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 29.556759854487467`}, {4.2, 30.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           795.068}, {-220.45644587364035`, -204.87650294458973`}}],
         StatusArea[#, 4.2]& ,
         TagBoxNote->"4.2"],
        StyleBox["4.2`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8625706363636363, 0.4688471818181818, 0.20703790909090908`], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 30.556759854487467`}, {4.4, 31.443240145512533`},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           832.726}, {-237.4674759909745, -221.88753306192388`}}],
         StatusArea[#, 4.4]& ,
         TagBoxNote->"4.4"],
        StyleBox["4.4`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8471997272727273, 0.3638033636363636, 0.1928318181818182], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 31.556759854487467`}, {4.5, 32.44324014551253}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           851.555}, {-254.47850610830864`, -238.89856317925813`}}],
         StatusArea[#, 4.5]& ,
         TagBoxNote->"4.5"],
        StyleBox["4.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8322593636363637, 0.2489651818181818, 0.1785249090909091], 
      EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 32.55675985448747}, {4.9, 33.44324014551253}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           926.871}, {-271.4895362256429, -255.90959329659228`}}],
         StatusArea[#, 4.9]& ,
         TagBoxNote->"4.9"],
        StyleBox["4.9`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.817319, 0.134127, 0.164218], EdgeForm[{Opacity[
      0.46199999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0., 33.55675985448747}, {5., 34.44324014551253}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{3.75, 
           945.6999999999999}, {-288.50056634297704`, -272.9206234139264}}],
         StatusArea[#, 5.]& ,
         TagBoxNote->"5."],
        StyleBox["5.`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5., {}], "Tooltip"]& ]}}, {}, {}}, {}, {InsetBox[
     StyleBox["\<\"MealEntry-submission-redirect-test\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 1.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"MealEntry-submission-redirect-test-update\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 2.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"ChooseMeal-adjust-servings-redirect\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 3.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"NutritionEntry-Submission\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 4.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-last-point-defaults\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 5.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-last-point-changed-servings\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 6.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"LogMeal-Foods-contents\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 7.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Temporary-Root-CloudObject-should-be-removed\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 8.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Load-package\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 9.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"RemoveEntity-API\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 10.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-difference-after-ServingSizeEntry-logging-\
submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 11.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-after-ChooseFood-edit-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 12.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-difference-after-simple-form-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 13.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Bin-UUID-before-RemoveLogEntry\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 14.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-before-ServingSizeEntry-logging-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 15.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-before-ChooseFood-simple-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 16.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-difference-after-LogMeal\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 17.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-before-form-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 18.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-before\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 19.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-after-ChooseFood-simple-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 20.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"Meal-log-counts-before-ChooseFood-edit-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 21.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"RemoveEntity-entities-after\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 22.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"NutritionEntry-Submission-description-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 23.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"ChooseMeal-simple-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 24.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"ChooseFood-simple-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 25.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"ChooseFood-edit-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 26.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"RemoveLogEntry-API\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 27.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"DeployMealTrackerApp-valid-no-Databin-after-initial-\
deployment\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 28.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"NutritionEntry-DV-Submission\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 29.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"NutritionEntry-Food-Entity-Submission\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 30.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"ServingSizeEntry-logging-submit\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 31.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"ServingSizeEntry-new-submission-test\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 32.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"NutritionEntry-update\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 33.}], 
     ImageScaled[{0, 0.5}]], InsetBox[
     StyleBox["\<\"DeployMealTrackerApp-valid-with-Databin\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{6, 0}, {0., 34.}], 
     ImageScaled[{0, 0.5}]]}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., -0.12096975133303434`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {18., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {20., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {21., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {22., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {24., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {26., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {28., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {29., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {30., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {31., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {32., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {33., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {34., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {9., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {10., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {11., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {12., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {13., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {14., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {15., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {16., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {17., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {18., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {19., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {20., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {21., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {22., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {23., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {24., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {25., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {26., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {27., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {28., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {29., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {30., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {31., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {32., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {33., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {34., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}, {
    Automatic, Automatic}},
  GridLines->{Automatic, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->1000,
  PlotLabel->FormBox[
   "\"Total Time: 95 s \\nMedian Time: 0.4 s\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{None, 
     Scaled[0.05]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{{3.7326348387057667`*^9, 3.7326349035712795`*^9}, {
   3.7326349533932967`*^9, 3.7326349780528307`*^9}, {3.732635019573182*^9, 
   3.7326350729691825`*^9}, 3.7326382306577764`*^9, {3.732638326635373*^9, 
   3.7326383983655453`*^9}, {3.7326384514108496`*^9, 
   3.7326384977134795`*^9}, {3.732638604368144*^9, 3.7326386148671937`*^9}, {
   3.732638693461052*^9, 3.7326387347681828`*^9}, 
   3.732638775874293*^9},ExpressionUUID->"ef5e48f2-2653-4678-b450-\
9ef9cd70a39c"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["General Utility tests", "Subsection",
 CellChangeTimes->{{3.7292570538158474`*^9, 3.729257058684847*^9}, {
  3.729257614052641*^9, 
  3.7292576205732927`*^9}},ExpressionUUID->"8ab35e94-b631-4e0f-b745-\
bd9ce137cd62"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Utilities\>\""}], 
     "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"results", "=", 
   RowBox[{"TestReport", "[", "\"\<General.wlt\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"failedTestData", "=", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"\"\<AbsoluteTimeUsed\>\"", ","}], "*)"}], 
        RowBox[{
        "\"\<CPUTimeUsed\>\"", ",", "\"\<MemoryUsed\>\"", ",", 
         "\"\<TestIndex\>\"", ",", "\"\<Outcome\>\""}], "}"}], "]"}], "/@", 
      RowBox[{"First", "/@", 
       RowBox[{"Values", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Values", "[", 
          RowBox[{"results", "[", "\"\<TestsFailed\>\"", "]"}], "]"}]}], 
        "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "failedTestData", "]"}], ">", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Values", "/@", "failedTestData"}], ",", 
         RowBox[{"Keys", "[", 
          RowBox[{"First", "[", "failedTestData", "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7292570681438475`*^9, 3.729257082953847*^9}, {
   3.7292576231215477`*^9, 3.7292576238416195`*^9}, 3.731956175529714*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"1611974b-060d-48f1-8647-02a872d1cf5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.188807092619673`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestReportObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
               PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Test Report: General.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["45", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
               PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Test Report: General.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["45", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["45", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TestReportObject[
     Association[
     "Title" -> "Test Report: General.wlt", "TimeElapsed" -> 
      Quantity[8.51, "Seconds"], "TestsSucceededCount" -> 45, 
      "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
      "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
      "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 1, "TestID" -> "Get-Package", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             Get["General.wl"]], "ExpectedOutput" -> HoldForm[Null], 
           "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0810081`6.0590434439875045, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.0779999999999994, "Seconds"], "MemoryUsed" -> 
           Quantity[15672, "Bytes"]]], 2 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
           "QuantityToString-calories", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`QuantityToString[
              Quantity[5.1234, "LargeCalories"]]], "ExpectedOutput" -> 
           HoldForm["5.1234 Cal"], "ActualOutput" -> HoldForm["5.1234 Cal"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0410041`5.7633422818285895, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
           Quantity[52384, "Bytes"]]], 3 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
           "QuantityToString-grams", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`QuantityToString[
              Quantity[5.1234, "Grams"]]], "ExpectedOutput" -> 
           HoldForm["5.1234 g"], "ActualOutput" -> HoldForm["5.1234 g"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0020002`4.451588420772835, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[432, "Bytes"]]], 
        4 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
           "QuantityToString-milligrams", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`QuantityToString[
              Quantity[5.1234, "Milligrams"]]], "ExpectedOutput" -> 
           HoldForm["5.1234 mg"], "ActualOutput" -> HoldForm["5.1234 mg"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0020002`4.451588420772835, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[304, "Bytes"]]], 
        5 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
           "QuantityToString-micrograms", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`QuantityToString[
              Quantity[5.1234, "Micrograms"]]], "ExpectedOutput" -> 
           HoldForm["5.1234 \[Micro]g"], "ActualOutput" -> 
           HoldForm["5.1234 \[Micro]g"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0030003`4.627679679828517, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
           Quantity[1080, "Bytes"]]], 6 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
           "QuantityToString-kilograms", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`QuantityToString[
              Quantity[5.1234, "Kilograms"]]], "ExpectedOutput" -> 
           HoldForm["5.1234 kg"], "ActualOutput" -> HoldForm["5.1234 kg"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0030003`4.627679679828517, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[928, "Bytes"]]], 
        7 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
           "QuantityToString-rational", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`QuantityToString[
              Quantity[1/4, "Tablespoons"]]], "ExpectedOutput" -> 
           HoldForm["0.25 tbsp"], "ActualOutput" -> HoldForm["0.25 tbsp"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0030003`4.6276796798285185, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[992, "Bytes"]]], 
        8 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
           "QuantityToString-number", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`QuantityToString[1]], "ExpectedOutput" -> 
           HoldForm["1."], "ActualOutput" -> HoldForm["1."], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 9 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
           "QuantityToString-Rational-number", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Utilities`General`QuantityToString[1/4]], "ExpectedOutput" -> 
           HoldForm["0.25"], "ActualOutput" -> HoldForm["0.25"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 10 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
           "GetMealTypeFromTime-Breakfast", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`GetMealTypeFromTime[
              
              DateObject[{2018, 3, 8, 9, 30, 8.5974213}, "Instant", 
               "Gregorian", -6.]]], "ExpectedOutput" -> HoldForm["Breakfast"],
            "ActualOutput" -> HoldForm["Breakfast"], "ExpectedMessages" -> {},
            "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108854, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[176, "Bytes"]]], 
        11 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
           "GetMealTypeFromTime-Lunch", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`GetMealTypeFromTime[
              
              DateObject[{2018, 3, 8, 11, 30, 8.5974213}, "Instant", 
               "Gregorian", -6.]]], "ExpectedOutput" -> HoldForm["Lunch"], 
           "ActualOutput" -> HoldForm["Lunch"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        12 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
           "GetMealTypeFromTime-Dinner", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`GetMealTypeFromTime[
              
              DateObject[{2018, 3, 8, 17, 30, 8.5974213}, "Instant", 
               "Gregorian", -6.]]], "ExpectedOutput" -> HoldForm["Dinner"], 
           "ActualOutput" -> HoldForm["Dinner"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        13 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
           "GetMealTypeFromTime-Snack", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`GetMealTypeFromTime[
              
              DateObject[{2018, 3, 8, 22, 30, 8.5974213}, "Instant", 
               "Gregorian", -6.]]], "ExpectedOutput" -> HoldForm["Snack"], 
           "ActualOutput" -> HoldForm["Snack"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        14 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
           "GetMealTypeFromTime-Default", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`GetMealTypeFromTime[]], "ExpectedOutput" -> 
           HoldForm[
             Blank[String]], "ActualOutput" -> HoldForm["Breakfast"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[104, "Bytes"]]], 15 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
           "FromCamelCase-VitaminC", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`FromCamelCase["VitaminC"]], "ExpectedOutput" -> 
           HoldForm["Vitamin C"], "ActualOutput" -> HoldForm["Vitamin C"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108852, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[2184, "Bytes"]]],
         16 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
           "FromCamelCase-Sentence", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`FromCamelCase["ThisIsATest"]], 
           "ExpectedOutput" -> HoldForm["This Is A Test"], "ActualOutput" -> 
           HoldForm["This Is A Test"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[80, "Bytes"]]], 
        17 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
           "AssociationToDateObject", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`AssociationToDateObject[
              Association[
              "Year" -> 2018, "Month" -> 4, "Day" -> 10, "Hour" -> 13, 
               "Minute" -> 7, "Second" -> 56]]], "ExpectedOutput" -> HoldForm[
             
             DateObject[{2018, 4, 10, 13, 7, 56.}, "Instant", 
              "Gregorian", -5.]], "ActualOutput" -> HoldForm[
             
             DateObject[{2018, 4, 10, 13, 7, 56.}, "Instant", 
              "Gregorian", -5.]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108854, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[248, "Bytes"]]], 
        18 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
           "TimestampString-basic", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`TimestampString[
              
              DateObject[{2018, 3, 20, 14, 22, 16.080352}, "Instant", 
               "Gregorian", -5.]]], "ExpectedOutput" -> 
           HoldForm["2018-03-20 14:22:16"], "ActualOutput" -> 
           HoldForm["2018-03-20 14:22:16"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108854, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[3800, "Bytes"]]],
         19 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
           "TimestampString-Association", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`TimestampString[
              Association[
              "Year" -> 2018, "Month" -> 4, "Day" -> 10, "Hour" -> 13, 
               "Minute" -> 7, "Second" -> 56]]], "ExpectedOutput" -> 
           HoldForm["2018-04-10 13:07:56"], "ActualOutput" -> 
           HoldForm["2018-04-10 13:07:56"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108854, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[144, "Bytes"]]], 
        20 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 20, "TestID" -> 
           "ParseQuantity-1", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["1 item"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[1, "Items"]], "ActualOutput" -> HoldForm[
             Quantity[1, "Items"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0020002`4.451588420772835, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[5728, "Bytes"]]],
         21 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 21, "TestID" -> 
           "ParseQuantity-2", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["1 items"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[1, "Items"]], "ActualOutput" -> HoldForm[
             Quantity[1, "Items"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[168, "Bytes"]]], 
        22 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 22, "TestID" -> 
           "ParseQuantity-3", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["4.56g"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[4.56, "Grams"]], "ActualOutput" -> HoldForm[
             Quantity[4.56, "Grams"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108854, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[112, "Bytes"]]], 
        23 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 23, "TestID" -> 
           "ParseQuantity-4", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["4.56mg"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[4.56, "Milligrams"]], "ActualOutput" -> HoldForm[
             Quantity[4.56, "Milligrams"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[112, "Bytes"]]], 
        24 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 24, "TestID" -> 
           "ParseQuantity-5", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["4.56cup"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[4.56, "Cups"]], "ActualOutput" -> HoldForm[
             Quantity[4.56, "Cups"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0020002`4.451588420772835, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[736, "Bytes"]]], 
        25 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 25, "TestID" -> 
           "ParseQuantity-6", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["1.tsp"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[1., "Teaspoons"]], "ActualOutput" -> HoldForm[
             Quantity[1., "Teaspoons"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0020002`4.451588420772835, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[720, "Bytes"]]], 
        26 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 26, "TestID" -> 
           "ParseQuantity-7", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["1/2tbsp"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[
              Rational[1, 2], "Tablespoons"]], "ActualOutput" -> HoldForm[
             Quantity[
              Rational[1, 2], "Tablespoons"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]], 
        27 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 27, "TestID" -> 
           "ParseQuantity-8", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ParseQuantity["1/4cup"]], "ExpectedOutput" -> 
           HoldForm[
             Quantity[
              Rational[1, 4], "Cups"]], "ActualOutput" -> HoldForm[
             Quantity[
              Rational[1, 4], "Cups"]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108852, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[120, "Bytes"]]], 
        28 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 28, "TestID" -> 
           "FromCamelCase-Interpreter-support", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Utilities`General`SafeInterpreter["ComputedDateTime"][
              Utilities`General`TimestampString[
               
               DateObject[{2018, 3, 20, 14, 22, 16.080352}, "Instant", 
                "Gregorian", -5.]]]], "ExpectedOutput" -> HoldForm[
             
             DateObject[{2018, 3, 20, 14, 22, 16}, "Instant", 
              "Gregorian", -5.]], "ActualOutput" -> HoldForm[
             DateObject[{2018, 3, 20, 14, 22, 16}, "Instant", 
              "Gregorian", -5.]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[1.5771577`7.348390118437757, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.20300000000000118`, "Seconds"], "MemoryUsed" -> 
           Quantity[1512152, "Bytes"]]], 29 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 29, "TestID" -> 
           "SafeInterpreter-single", "Outcome" -> "Success", "Input" -> 
           HoldForm[
            Internal`ClearEntityValueCache["Food"]; 
             Utilities`General`SafeInterpreter["Food"]["vanilla extract"]], 
           "ExpectedOutput" -> HoldForm[
             Entity[
             "Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                  Entity["FoodType", "VanillaExtract"]}], 
               EntityProperty["Food", "AddedFoodTypes"] -> 
               ContainsExactly[{}]}]], "ActualOutput" -> HoldForm[
             Entity[
             "Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                  Entity["FoodType", "VanillaExtract"]}], 
               EntityProperty["Food", "AddedFoodTypes"] -> 
               ContainsExactly[{}]}]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[1.2981298`7.2638331175732045, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.375, "Seconds"], "MemoryUsed" -> 
           Quantity[1804872, "Bytes"]]], 30 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 30, "TestID" -> 
           "SafeInterpreter-multiple", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`SafeInterpreter[
             "Food"][{"vanilla extract", "peanut butter"}]], "ExpectedOutput" -> 
           HoldForm[{
              Entity[
              "Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                   Entity["FoodType", "VanillaExtract"]}], 
                EntityProperty["Food", "AddedFoodTypes"] -> 
                ContainsExactly[{}]}], 
              Entity[
              "Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                   Entity["FoodType", "PeanutButter"]}], 
                EntityProperty["Food", "AddedFoodTypes"] -> 
                ContainsExactly[{}]}]}], "ActualOutput" -> HoldForm[{
              Entity[
              "Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                   Entity["FoodType", "VanillaExtract"]}], 
                EntityProperty["Food", "AddedFoodTypes"] -> 
                ContainsExactly[{}]}], 
              Entity[
              "Food", {EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                   Entity["FoodType", "PeanutButter"]}], 
                EntityProperty["Food", "AddedFoodTypes"] -> 
                ContainsExactly[{}]}]}], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.3930393`6.7449509754842785, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.06199999999999939, "Seconds"], "MemoryUsed" -> 
           Quantity[44728, "Bytes"]]], 31 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 31, "TestID" -> 
           "SafeInterpreter-multiple-no-failures", "Outcome" -> "Success", 
           "Input" -> HoldForm[Internal`ClearEntityValueCache["Food"]; Cases[
               Utilities`General`SafeInterpreter[
               "Food"][{
                "white bread", "peanut butter", "jelly", "milk", "oats", 
                 "greek yogurt", "flax seed", "honey", "vanilla extract"}], 
               Blank[Failure]]], "ExpectedOutput" -> HoldForm[{}], 
           "ActualOutput" -> HoldForm[{}], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[4.1244124`7.765877081720336, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.6549999999999994, "Seconds"], "MemoryUsed" -> 
           Quantity[311008, "Bytes"]]], 32 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 32, "TestID" -> 
           "TimeSeriesAccumulate-default-argument", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Normal[
              
              Utilities`General`TimeSeriesAccumulate[$CellContext`es = 
               EventSeries[{{
                   
                   DateObject[{2018, 4, 5, 8, 30, 0.}, "Instant", 
                    "Gregorian", -5.], 
                   Quantity[57.965, "LargeCalories"]}, {
                   
                   DateObject[{2018, 4, 5, 9, 0, 0.}, "Instant", 
                    "Gregorian", -5.], 
                   Quantity[15.93, "LargeCalories"]}}]]]], "ExpectedOutput" -> 
           HoldForm[{{
               
               DateObject[{2018, 4, 5, 6, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[0, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 8, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[57.965, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 9, 0, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[73.895, "LargeCalories"]}}], "ActualOutput" -> 
           HoldForm[{{
               
               DateObject[{2018, 4, 5, 6, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[0, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 8, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[57.965, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 9, 0, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[73.89500000000001, "LargeCalories"]}}], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.2090209`6.470704711219908, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.031000000000000583`, "Seconds"], "MemoryUsed" -> 
           Quantity[784440, "Bytes"]]], 33 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 33, "TestID" -> 
           "TimeSeriesAccumulate-Quantity", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Normal[
              Utilities`General`TimeSeriesAccumulate[$CellContext`es, 
               Quantity[5, "Hours"]]]], "ExpectedOutput" -> HoldForm[{{
               
               DateObject[{2018, 4, 5, 3, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[0, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 8, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[57.965, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 9, 0, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[73.895, "LargeCalories"]}}], "ActualOutput" -> 
           HoldForm[{{
               
               DateObject[{2018, 4, 5, 3, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[0, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 8, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[57.965, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 9, 0, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[73.89500000000001, "LargeCalories"]}}], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.020002`5.451588420772834, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
           Quantity[4184, "Bytes"]]], 34 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 34, "TestID" -> 
           "TimeSeriesAccumulate-DateObject", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Normal[
              
              Utilities`General`TimeSeriesAccumulate[$CellContext`es, \
$CellContext`es["FirstDate"] - Quantity[1, "Hours"]]]], "ExpectedOutput" -> 
           HoldForm[{{
               
               DateObject[{2018, 4, 5, 7, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[0, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 8, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[57.965, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 9, 0, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[73.895, "LargeCalories"]}}], "ActualOutput" -> 
           HoldForm[{{
               
               DateObject[{2018, 4, 5, 7, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[0, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 8, 30, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[57.965, "LargeCalories"]}, {
               
               DateObject[{2018, 4, 5, 9, 0, 0.}, "Instant", 
                "Gregorian", -5.], 
               Quantity[73.89500000000001, "LargeCalories"]}}], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.010001`5.150558425108855, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.015000000000000568`, "Seconds"], "MemoryUsed" -> 
           Quantity[1456, "Bytes"]]], 35 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 35, "TestID" -> 
           "IntegerToOrdinalString-first", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`IntegerToOrdinalString[1]], "ExpectedOutput" -> 
           HoldForm["1st"], "ActualOutput" -> HoldForm["1st"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[272, "Bytes"]]], 36 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 36, "TestID" -> 
           "IntegerToOrdinalString-second", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`IntegerToOrdinalString[2]], "ExpectedOutput" -> 
           HoldForm["2nd"], "ActualOutput" -> HoldForm["2nd"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 37 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 37, "TestID" -> 
           "IntegerToOrdinalString-third", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`IntegerToOrdinalString[3]], "ExpectedOutput" -> 
           HoldForm["3rd"], "ActualOutput" -> HoldForm["3rd"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 38 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 38, "TestID" -> 
           "IntegerToOrdinalString-fourth", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`IntegerToOrdinalString[4]], "ExpectedOutput" -> 
           HoldForm["4th"], "ActualOutput" -> HoldForm["4th"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108852, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[72, "Bytes"]]], 
        39 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 39, "TestID" -> 
           "IntegerToOrdinalString-eleventh", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`IntegerToOrdinalString[11]], "ExpectedOutput" -> 
           HoldForm["11th"], "ActualOutput" -> HoldForm["11th"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 40 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 40, "TestID" -> 
           "IntegerToOrdinalString-twelfth", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`IntegerToOrdinalString[12]], "ExpectedOutput" -> 
           HoldForm["12th"], "ActualOutput" -> HoldForm["12th"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 41 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 41, "TestID" -> 
           "IntegerToOrdinalString-thirteenth", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Utilities`General`IntegerToOrdinalString[13]], "ExpectedOutput" -> 
           HoldForm["13th"], "ActualOutput" -> HoldForm["13th"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 42 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 42, "TestID" -> 
           "IntegerToOrdinalString-thirty-first", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Utilities`General`IntegerToOrdinalString[31]], "ExpectedOutput" -> 
           HoldForm["31st"], "ActualOutput" -> HoldForm["31st"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]], 43 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 43, "TestID" -> 
           "ValidGTINQ-valid", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ValidGTINQ["025000056017"]], "ExpectedOutput" -> 
           HoldForm[True], "ActualOutput" -> HoldForm[True], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0020002`4.451588420772838, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
           Quantity[1888, "Bytes"]]], 44 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 44, "TestID" -> 
           "ValidGTINQ-invalid", "Outcome" -> "Success", "Input" -> HoldForm[
             Utilities`General`ValidGTINQ["01234567"]], "ExpectedOutput" -> 
           HoldForm[False], "ActualOutput" -> HoldForm[False], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[96, "Bytes"]]], 45 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 45, "TestID" -> 
           "GetGTINCheckDigit-simple", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`General`GetGTINCheckDigit["02500005601"]], 
           "ExpectedOutput" -> HoldForm["7"], "ActualOutput" -> HoldForm["7"],
            "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[72, "Bytes"]]]], 
      "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
       14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
        32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45}, 
      "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
      "TestsFailedWithMessagesIndices" -> {}, 
      "TestsFailedWithErrorsIndices" -> {}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7295138013235965`*^9, 3.729513907335596*^9, 3.7295139889203963`*^9, {
   3.729514059457196*^9, 3.7295140855137963`*^9}, 3.729514144622796*^9, 
   3.7295142016889963`*^9, 3.7295397179976397`*^9, 3.7295397522086663`*^9, 
   3.7295397871034985`*^9, 3.729966585546988*^9, 3.7300543887984934`*^9, 
   3.7301158113879004`*^9, 3.730215930757745*^9, 3.7302159939977446`*^9, 
   3.7304766955130777`*^9, 3.7304847062701397`*^9, 3.7305573247897015`*^9, {
   3.730557441701129*^9, 3.730557468827308*^9}, 3.7305577088052454`*^9, {
   3.7305624524437995`*^9, 3.7305624730653358`*^9}, {3.730562586302885*^9, 
   3.7305626043354034`*^9}, 3.730831225629241*^9, 3.731247637081312*^9, 
   3.7317655098442993`*^9, {3.731847308370039*^9, 3.731847320417244*^9}, {
   3.7318475106112614`*^9, 3.731847514337634*^9}, 3.731847670195218*^9, 
   3.7318477067888775`*^9, 3.731849322518443*^9, 3.731956188616023*^9, 
   3.7319562223293934`*^9, 3.731956329044064*^9, 3.7319563803511944`*^9, 
   3.7319564113582945`*^9, 3.731956456183646*^9, {3.7319564951445417`*^9, 
   3.731956518505878*^9}, 3.7319565612141485`*^9, 3.732281437078506*^9, 
   3.732304094293268*^9, 3.732304168281268*^9, 3.732304283722268*^9, 
   3.7323045426862683`*^9, 3.732304593819268*^9, 3.7323047163372684`*^9, 
   3.7323048144732685`*^9, 3.7323048445232687`*^9, 3.7323603426487455`*^9, {
   3.7323619546782165`*^9, 3.7323619777962165`*^9}, 3.7323777362017393`*^9, 
   3.732377774955614*^9, 3.732459475217833*^9, 3.7324595306821795`*^9, 
   3.7324632816745477`*^9, 3.7325601189103603`*^9, 3.732637765324248*^9, 
   3.7331569530203123`*^9, 3.73322848740035*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"392a5ffb-67c2-4726-92c2-528d954efb44"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["EntityStore Utility tests", "Subsection",
 CellChangeTimes->{{3.7292570538158474`*^9, 3.729257058684847*^9}, {
  3.729257614052641*^9, 3.7292576205732927`*^9}, {3.7299483610391083`*^9, 
  3.7299483797832336`*^9}},ExpressionUUID->"64e89af6-405f-4e9e-9e4f-\
ea982d07f7bc"],

Cell["\<\
TODO: This test suite requires that the main package be loaded!\
\>", "Text",
 CellChangeTimes->{{3.732377859180036*^9, 
  3.7323778763137493`*^9}},ExpressionUUID->"e95781ee-c59d-4696-ac5d-\
e754116b398e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Utilities\>\""}], 
     "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"results", "=", 
   RowBox[{"TestReport", "[", "\"\<EntityStore.wlt\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"failedTestData", "=", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"\"\<AbsoluteTimeUsed\>\"", ","}], "*)"}], 
        RowBox[{
        "\"\<CPUTimeUsed\>\"", ",", "\"\<MemoryUsed\>\"", ",", 
         "\"\<TestIndex\>\"", ",", "\"\<Outcome\>\""}], "}"}], "]"}], "/@", 
      RowBox[{"First", "/@", 
       RowBox[{"Values", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Values", "[", 
          RowBox[{"results", "[", "\"\<TestsFailed\>\"", "]"}], "]"}]}], 
        "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "failedTestData", "]"}], ">", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Values", "/@", "failedTestData"}], ",", 
         RowBox[{"Keys", "[", 
          RowBox[{"First", "[", "failedTestData", "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7292570681438475`*^9, 3.729257082953847*^9}, {
  3.7292576231215477`*^9, 3.7292576238416195`*^9}, {3.729948369497262*^9, 
  3.72994837071714*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"50767d1e-7247-4ef3-a7af-d594d5f6595f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9145064485352531`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestReportObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
               Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1,
                ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Test Report: EntityStore.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
               Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1,
                ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Test Report: EntityStore.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TestReportObject[
     Association[
     "Title" -> "Test Report: EntityStore.wlt", "TimeElapsed" -> 
      Quantity[0.91, "Seconds"], "TestsSucceededCount" -> 2, 
      "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
      "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
      "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 1, "TestID" -> "Load-package", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             Get["EntityStore.wl"]], "ExpectedOutput" -> HoldForm[Null], 
           "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0750075`6.025619688500556, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.062000000000001165`, "Seconds"], "MemoryUsed" -> 
           Quantity[-9064, "Bytes"]]], 2 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
           "EntityStoreBaseFileName-basic", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`EntityStore`EntityStoreBaseFileName[
              
              DateObject[{2018, 3, 13, 11, 45, 20.7121412}, "Instant", 
               "Gregorian", -5.]]], "ExpectedOutput" -> 
           HoldForm["2018-03-13_11-45-20"], "ActualOutput" -> 
           HoldForm["2018-03-13_11-45-20"], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0010001`4.150558425108854, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[88, "Bytes"]]]], 
      "TestsSucceededIndices" -> {1, 2}, "TestsFailedIndices" -> {}, 
      "TestsFailedWrongResultsIndices" -> {}, 
      "TestsFailedWithMessagesIndices" -> {}, 
      "TestsFailedWithErrorsIndices" -> {}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7295138013235965`*^9, 3.729513907335596*^9, 3.7295139889203963`*^9, {
   3.729514059457196*^9, 3.7295140855137963`*^9}, 3.729514144622796*^9, 
   3.7295142016889963`*^9, 3.7295397179976397`*^9, 3.7295397522086663`*^9, 
   3.7295397871034985`*^9, {3.7299483887993317`*^9, 3.72994839441577*^9}, 
   3.7299484921579947`*^9, 3.729948530404255*^9, 3.7299665753029633`*^9, 
   3.7300543962654934`*^9, {3.730054428856494*^9, 3.7300544456044936`*^9}, 
   3.7301158121054354`*^9, {3.730215931586745*^9, 3.7302159610947447`*^9}, 
   3.730215998716745*^9, 3.7304766979193187`*^9, 3.730484708709383*^9, 
   3.7305626560958776`*^9, 3.730831228101488*^9, 3.7312476432649307`*^9, 
   3.7318493291701083`*^9, 3.732281441739972*^9, {3.7323777945865774`*^9, 
   3.732377851847303*^9}, 3.7325601198637605`*^9, 3.7331570269557047`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"04c21572-02b8-4b78-b294-8a9bff8051c6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GenerateData tests", "Subsection",
 CellChangeTimes->{{3.7292570538158474`*^9, 
  3.729257058684847*^9}},ExpressionUUID->"7aadde16-ca7f-495f-abd1-\
e4ab63ad78f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Utilities\>\""}], 
     "}"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"results", "=", 
   RowBox[{"TestReport", "[", "\"\<GenerateData.wlt\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"failedTestData", "=", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"\"\<AbsoluteTimeUsed\>\"", ","}], "*)"}], 
        RowBox[{
        "\"\<CPUTimeUsed\>\"", ",", "\"\<MemoryUsed\>\"", ",", 
         "\"\<TestIndex\>\"", ",", "\"\<Outcome\>\""}], "}"}], "]"}], "/@", 
      RowBox[{"First", "/@", 
       RowBox[{"Values", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Values", "[", 
          RowBox[{"results", "[", "\"\<TestsFailed\>\"", "]"}], "]"}]}], 
        "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "failedTestData", "]"}], ">", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Values", "/@", "failedTestData"}], ",", 
         RowBox[{"Keys", "[", 
          RowBox[{"First", "[", "failedTestData", "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7292570681438475`*^9, 3.729257082953847*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"da6b8d16-1cb9-4e68-8118-a58fa6c51602"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16.857272799838835`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestReportObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
               Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1,
                ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Test Report: GenerateData.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["16", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
               Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1,
                ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Test Report: GenerateData.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["16", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["16", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TestReportObject[
     Association[
     "Title" -> "Test Report: GenerateData.wlt", "TimeElapsed" -> 
      Quantity[16.85, "Seconds"], "TestsSucceededCount" -> 16, 
      "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
      "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
      "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 1, "TestID" -> "Get-package", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             Get["GenerateData.wl"]], "ExpectedOutput" -> HoldForm[Null], 
           "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0769923`6.036962291384667, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.0779999999999994, "Seconds"], "MemoryUsed" -> 
           Quantity[-1632, "Bytes"]]], 2 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 2, "TestID" -> "Make-food-ID", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             
             Internal`InheritedBlock[{DateString}, Unprotect[DateString]; 
              DateString["ISODateTime"] := DateString[
                 
                 DateObject[{2017, 10, 30, 15, 53, 15.1312937}, "Instant", 
                  "Gregorian", -5.], {"ISODateTime"}]; Protect[DateString]; 
              Utilities`GenerateData`Private`makeFoodID["test"]]], 
           "ExpectedOutput" -> HoldForm["test_2017-10-30_15-53-15.m"], 
           "ActualOutput" -> HoldForm["test_2017-10-30_15-53-15.m"], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0009999`4.150471566212184, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[584, "Bytes"]]], 
        3 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 3, "TestID" -> "testNutrients", 
           "Outcome" -> "Success", "Input" -> 
           HoldForm[$CellContext`testNutrients = {
               Entity["Nutrient", "TotalCalories"], 
               Entity["Nutrient", "Calcium"], 
               Entity["Nutrient", "Cholesterol"], 
               Entity["Nutrient", "Iron"], 
               Entity["Nutrient", "Sodium"], 
               Entity["Nutrient", "TotalCarbohydrates"], 
               Entity["Nutrient", "TotalFat"], 
               Entity["Nutrient", "TotalFiber"], 
               Entity["Nutrient", "TotalProtein"], 
               Entity["Nutrient", "TotalSaturatedFat"], 
               Entity["Nutrient", "VitaminC"]}], "ExpectedOutput" -> HoldForm[{
              Repeated[
               Entity["Nutrient", 
                Blank[String]]]}], "ActualOutput" -> HoldForm[{
              Entity["Nutrient", "TotalCalories"], 
              Entity["Nutrient", "Calcium"], 
              Entity["Nutrient", "Cholesterol"], 
              Entity["Nutrient", "Iron"], 
              Entity["Nutrient", "Sodium"], 
              Entity["Nutrient", "TotalCarbohydrates"], 
              Entity["Nutrient", "TotalFat"], 
              Entity["Nutrient", "TotalFiber"], 
              Entity["Nutrient", "TotalProtein"], 
              Entity["Nutrient", "TotalSaturatedFat"], 
              Entity["Nutrient", "VitaminC"]}], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        4 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 4, "TestID" -> "testInputs", 
           "Outcome" -> "Success", "Input" -> 
           HoldForm[$CellContext`testInputs = {
              "white bread", "jelly", "peanut butter"}], "ExpectedOutput" -> 
           HoldForm[{
              BlankSequence[String]}], "ActualOutput" -> 
           HoldForm[{"white bread", "jelly", "peanut butter"}], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.150514997831988, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[40, "Bytes"]]], 5 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
           "testInterpretations", "Outcome" -> "Success", "Input" -> 
           HoldForm[$CellContext`testInterpretations = 
             Association[
              "white bread" -> 
               Entity["Food", {
                 EntityProperty["Food", "FoodTypeGroup"] -> ContainsExactly[{
                    Entity["FoodTypeGroup", "Breads"]}], 
                  EntityProperty["Food", "Variety"] -> 
                  Entity["FoodVariety", "White"]}], "jelly" -> 
               Entity["Food", {
                 EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                    Entity["FoodType", "Jelly"]}], 
                  EntityProperty["Food", "AddedFoodTypes"] -> 
                  ContainsExactly[{}]}], "peanut butter" -> 
               Entity["Food", {
                 EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                    Entity["FoodType", "PeanutButter"]}], 
                  EntityProperty["Food", "AddedFoodTypes"] -> 
                  ContainsExactly[{}]}]]], "ExpectedOutput" -> HoldForm[
             Blank[Association]], "ActualOutput" -> HoldForm[
             Association[
             "white bread" -> 
              Entity["Food", {
                EntityProperty["Food", "FoodTypeGroup"] -> ContainsExactly[{
                    Entity["FoodTypeGroup", "Breads"]}], 
                 EntityProperty["Food", "Variety"] -> 
                 Entity["FoodVariety", "White"]}], "jelly" -> 
              Entity["Food", {
                EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                    Entity["FoodType", "Jelly"]}], 
                 EntityProperty["Food", "AddedFoodTypes"] -> 
                 ContainsExactly[{}]}], "peanut butter" -> 
              Entity["Food", {
                EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                    Entity["FoodType", "PeanutButter"]}], 
                 EntityProperty["Food", "AddedFoodTypes"] -> 
                 ContainsExactly[{}]}]]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1096, "Bytes"]]],
         6 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 6, "TestID" -> 
           "getServingSizeData-Multiple", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             
             Utilities`GenerateData`Private`getServingSizeData[$CellContext`\
testInterpretations]], "ExpectedOutput" -> HoldForm[
             Association["white bread" -> Quantity[
                Blank[], "Grams"], "jelly" -> Quantity[
                Blank[], "Grams"], "peanut butter" -> Quantity[
                Blank[], "Grams"]]], "ActualOutput" -> HoldForm[
             Association[
             "white bread" -> Quantity[43., "Grams"], "jelly" -> 
              Quantity[20., "Grams"], "peanut butter" -> 
              Quantity[32., "Grams"]]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[2.939706`7.6188188966243375, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.6550000000000011, "Seconds"], "MemoryUsed" -> 
           Quantity[194136, "Bytes"]]], 7 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
           "getFoodRepresentations-failures", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             
             Utilities`GenerateData`Private`getFoodRepresentations[{
              "garbage"}]], "ExpectedOutput" -> HoldForm[
             Association["garbage" -> Missing["NotAvailable"]]], 
           "ActualOutput" -> HoldForm[
             Association["garbage" -> Missing["NotAvailable"]]], 
           "ExpectedMessages" -> {
             HoldForm[
              MessageName[Utilities`GenerateData`GenerateData, "noparse"]]}, 
           "ActualMessages" -> {
             HoldForm[
              Message[
               MessageName[Utilities`GenerateData`GenerateData, "noparse"], 
               "garbage"]]}, "AbsoluteTimeUsed" -> 
           Quantity[2.4777522`7.544572868252226, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.8419999999999987, "Seconds"], "MemoryUsed" -> 
           Quantity[39160, "Bytes"]]], 8 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
           "generateFoodData-Multiple", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             
             Block[{Utilities`GenerateData`Private`getFoodRepresentations}, 
              Utilities`GenerateData`Private`getFoodRepresentations[
                 Blank[]] := $CellContext`testInterpretations; Normal[
                
                Utilities`GenerateData`Private`iGenerateData[$CellContext`\
testInputs, $CellContext`testNutrients]]]], "ExpectedOutput" -> HoldForm[{
              Repeated[
              Blank[String] -> 
               Association["Label" -> Blank[String], "Food" -> Entity["Food", 
                   Blank[List]], "ServingSizeString" -> Blank[], 
                 "ServingSizes" -> {
                   BlankSequence[Quantity]}, "TotalCalories" -> Quantity[
                   Blank[], "LargeCalories"], "Calcium" -> Quantity[
                   Blank[], "Milligrams"], "Cholesterol" -> Quantity[
                   Blank[], "Milligrams"], "Iron" -> Quantity[
                   Blank[], "Milligrams"], "Sodium" -> Quantity[
                   Blank[], "Milligrams"], "TotalCarbohydrates" -> Quantity[
                   Blank[], "Grams"], "TotalFat" -> Quantity[
                   Blank[], "Grams"], "TotalFiber" -> Quantity[
                   Blank[], "Grams"], "TotalProtein" -> Quantity[
                   Blank[], "Grams"], "TotalSaturatedFat" -> Quantity[
                   Blank[], "Grams"], "VitaminC" -> Quantity[
                   Blank[], "Milligrams"]]]}], "ActualOutput" -> 
           HoldForm[{
             "WhiteBread" -> 
              Association[
               "Label" -> "white bread", "Food" -> 
                Entity["Food", {
                  EntityProperty["Food", "FoodTypeGroup"] -> ContainsExactly[{
                    Entity["FoodTypeGroup", "Breads"]}], 
                   EntityProperty["Food", "Variety"] -> 
                   Entity["FoodVariety", "White"]}], "ServingSizeString" -> 
                Quantity[43., "Grams"], "ServingSizes" -> {
                  Quantity[43., "Grams"]}, "TotalCalories" -> 
                Quantity[109.99999999999997`, "LargeCalories"], "Calcium" -> 
                Quantity[48.375, "Milligrams"], "Cholesterol" -> 
                Quantity[0., "Milligrams"], "Iron" -> 
                Quantity[1.14595, "Milligrams"], "Sodium" -> 
                Quantity[199.95, "Milligrams"], "TotalCarbohydrates" -> 
                Quantity[21.5, "Grams"], "TotalFat" -> 
                Quantity[1.5007, "Grams"], "TotalFiber" -> 
                Quantity[1.34375, "Grams"], "TotalProtein" -> 
                Quantity[3.70015, "Grams"], "TotalSaturatedFat" -> 
                Quantity[0., "Grams"], "VitaminC" -> 
                Quantity[0., "Milligrams"]], "Jelly" -> 
              Association[
               "Label" -> "jelly", "Food" -> 
                Entity["Food", {
                  EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                    Entity["FoodType", "Jelly"]}], 
                   EntityProperty["Food", "AddedFoodTypes"] -> 
                   ContainsExactly[{}]}], "ServingSizeString" -> 
                Quantity[20., "Grams"], "ServingSizes" -> {
                  Quantity[20., "Grams"]}, "TotalCalories" -> 
                Quantity[50., "LargeCalories"], "Calcium" -> 
                Quantity[1.3999999999999997`, "Milligrams"], "Cholesterol" -> 
                Quantity[0., "Milligrams"], "Iron" -> 
                Quantity[0.036000000000000004`, "Milligrams"], "Sodium" -> 
                Quantity[5., "Milligrams"], "TotalCarbohydrates" -> 
                Quantity[13., "Grams"], "TotalFat" -> Quantity[0., "Grams"], 
                "TotalFiber" -> Quantity[0.2, "Grams"], "TotalProtein" -> 
                Quantity[0., "Grams"], "TotalSaturatedFat" -> 
                Quantity[0.001, "Grams"], "VitaminC" -> 
                Quantity[0., "Milligrams"]], "PeanutButter" -> 
              Association[
               "Label" -> "peanut butter", "Food" -> 
                Entity["Food", {
                  EntityProperty["Food", "FoodType"] -> ContainsExactly[{
                    Entity["FoodType", "PeanutButter"]}], 
                   EntityProperty["Food", "AddedFoodTypes"] -> 
                   ContainsExactly[{}]}], "ServingSizeString" -> 
                Quantity[32., "Grams"], "ServingSizes" -> {
                  Quantity[32., "Grams"]}, "TotalCalories" -> 
                Quantity[190.08, "LargeCalories"], "Calcium" -> 
                Quantity[13.440000000000001`, "Milligrams"], "Cholesterol" -> 
                Quantity[0., "Milligrams"], "Iron" -> 
                Quantity[0.7200000000000001, "Milligrams"], "Sodium" -> 
                Quantity[109.44, "Milligrams"], "TotalCarbohydrates" -> 
                Quantity[7.0016, "Grams"], "TotalFat" -> 
                Quantity[16., "Grams"], "TotalFiber" -> Quantity[2., "Grams"],
                 "TotalProtein" -> Quantity[7.6896, "Grams"], 
                "TotalSaturatedFat" -> Quantity[3., "Grams"], "VitaminC" -> 
                Quantity[0., "Milligrams"]]}], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[3.2436756`7.661552411751305, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.7490000000000023, "Seconds"], "MemoryUsed" -> 
           Quantity[57432, "Bytes"]]], 9 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
           "iGenerateData-1", "Outcome" -> "Success", "Input" -> HoldForm[
             
             Block[{Utilities`GenerateData`Private`getFoodRepresentations}, 
              Utilities`GenerateData`Private`getFoodRepresentations[
                 Blank[]] := Part[$CellContext`testInterpretations, 
                 Span[1, 1]]; Utilities`GenerateData`Private`iGenerateData[
                Part[$CellContext`testInputs, 1], 
                Map[
                Entity["Nutrient", #]& , {
                 "TotalCalories", "TotalFat", "TotalCarbohydrates", 
                  "TotalProtein"}], 
                Quantity[100, "Grams"]]]], "ExpectedOutput" -> HoldForm[
             Blank[Association]], "ActualOutput" -> HoldForm[
             Association[
             "WhiteBread" -> 
              Association[
               "Label" -> "white bread", "Food" -> 
                Entity["Food", {
                  EntityProperty["Food", "FoodTypeGroup"] -> ContainsExactly[{
                    Entity["FoodTypeGroup", "Breads"]}], 
                   EntityProperty["Food", "Variety"] -> 
                   Entity["FoodVariety", "White"]}], "ServingSizeString" -> 
                Quantity[43., "Grams"], "ServingSizes" -> {
                  Quantity[43., "Grams"]}, "TotalCalories" -> 
                Quantity[109.99999999999997`, "LargeCalories"], "TotalFat" -> 
                Quantity[1.5007, "Grams"], "TotalCarbohydrates" -> 
                Quantity[21.5, "Grams"], "TotalProtein" -> 
                Quantity[3.70015, "Grams"]]]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.6609339`6.970673025697823, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.1720000000000006, "Seconds"], "MemoryUsed" -> 
           Quantity[6232, "Bytes"]]], 10 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
           "getNutritionData-success", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             
             With[{$CellContext`servingSizeData = 
               Map[Quantity[
                 100, "Grams"]& , $CellContext`testInterpretations]}, 
              Normal[
               
               Utilities`GenerateData`Private`getNutritionData[$CellContext`\
testInterpretations, $CellContext`servingSizeData, \
$CellContext`testNutrients]]]], "ExpectedOutput" -> HoldForm[{
              Repeated[Blank[String] -> Blank[Association]]}], "ActualOutput" -> 
           HoldForm[{
             "white bread" -> 
              Association[
               "TotalCalories" -> 
                Quantity[255.81395348837202`, "LargeCalories"], "Calcium" -> 
                Quantity[112.5, "Milligrams"], "Cholesterol" -> 
                Quantity[0., "Milligrams"], "Iron" -> 
                Quantity[2.665, "Milligrams"], "Sodium" -> 
                Quantity[464.99999999999994`, "Milligrams"], 
                "TotalCarbohydrates" -> Quantity[50., "Grams"], "TotalFat" -> 
                Quantity[3.49, "Grams"], "TotalFiber" -> 
                Quantity[3.125, "Grams"], "TotalProtein" -> 
                Quantity[8.605, "Grams"], "TotalSaturatedFat" -> 
                Quantity[0., "Grams"], "VitaminC" -> 
                Quantity[0., "Milligrams"]], "jelly" -> 
              Association[
               "TotalCalories" -> Quantity[250., "LargeCalories"], "Calcium" -> 
                Quantity[6.999999999999999, "Milligrams"], "Cholesterol" -> 
                Quantity[0., "Milligrams"], "Iron" -> 
                Quantity[0.18, "Milligrams"], "Sodium" -> 
                Quantity[25., "Milligrams"], "TotalCarbohydrates" -> 
                Quantity[65., "Grams"], "TotalFat" -> Quantity[0., "Grams"], 
                "TotalFiber" -> Quantity[1., "Grams"], "TotalProtein" -> 
                Quantity[0., "Grams"], "TotalSaturatedFat" -> 
                Quantity[0.005, "Grams"], "VitaminC" -> 
                Quantity[0., "Milligrams"]], "peanut butter" -> 
              Association[
               "TotalCalories" -> Quantity[594., "LargeCalories"], "Calcium" -> 
                Quantity[41.99999999999999, "Milligrams"], "Cholesterol" -> 
                Quantity[0., "Milligrams"], "Iron" -> 
                Quantity[2.2500000000000004`, "Milligrams"], "Sodium" -> 
                Quantity[341.99999999999994`, "Milligrams"], 
                "TotalCarbohydrates" -> Quantity[21.88, "Grams"], "TotalFat" -> 
                Quantity[50., "Grams"], "TotalFiber" -> 
                Quantity[6.25, "Grams"], "TotalProtein" -> 
                Quantity[24.03, "Grams"], "TotalSaturatedFat" -> 
                Quantity[9.375, "Grams"], "VitaminC" -> 
                Quantity[0., "Milligrams"]]}], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[1.8738126`7.423241152763944, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.2029999999999994, "Seconds"], "MemoryUsed" -> 
           Quantity[10032, "Bytes"]]], 11 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
           "getNutritionData-failures", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Normal[
              Utilities`GenerateData`Private`getNutritionData[
               Association["garbage" -> Missing["NotAvailable"]], 
               Association[
               "garbage" -> 
                Quantity[100, "Grams"]], $CellContext`testNutrients]]], 
           "ExpectedOutput" -> HoldForm[{
              Repeated[Blank[String] -> Blank[Association]]}], "ActualOutput" -> 
           HoldForm[{
             "garbage" -> 
              Association[
               "TotalCalories" -> Missing["NotAvailable"], "Calcium" -> 
                Missing["NotAvailable"], "Cholesterol" -> 
                Missing["NotAvailable"], "Iron" -> Missing["NotAvailable"], 
                "Sodium" -> Missing["NotAvailable"], "TotalCarbohydrates" -> 
                Missing["NotAvailable"], "TotalFat" -> 
                Missing["NotAvailable"], "TotalFiber" -> 
                Missing["NotAvailable"], "TotalProtein" -> 
                Missing["NotAvailable"], "TotalSaturatedFat" -> 
                Missing["NotAvailable"], "VitaminC" -> 
                Missing["NotAvailable"]]}], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0019998`4.4515015618761655, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1304, "Bytes"]]],
         12 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
           "getNutritionData-both", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`GenerateData`Private`getNutritionData[
              Association[
              "refried beans" -> 
               Entity["Food", {
                 "FoodType" -> ContainsExactly[{"Bean"}], "AddedFoodTypes" -> 
                  ContainsExactly[{}], "Preparation" -> "Refried"}], 
               "garbage" -> Missing["NotAvailable"]], 
              Association[
              "refried beans" -> Quantity[100, "Grams"], "garbage" -> 
               Quantity[100, "Grams"]], $CellContext`testNutrients]], 
           "ExpectedOutput" -> HoldForm[
             Association[
             "refried beans" -> 
              Association[
               "TotalCalories" -> Blank[Quantity], "Calcium" -> 
                Blank[Quantity], "Cholesterol" -> Blank[Quantity], "Iron" -> 
                Blank[Quantity], "Sodium" -> Blank[Quantity], 
                "TotalCarbohydrates" -> Blank[Quantity], "TotalFat" -> 
                Blank[Quantity], "TotalFiber" -> Blank[Quantity], 
                "TotalProtein" -> Blank[Quantity], "TotalSaturatedFat" -> 
                Blank[Quantity], "VitaminC" -> Blank[Quantity]], "garbage" -> 
              Association[
               "TotalCalories" -> Missing["NotAvailable"], "Calcium" -> 
                Missing["NotAvailable"], "Cholesterol" -> 
                Missing["NotAvailable"], "Iron" -> Missing["NotAvailable"], 
                "Sodium" -> Missing["NotAvailable"], "TotalCarbohydrates" -> 
                Missing["NotAvailable"], "TotalFat" -> 
                Missing["NotAvailable"], "TotalFiber" -> 
                Missing["NotAvailable"], "TotalProtein" -> 
                Missing["NotAvailable"], "TotalSaturatedFat" -> 
                Missing["NotAvailable"], "VitaminC" -> 
                Missing["NotAvailable"]]]], "ActualOutput" -> HoldForm[
             Association[
             "refried beans" -> 
              Association[
               "TotalCalories" -> Quantity[92., "LargeCalories"], "Calcium" -> 
                Quantity[31., "Milligrams"], "Cholesterol" -> 
                Quantity[0., "Milligrams"], "Iron" -> 
                Quantity[1.6700000000000002`, "Milligrams"], "Sodium" -> 
                Quantity[376., "Milligrams"], "TotalCarbohydrates" -> 
                Quantity[15.379999999999999`, "Grams"], "TotalFat" -> 
                Quantity[1.15, "Grams"], "TotalFiber" -> 
                Quantity[4.6, "Grams"], "TotalProtein" -> 
                Quantity[5.38, "Grams"], "TotalSaturatedFat" -> 
                Quantity[0., "Grams"], "VitaminC" -> 
                Quantity[0., "Milligrams"]], "garbage" -> 
              Association[
               "TotalCalories" -> Missing["NotAvailable"], "Calcium" -> 
                Missing["NotAvailable"], "Cholesterol" -> 
                Missing["NotAvailable"], "Iron" -> Missing["NotAvailable"], 
                "Sodium" -> Missing["NotAvailable"], "TotalCarbohydrates" -> 
                Missing["NotAvailable"], "TotalFat" -> 
                Missing["NotAvailable"], "TotalFiber" -> 
                Missing["NotAvailable"], "TotalProtein" -> 
                Missing["NotAvailable"], "TotalSaturatedFat" -> 
                Missing["NotAvailable"], "VitaminC" -> 
                Missing["NotAvailable"]]]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.8939106`7.101809085008101, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.1720000000000006, "Seconds"], "MemoryUsed" -> 
           Quantity[8000, "Bytes"]]], 13 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
           "iGenerateData-garbage", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`GenerateData`Private`iGenerateData["garbage", 
              Map[
              Entity["Nutrient", #]& , {
               "TotalCalories", "TotalFat", "TotalCarbohydrates", 
                "TotalProtein"}], 
              Quantity[100, "Grams"]]], "ExpectedOutput" -> HoldForm[
             Blank[Association]], "ActualOutput" -> HoldForm[
             Association[
             "Garbage" -> 
              Association[
               "Label" -> "garbage", "Food" -> Missing["NotAvailable"], 
                "ServingSizeString" -> Quantity[100, "Grams"], "ServingSizes" -> {
                  Quantity[100, "Grams"]}, "TotalCalories" -> 
                Missing["NotAvailable"], "TotalFat" -> 
                Missing["NotAvailable"], "TotalCarbohydrates" -> 
                Missing["NotAvailable"], "TotalProtein" -> 
                Missing["NotAvailable"]]]], "ExpectedMessages" -> {
             HoldForm[
              MessageName[Utilities`GenerateData`GenerateData, "noparse"]]}, 
           "ActualMessages" -> {
             HoldForm[
              Message[
               MessageName[Utilities`GenerateData`GenerateData, "noparse"], 
               "garbage"]]}, "AbsoluteTimeUsed" -> 
           Quantity[2.5377462`7.554963183970869, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.732999999999997, "Seconds"], "MemoryUsed" -> 
           Quantity[24160, "Bytes"]]], 14 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
           "getServingSizeData-both", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Normal[
              Utilities`GenerateData`Private`getServingSizeData[
               Association[
               "refried beans" -> 
                Entity["Food", {"FoodType" -> ContainsExactly[{"Bean"}]}], 
                "garbage" -> Missing["NotAvailable"]]]]], "ExpectedOutput" -> 
           HoldForm[{
              Repeated[Blank[String] -> Blank[Quantity]]}], "ActualOutput" -> 
           HoldForm[{
             "refried beans" -> Quantity[130., "Grams"], "garbage" -> 
              Quantity[100, "Grams"]}], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[1.2188781`7.236475271830565, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.3119999999999976, "Seconds"], "MemoryUsed" -> 
           Quantity[12280, "Bytes"]]], 15 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
           "validFoodEntityQ-True", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`GenerateData`Private`validFoodEntityQ[
              Part[$CellContext`testInterpretations, 1]]], "ExpectedOutput" -> 
           HoldForm[True], "ActualOutput" -> HoldForm[True], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[40, "Bytes"]]], 16 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
           "validFoodEntityQ-False", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Utilities`GenerateData`Private`validFoodEntityQ[
              Missing["NotAvailable"]]], "ExpectedOutput" -> HoldForm[False], 
           "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]]], 
      "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
       14, 15, 16}, "TestsFailedIndices" -> {}, 
      "TestsFailedWrongResultsIndices" -> {}, 
      "TestsFailedWithMessagesIndices" -> {}, 
      "TestsFailedWithErrorsIndices" -> {}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.729257099792847*^9, 3.7292572859128475`*^9, 3.7292573646558475`*^9, 
   3.729257449748212*^9, 3.7292586901606455`*^9, 3.729258889666194*^9, 
   3.729258926590886*^9, 3.7292599281174726`*^9, {3.729260691538336*^9, 
   3.729260719295886*^9}, 3.729261122254468*^9, 3.7292611743096733`*^9, 
   3.729261268744116*^9, 3.7292625956148033`*^9, 3.729262796174857*^9, 
   3.729263027242962*^9, 3.729263061946432*^9, 3.7292630964968863`*^9, 
   3.729263212762512*^9, 3.729263259687204*^9, 3.729338031821136*^9, 
   3.7293512457600236`*^9, 3.729966464132848*^9, 3.729966567347168*^9, 
   3.7300544110434933`*^9, {3.730054441323494*^9, 3.7300544505154934`*^9}, 
   3.7301158276010494`*^9, {3.7302159426207447`*^9, 3.730215971795745*^9}, 
   3.730216006543745*^9, 3.730476709257451*^9, 3.730484717485261*^9, 
   3.7305626647367344`*^9, 3.730831238765555*^9, 3.73083127232191*^9, 
   3.7308313623949165`*^9, 3.7312476537049747`*^9, 3.7312477201386175`*^9, {
   3.73124776916952*^9, 3.73124778337294*^9}, 3.7312479135599575`*^9, 
   3.731849359910182*^9, 3.732281485681366*^9, 3.732361935841216*^9, 
   3.732377905953713*^9, 3.7325601370407605`*^9, 3.7331570462660804`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"2af40c24-75f6-41cd-9182-bffe4366461d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["RadarPlot tests", "Subsection",
 CellChangeTimes->{{3.729257034208847*^9, 3.7292570378158474`*^9}, {
  3.731852842409421*^9, 
  3.7318528449606757`*^9}},ExpressionUUID->"f3ea7d88-016c-41bb-b2d3-\
4aa6b9c9960f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"results", "=", 
   RowBox[{"TestReport", "[", "\"\<Plots/RadarPlot.wlt\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"failedTestData", "=", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"\"\<AbsoluteTimeUsed\>\"", ","}], "*)"}], 
        RowBox[{
        "\"\<CPUTimeUsed\>\"", ",", "\"\<MemoryUsed\>\"", ",", 
         "\"\<TestIndex\>\"", ",", "\"\<Outcome\>\""}], "}"}], "]"}], "/@", 
      RowBox[{"First", "/@", 
       RowBox[{"Values", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Values", "[", 
          RowBox[{"results", "[", "\"\<TestsFailed\>\"", "]"}], "]"}]}], 
        "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "failedTestData", "]"}], ">", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Values", "/@", "failedTestData"}], ",", 
         RowBox[{"Keys", "[", 
          RowBox[{"First", "[", "failedTestData", "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7183857028786936`*^9, 3.7183857049326935`*^9}, {
  3.7183857684318933`*^9, 3.7183857693368936`*^9}, {3.727464083045461*^9, 
  3.7274640832984867`*^9}, {3.7274681926238947`*^9, 3.727468565588895*^9}, {
  3.7274686136388946`*^9, 3.7274686322218943`*^9}, {3.7288419124019527`*^9, 
  3.7288419144631524`*^9}, {3.7289117532552805`*^9, 3.7289117592188773`*^9}, {
  3.7289118688893633`*^9, 3.728911872499364*^9}, {3.728924943073042*^9, 
  3.7289249458372593`*^9}, {3.7314334746545644`*^9, 3.7314334762885647`*^9}, {
  3.731852858422022*^9, 3.7318528671988993`*^9}, {3.731853583462028*^9, 
  3.7318536076510277`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"98b52fe9-c465-4c03-848c-d487763b166e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.6633108182588765`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestReportObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
               Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1,
                ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Test Report: RadarPlot.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   TraditionalForm]]]}, PlotRange -> {{0, 1}, {0, 1}}, 
               Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1,
                ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}], Frame -> True, 
               FrameTicks -> None, FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Test Report: RadarPlot.wlt\"", "SummaryItem"]}], 
                 "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TestReportObject[
     Association[
     "Title" -> "Test Report: RadarPlot.wlt", "TimeElapsed" -> 
      Quantity[1.6600000000000001`, "Seconds"], "TestsSucceededCount" -> 7, 
      "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
      "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
      "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 1, "TestID" -> "Get-Package", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             Get["Plots/RadarPlot.wl"]], "ExpectedOutput" -> HoldForm[Null], 
           "ActualOutput" -> HoldForm[Null], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0539946`5.8828653260351516, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.04700000000000415, "Seconds"], "MemoryUsed" -> 
           Quantity[184, "Bytes"]]], 2 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 2, "TestID" -> "Simple-Input-3",
            "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`RadarPlot`RadarPlot[
              Association["A" -> 10, "B" -> 40, "C" -> 90]]], 
           "ExpectedOutput" -> HoldForm[
             Rotate[
              Blank[Graphics], 
              Blank[]]], "ActualOutput" -> HoldForm[
             Rotate[
              Graphics[{{}, {}, {{
                  Directive[
                   RGBColor[0.5, 0.5, 1.], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                   Thickness[Large]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{10, 0}, {-19.999999999999993`, 
                    34.64101615137755}, {0, 0}}]}, 
                    
                    LineBox[{{{10, 0}, {-19.999999999999993`, 
                    34.64101615137755}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$70134, 
                    FEPrivate`Not[DynamicChart`click$70134]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$70134, {{{1., 0}, {0, 1.}}, {
                    4.000000000000001, 6.928203230275509}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$70134}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-19.999999999999993`, 
                    34.64101615137755}, {-45.00000000000004, \
-77.94228634059945}, {0, 0}}]}, 
                    
                    LineBox[{{{-19.999999999999993`, 
                    34.64101615137755}, {-45.00000000000004, \
-77.94228634059945}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$70140, 
                    FEPrivate`Not[DynamicChart`click$70140]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$70140, {{{1., 0}, {0, 1.}}, {-18., 
                    2.204364238465236*^-15}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$70140}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-45.00000000000004, -77.94228634059945}, {
                    10., -2.4492935982947065`*^-15}, {0, 0}}]}, 
                    LineBox[{{{-45.00000000000004, -77.94228634059945}, {
                    10., -2.4492935982947065`*^-15}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$70144, 
                    FEPrivate`Not[DynamicChart`click$70144]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$70144, {{{1., 0}, {0, 1.}}, {
                    0.9999999999999987, -1.7320508075688783`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$70144}]]}}}}}, {}}, {{}}}}, {{{{
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$70134, 
                    FEPrivate`Not[DynamicChart`click$70134]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$70134, {{{1., 0}, {0, 1.}}, {
                    4.000000000000001, 6.928203230275509}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$70134}]], 
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$70140, 
                    FEPrivate`Not[DynamicChart`click$70140]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$70140, {{{1., 0}, {0, 1.}}, {-18., 
                    2.204364238465236*^-15}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$70140}]], 
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$70144, 
                    FEPrivate`Not[DynamicChart`click$70144]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$70144, {{{1., 0}, {0, 1.}}, {
                    0.9999999999999987, -1.7320508075688783`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$70144}]]}, {}}}, {}}, {}, {}}, {{{{
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {100., 0.}}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {-50., 86.60254037844386}}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {-50., -86.60254037844386}}]}}, {{
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 0, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 25, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 50, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 75, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 100, {0., 6.283185307179586}]}}}}, {{{{{
                    Style[
                    Rotate[
                    Line[{
                    Scaled[{0., 0.}, {-49.99999999999998, 86.60254037844388}], 
                    
                    Scaled[{-0.0029999999999999988`, 
                    0.005196152422706633}, {-49.99999999999998, 
                    86.60254037844388}]}], (-90) Degree], {}]}, {
                    Style[
                    Rotate[
                    Line[{
                    
                    Scaled[{0., 
                    0.}, {-50.00000000000004, -86.60254037844383}], 
                    
                    Scaled[{-0.0030000000000000027`, -0.00519615242270663}, \
{-50.00000000000004, -86.60254037844383}]}], (-90) Degree], {}]}, {
                    Style[
                    Rotate[
                    Line[{
                    Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                    
                    Scaled[{0.006, -1.4695761589768239`*^-18}, {
                    100., -2.4492935982947064`*^-14}]}], (-90) Degree], {}]}}, 
                   Style[
                    Rotate[
                    Line[{}], (-90) Degree], {}], {
                    Text[
                    Style[
                    Rotate[
                    Style["B", 16], (-90) Degree], {}], 
                    
                    Offset[{-3.9999999999999982`, 
                    6.92820323027551}, {-49.99999999999998, 
                    86.60254037844388}], {
                    0.4999999999999998, -0.8660254037844387}, Background -> 
                    Automatic], 
                    Text[
                    Style[
                    Rotate[
                    Style["C", 16], (-90) Degree], {}], 
                    
                    Offset[{-4.0000000000000036`, -6.928203230275507}, \
{-50.00000000000004, -86.60254037844383}], {0.5000000000000004, 
                    0.8660254037844384}, Background -> Automatic], 
                    Text[
                    Style[
                    Rotate[
                    Style["A", 16], (-90) Degree], {}], 
                    
                    Offset[{8., -1.959434878635765*^-15}, {
                    100., -2.4492935982947064`*^-14}], {-1., 
                    2.4492935982947064`*^-16}, Background -> Automatic]}, {
                    Circle[{0, 0}, 100., {0., 6.283185307179586}]}}}, {{
                   Directive[
                    GrayLevel[0.6], Antialiasing -> False]}, {}, 
                  Style[
                   Rotate[
                    Line[{}], (-90) Degree], {}], {}}}}, {
               DisplayFunction -> Identity, ContentSelectable -> False, 
                GridLinesStyle -> Dashing[{Small, Small}], 
                PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> 
                Scaled[0.05]}], 90 Degree]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.4919508`6.842436668979545, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.23399999999999466`, "Seconds"], "MemoryUsed" -> 
           Quantity[7918400, "Bytes"]]], 3 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
           "Not-Enough-Data-1", "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`RadarPlot`RadarPlot[
              Association["A" -> 10]]], "ExpectedOutput" -> HoldForm[$Failed],
            "ActualOutput" -> HoldForm[$Failed], "ExpectedMessages" -> {
             HoldForm[
              MessageName[Plots`RadarPlot`RadarPlot, "notenough"]]}, 
           "ActualMessages" -> {
             HoldForm[
              Message[
               MessageName[Plots`RadarPlot`RadarPlot, "notenough"]]]}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0009999`4.1504715662121825, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[272, "Bytes"]]], 
        4 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
           "Not-Enough-Data-2", "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`RadarPlot`RadarPlot[
              Association["A" -> 10, "B" -> 40]]], "ExpectedOutput" -> 
           HoldForm[$Failed], "ActualOutput" -> HoldForm[$Failed], 
           "ExpectedMessages" -> {
             HoldForm[
              MessageName[Plots`RadarPlot`RadarPlot, "notenough"]]}, 
           "ActualMessages" -> {
             HoldForm[
              Message[
               MessageName[Plots`RadarPlot`RadarPlot, "notenough"]]]}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[272, "Bytes"]]], 5 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
           "Not-Enough-Data-0", "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`RadarPlot`RadarPlot[
              Association[]]], "ExpectedOutput" -> HoldForm[$Failed], 
           "ActualOutput" -> HoldForm[$Failed], "ExpectedMessages" -> {
             HoldForm[
              MessageName[Plots`RadarPlot`RadarPlot, "notenough"]]}, 
           "ActualMessages" -> {
             HoldForm[
              Message[
               MessageName[Plots`RadarPlot`RadarPlot, "notenough"]]]}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0009999`4.150471566212184, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[272, "Bytes"]]], 
        6 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 6, "TestID" -> "Invalid-Syntax",
            "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`RadarPlot`RadarPlot[1234]], "ExpectedOutput" -> 
           HoldForm[$Failed], "ActualOutput" -> HoldForm[$Failed], 
           "ExpectedMessages" -> {
             HoldForm[
              MessageName[Plots`RadarPlot`RadarPlot, "invalid"]]}, 
           "ActualMessages" -> {
             HoldForm[
              Message[
               MessageName[Plots`RadarPlot`RadarPlot, "invalid"]]]}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[272, "Bytes"]]], 7 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
           "Invalid-Syntax-Association-Values", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Plots`RadarPlot`RadarPlot[
              Association["A" -> 12, "B" -> 34, "C" -> "String"]]], 
           "ExpectedOutput" -> HoldForm[$Failed], "ActualOutput" -> 
           HoldForm[$Failed], "ExpectedMessages" -> {
             HoldForm[
              MessageName[Plots`RadarPlot`RadarPlot, "invalid"]]}, 
           "ActualMessages" -> {
             HoldForm[
              Message[
               MessageName[Plots`RadarPlot`RadarPlot, "invalid"]]]}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0009999`4.1504715662121825, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[352, "Bytes"]]]],
       "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7}, 
      "TestsFailedIndices" -> {}, "TestsFailedWrongResultsIndices" -> {}, 
      "TestsFailedWithMessagesIndices" -> {}, 
      "TestsFailedWithErrorsIndices" -> {}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7300405544049797`*^9, 3.7300544937824936`*^9, 3.7300546487324934`*^9, 
   3.7300546953034935`*^9, 3.730054842856494*^9, 3.730054910976494*^9, 
   3.730055102082494*^9, 3.7300552392694936`*^9, 3.7300553577214937`*^9, 
   3.7300556917064743`*^9, 3.7301157972415686`*^9, 3.7301284320214443`*^9, 
   3.73012869880612*^9, 3.7301287531025496`*^9, 3.730129128277063*^9, 
   3.7301292090001345`*^9, 3.7301293671068974`*^9, 3.730134980335033*^9, 
   3.73013692050103*^9, 3.7301369592969093`*^9, 3.7302160413987446`*^9, 
   3.7302161119057446`*^9, 3.730216253723745*^9, 3.730219517061154*^9, 
   3.7304624719341264`*^9, 3.7304625592983274`*^9, 3.7304626713941827`*^9, {
   3.7304627540294456`*^9, 3.730462783586401*^9}, 3.7304631768000784`*^9, 
   3.7304636003770456`*^9, 3.7304662191363*^9, 3.7304662534607325`*^9, 
   3.7304719291122894`*^9, 3.730474180268569*^9, 3.7304745844819865`*^9, 
   3.730474722934074*^9, 3.730475178309074*^9, 3.7304760459441276`*^9, 
   3.7304802789324217`*^9, 3.7304803992114487`*^9, 3.7304805368602123`*^9, 
   3.730480694714996*^9, 3.730480806952218*^9, 3.7304817372792416`*^9, 
   3.7304817899115047`*^9, 3.7304824131918263`*^9, 3.730482450066513*^9, 
   3.7304828108825912`*^9, 3.730483057992185*^9, 3.7304831353442464`*^9, 
   3.7304832755742464`*^9, 3.7304839574262466`*^9, 3.7304840701062465`*^9, 
   3.730484352567773*^9, 3.7304846718506975`*^9, 3.730485005499059*^9, 
   3.730485045936103*^9, 3.7305468638929925`*^9, 3.730546909583561*^9, 
   3.7305506463987865`*^9, 3.7305627936893806`*^9, 3.7305628985208845`*^9, 
   3.7305633049099717`*^9, 3.730563444167487*^9, 3.7305646578746777`*^9, 
   3.730564879360503*^9, 3.7305667441545925`*^9, 3.7306397072368603`*^9, 
   3.7306398332986603`*^9, 3.730640060091861*^9, 3.7306616861427364`*^9, 
   3.730661796830804*^9, 3.730662069150033*^9, 3.73066219343546*^9, 
   3.7306623398551006`*^9, 3.7306631709872055`*^9, 3.730663500881192*^9, 
   3.730664288817821*^9, 3.730664374790223*^9, 3.7306644536874027`*^9, 
   3.730724005645756*^9, 3.730724656343161*^9, 3.7307252345587044`*^9, 
   3.7307266978654985`*^9, 3.730727380461506*^9, 3.7307275251110597`*^9, 
   3.730727676989145*^9, 3.730728633775728*^9, 3.7307290856529117`*^9, 
   3.730734542473625*^9, 3.7307348423964252`*^9, 3.7307361081360397`*^9, 
   3.730740050911947*^9, 3.730740174895938*^9, 3.730740967721424*^9, 
   3.730823282473588*^9, 3.73082380724706*^9, 3.730824103256658*^9, 
   3.7308312033300114`*^9, 3.7310747634667645`*^9, 3.7310752144597645`*^9, 
   3.7310752620457644`*^9, 3.7310753653867645`*^9, 3.7310755560377645`*^9, 
   3.7310756784337645`*^9, 3.7310777978810997`*^9, 3.7310780700663157`*^9, 
   3.7310814344807467`*^9, 3.7310819460799017`*^9, 3.731082303740664*^9, 
   3.731088318235917*^9, 3.7311674804107065`*^9, 3.7311677760469213`*^9, 
   3.7311750386831884`*^9, 3.7311753723169937`*^9, 3.7311765617400846`*^9, 
   3.731176878831674*^9, 3.731177185529746*^9, 3.7311775812637463`*^9, 
   3.731177925509224*^9, 3.731179167956544*^9, 3.731179367493415*^9, 
   3.7311797969817753`*^9, 3.7311800178267775`*^9, 3.731180300890592*^9, 
   3.731180487166094*^9, 3.731239105561664*^9, 3.73123971333899*^9, 
   3.7312403856020584`*^9, 3.7312405216366606`*^9, 3.7312468241874323`*^9, 
   3.731247590772682*^9, 3.7312517570187316`*^9, 3.7312531614775324`*^9, 
   3.7312536562875323`*^9, 3.7312540040617037`*^9, 3.7312554013263693`*^9, 
   3.7312559477540064`*^9, 3.731256685010725*^9, 3.7314304855378695`*^9, 
   3.731431109584268*^9, 3.7314334165905647`*^9, 3.731757894102744*^9, 
   3.731764973440703*^9, 3.7317651909345026`*^9, 3.731765883860325*^9, 
   3.7317661020414476`*^9, 3.731767199748366*^9, 3.7317677425938387`*^9, 
   3.7317679667862554`*^9, 3.7317685517038574`*^9, 3.731768832663161*^9, 
   3.731771090688981*^9, 3.7317715896547327`*^9, 3.7317718337914605`*^9, 
   3.731773066117946*^9, 3.7317737522370024`*^9, 3.731774519716816*^9, 
   3.731774589122011*^9, 3.7317747853369303`*^9, 3.7317764506190825`*^9, 
   3.731776550606386*^9, 3.731776665500115*^9, 3.73177676478016*^9, 
   3.731776862436363*^9, 3.731777373714949*^9, 3.731777680832116*^9, 
   3.7317798360978756`*^9, 3.7317801128275795`*^9, 3.7318494743354363`*^9, 
   3.731852870146194*^9, {3.7318535853350277`*^9, 3.731853630916028*^9}, 
   3.732281487301528*^9, 3.7325601391547604`*^9, 3.7331570480669003`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"13c96d25-570c-4e2d-af70-626f8a481111"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["NutritionRadarPlot tests", "Subsection",
 CellChangeTimes->{{3.729257034208847*^9, 3.7292570378158474`*^9}, {
  3.731852842409421*^9, 3.7318528449606757`*^9}, {3.7318536439200277`*^9, 
  3.731853645043028*^9}},ExpressionUUID->"50b45983-aa91-4015-9e3e-\
91a4cf749c1d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"results", "=", 
   RowBox[{"TestReport", "[", "\"\<Plots/NutritionRadarPlot.wlt\>\"", "]"}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"failedTestData", "=", 
     RowBox[{
      RowBox[{"KeyDrop", "[", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{"\"\<AbsoluteTimeUsed\>\"", ","}], "*)"}], 
        RowBox[{
        "\"\<CPUTimeUsed\>\"", ",", "\"\<MemoryUsed\>\"", ",", 
         "\"\<TestIndex\>\"", ",", "\"\<Outcome\>\""}], "}"}], "]"}], "/@", 
      RowBox[{"First", "/@", 
       RowBox[{"Values", "[", 
        RowBox[{"Join", "@@", 
         RowBox[{"Values", "[", 
          RowBox[{"results", "[", "\"\<TestsFailed\>\"", "]"}], "]"}]}], 
        "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "failedTestData", "]"}], ">", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Values", "/@", "failedTestData"}], ",", 
         RowBox[{"Keys", "[", 
          RowBox[{"First", "[", "failedTestData", "]"}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{"LightGray", ",", "None"}], "}"}]}], "}"}]}]}], "*)"}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7183857028786936`*^9, 3.7183857049326935`*^9}, {
  3.7183857684318933`*^9, 3.7183857693368936`*^9}, {3.727464083045461*^9, 
  3.7274640832984867`*^9}, {3.7274681926238947`*^9, 3.727468565588895*^9}, {
  3.7274686136388946`*^9, 3.7274686322218943`*^9}, {3.7288419124019527`*^9, 
  3.7288419144631524`*^9}, {3.7289117532552805`*^9, 3.7289117592188773`*^9}, {
  3.7289118688893633`*^9, 3.728911872499364*^9}, {3.728924943073042*^9, 
  3.7289249458372593`*^9}, {3.7314334746545644`*^9, 3.7314334762885647`*^9}, {
  3.731852858422022*^9, 3.7318528671988993`*^9}, {3.731853583462028*^9, 
  3.7318536076510277`*^9}, {3.731853649306028*^9, 3.731853650660028*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"24f38925-4729-4f07-9895-f2a47d3c58b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2266159348950711`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestReportObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
               PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Test Report: NutritionRadarPlot.wlt\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["22", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                InsetBox[
                 BoxData[
                  FormBox[
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SuccessIcon"]], Alignment -> Center, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], TraditionalForm]]]}, 
               PlotRange -> {{0, 1}, {0, 1}}, Background -> GrayLevel[0.93], 
               Axes -> False, AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.55]]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Title: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Test Report: NutritionRadarPlot.wlt\"", 
                    "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Success rate: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{"100", "\"%\""}, "RowDefault"], 
                    "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Tests run: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["22", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Succeeded: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["22", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"Failed: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with wrong results: \"", 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with messages: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox[
                   "\"Failed with errors: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    TestReportObject[
     Association[
     "Title" -> "Test Report: NutritionRadarPlot.wlt", "TimeElapsed" -> 
      Quantity[1.23, "Seconds"], "TestsSucceededCount" -> 22, 
      "TestsFailedCount" -> 0, "TestsFailedWrongResultsCount" -> 0, 
      "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
      "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 1, "TestID" -> "Get-Package", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             Get["Plots/NutritionRadarPlot.wl"]], "ExpectedOutput" -> 
           HoldForm[Null], "ActualOutput" -> HoldForm[Null], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0779922`6.042566168902665, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.06199999999999761, "Seconds"], "MemoryUsed" -> 
           Quantity[-2440, "Bytes"]]], 2 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 2, "TestID" -> 
           "Test-Input-for-validity", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             
             Plots`NutritionRadarPlot`Private`validInputQ[$CellContext`\
testInput = Association[
               Entity["Nutrient", "VitaminA"] -> Quantity[1, "Milligrams"], 
                "VitaminB6" -> Quantity[1, "Milligrams"], "VitaminC" -> 
                Quantity[20, "Milligrams"]]]], "ExpectedOutput" -> 
           HoldForm[True], "ActualOutput" -> HoldForm[True], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0019998`4.4515015618761655, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.015999999999998238`, "Seconds"], "MemoryUsed" -> 
           Quantity[912, "Bytes"]]], 3 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 3, "TestID" -> 
           "Not-Enough-Data-1", "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`validInputQ[
              Part[$CellContext`testInput, 
               Span[1, 1]]]], "ExpectedOutput" -> HoldForm[False], 
           "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        4 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 4, "TestID" -> 
           "Not-Enough-Data-2", "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`validInputQ[
              Part[$CellContext`testInput, 
               Span[1, 2]]]], "ExpectedOutput" -> HoldForm[False], 
           "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.1505149978319915, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        5 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 5, "TestID" -> 
           "Not-Enough-Data-0", "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`validInputQ[
              Association[]]], "ExpectedOutput" -> HoldForm[False], 
           "ActualOutput" -> HoldForm[False], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0009999`4.1504715662121825, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        6 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 6, "TestID" -> "Invalid-Syntax",
            "Outcome" -> "Success", "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`validInputQ[1234]], 
           "ExpectedOutput" -> HoldForm[False], "ActualOutput" -> 
           HoldForm[False], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[40, "Bytes"]]], 7 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 7, "TestID" -> 
           "Invalid-Syntax-Association-Values", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`validInputQ[
              Association[
              "VitaminA" -> Quantity[1, "Grams"], "VitaminB12" -> 
               Quantity[40, "Grams"], "VitaminC" -> "String"]]], 
           "ExpectedOutput" -> HoldForm[False], "ActualOutput" -> 
           HoldForm[False], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0009999`4.150471566212184, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        8 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 8, "TestID" -> 
           "Invalid-Syntax-NonNutrient-Keys", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Plots`NutritionRadarPlot`Private`validInputQ[
              Association[
              "NotANutrient" -> Quantity[1, "Grams"], "VitaminB12" -> 
               Quantity[40, "Grams"], "VitaminC" -> 
               Quantity[4, "Milligrams"]]]], "ExpectedOutput" -> 
           HoldForm[False], "ActualOutput" -> HoldForm[False], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0019998`4.451501561876164, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 
        9 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 9, "TestID" -> 
           "normalize-Entity-to-SNs", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Plots`NutritionRadarPlot`Private`normalizeEntitiesToStandardNames[
              Keys[$CellContext`testInput]]], "ExpectedOutput" -> 
           HoldForm[{"VitaminA", "VitaminB6", "VitaminC"}], "ActualOutput" -> 
           HoldForm[{"VitaminA", "VitaminB6", "VitaminC"}], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[160, "Bytes"]]], 10 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 10, "TestID" -> 
           "normalize-Entity-to-SNs-Association-Keys", "Outcome" -> "Success",
            "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`Private`\
normalizeEntitiesToStandardNames[$CellContext`testInput]], "ExpectedOutput" -> 
           HoldForm[
             Association[
             "VitaminA" -> Quantity[1, "Milligrams"], "VitaminB6" -> 
              Quantity[1, "Milligrams"], "VitaminC" -> 
              Quantity[20, "Milligrams"]]], "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> Quantity[1, "Milligrams"], "VitaminB6" -> 
              Quantity[1, "Milligrams"], "VitaminC" -> 
              Quantity[20, "Milligrams"]]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0``7.150514997831988, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[424, "Bytes"]]], 
        11 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 11, "TestID" -> 
           "get-nutrient-target-property-defaults", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`getNutrientTargetProperty[]], 
           "ExpectedOutput" -> HoldForm[
             EntityProperty["Nutrient", "DailyValue", {}]], "ActualOutput" -> 
           HoldForm[
             EntityProperty["Nutrient", "DailyValue", {}]], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[408, "Bytes"]]], 12 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 12, "TestID" -> 
           "get-nutrient-target-property-gender", "Outcome" -> "Success", 
           "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`getNutrientTargetProperty[
             "Gender" -> "Female"]], "ExpectedOutput" -> HoldForm[
             EntityProperty[
             "Nutrient", "DailyValue", {
              "Gender" -> Entity["Gender", "Female"]}]], "ActualOutput" -> 
           HoldForm[
             EntityProperty[
             "Nutrient", "DailyValue", {
              "Gender" -> Entity["Gender", "Female"]}]], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> Quantity[0``7.1505149978319915, "Seconds"], 
           "CPUTimeUsed" -> Quantity[0., "Seconds"], "MemoryUsed" -> 
           Quantity[592, "Bytes"]]], 13 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 13, "TestID" -> 
           "get-nutrient-target-property-all-qualifiers", "Outcome" -> 
           "Success", "Input" -> HoldForm[
             Plots`NutritionRadarPlot`Private`getNutrientTargetProperty[
             "Gender" -> "Female", "PregnancyStage" -> "Pregnant", "Age" -> 
              25]], "ExpectedOutput" -> HoldForm[
             EntityProperty[
             "Nutrient", "DailyValue", {
              "Age" -> Quantity[25, "Years"], "Gender" -> 
               Entity["Gender", "Female"], "PregnancyStage" -> 
               Entity["PregnancyStage", "Pregnant"]}]], "ActualOutput" -> 
           HoldForm[
             EntityProperty[
             "Nutrient", "DailyValue", {
              "Age" -> Quantity[25, "Years"], "Gender" -> 
               Entity["Gender", "Female"], "PregnancyStage" -> 
               Entity["PregnancyStage", "Pregnant"]}]], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0009999`4.150471566212184, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[504, "Bytes"]]], 
        14 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 14, "TestID" -> 
           "get-nutrition-targets-Automatic", "Outcome" -> "Success", "Input" -> 
           HoldForm[
             Plots`NutritionRadarPlot`Private`getNutritionTargets[
              
              Plots`NutritionRadarPlot`Private`\
normalizeEntitiesToStandardNames[
               Keys[$CellContext`testInput]]]], "ExpectedOutput" -> HoldForm[
             Association[
             "VitaminA" -> Quantity[0.0015, "Grams"], "VitaminB6" -> 
              Quantity[0.002, "Grams"], "VitaminC" -> 
              Quantity[0.06, "Grams"]]], "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> Quantity[0.0015, "Grams"], "VitaminB6" -> 
              Quantity[0.002, "Grams"], "VitaminC" -> 
              Quantity[0.06, "Grams"]]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0079992`5.053561553204128, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1608, "Bytes"]]],
         15 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 15, "TestID" -> 
           "normalize-nutrition-data-to-percents-Automatic", "Outcome" -> 
           "Success", "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`Private`normalizeNutritionData[$\
CellContext`testInput]], "ExpectedOutput" -> HoldForm[
             Association[
             "VitaminA" -> 66.6667, "VitaminB6" -> 50., "VitaminC" -> 
              33.3333]], "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> 66.66666666666666, "VitaminB6" -> 50., "VitaminC" -> 
              33.333333333333336`]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0219978`5.492894247034388, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.03200000000000358, "Seconds"], "MemoryUsed" -> 
           Quantity[984, "Bytes"]]], 16 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 16, "TestID" -> 
           "normalize-nutrition-data-to-percents-self-test", "Outcome" -> 
           "Success", "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`Private`normalizeNutritionData[$\
CellContext`testInput, "NutritionTargets" -> $CellContext`testInput]], 
           "ExpectedOutput" -> HoldForm[
             Association[
             "VitaminA" -> 100., "VitaminB6" -> 100., "VitaminC" -> 100.]], 
           "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> 100., "VitaminB6" -> 100., "VitaminC" -> 100.]], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0259974`5.565444914183, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.030999999999998806`, "Seconds"], "MemoryUsed" -> 
           Quantity[1408, "Bytes"]]], 17 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 17, "TestID" -> 
           "normalize-nutrition-data-to-percents-self-test-with-per-day-\
amounts", "Outcome" -> "Success", "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`Private`normalizeNutritionData[$\
CellContext`testInput, 
              "NutritionTargets" -> $CellContext`testInput/Quantity[
               1, "Days"]]], "ExpectedOutput" -> HoldForm[
             Association[
             "VitaminA" -> 100., "VitaminB6" -> 100., "VitaminC" -> 100.]], 
           "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> 100., "VitaminB6" -> 100., "VitaminC" -> 100.]], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0219978`5.49289424703439, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.015000000000000568`, "Seconds"], "MemoryUsed" -> 
           Quantity[520, "Bytes"]]], 18 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 18, "TestID" -> 
           "normalize-nutrition-data-to-percents-self-test-with-explicit-\
duration", "Outcome" -> "Success", "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`Private`normalizeNutritionData[$\
CellContext`testInput, 
              "NutritionTargets" -> $CellContext`testInput/Quantity[
               1, "Days"], "Duration" -> Quantity[7, "Days"]]], 
           "ExpectedOutput" -> HoldForm[
             Association[
             "VitaminA" -> 14.2857, "VitaminB6" -> 14.2857, "VitaminC" -> 
              14.2857]], "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> 14.285714285714285`, "VitaminB6" -> 
              14.285714285714285`, "VitaminC" -> 14.285714285714285`]], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0229977`5.512199402229775, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.031999999999996476`, "Seconds"], "MemoryUsed" -> 
           Quantity[536, "Bytes"]]], 19 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 19, "TestID" -> 
           "normalize-nutrition-data-to-percents-self-test-with-DRIType", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`Private`normalizeNutritionData[$\
CellContext`testInput, 
              "NutritionTargets" -> $CellContext`testInput/Quantity[
               1, "Days"], "DietaryReferenceIntakeType" -> 
              "EstimatedAverageRequirement"]], "ExpectedOutput" -> HoldForm[
             Association[
             "VitaminA" -> 100., "VitaminB6" -> 100., "VitaminC" -> 100.]], 
           "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> 100., "VitaminB6" -> 100., "VitaminC" -> 100.]], 
           "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 
           Quantity[0.0239976`5.53068280792379, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.015000000000000568`, "Seconds"], "MemoryUsed" -> 
           Quantity[440, "Bytes"]]], 20 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 20, "TestID" -> 
           "normalize-nutrition-data-to-percents-with-all-qualifiers", 
           "Outcome" -> "Success", "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`Private`normalizeNutritionData[$\
CellContext`testInput, "DietaryReferenceIntakeType" -> 
              "EstimatedAverageRequirement", "Gender" -> "Female", 
              "PregnancyStage" -> "Pregnant", "Age" -> 
              Quantity[25, "Years"]]], "ExpectedOutput" -> HoldForm[
             Association[
             "VitaminA" -> 181.818, "VitaminB6" -> 62.5, "VitaminC" -> 
              28.5714]], "ActualOutput" -> HoldForm[
             Association[
             "VitaminA" -> 181.8181818181818, "VitaminB6" -> 62.5, "VitaminC" -> 
              28.57142857142857]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0229977`5.512199402229777, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.03100000000000591, "Seconds"], "MemoryUsed" -> 
           Quantity[1016, "Bytes"]]], 21 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 21, "TestID" -> 
           "Simple-Input-3", "Outcome" -> "Success", "Input" -> HoldForm[
             
             Plots`NutritionRadarPlot`NutritionRadarPlot[$CellContext`\
testInput]], "ExpectedOutput" -> HoldForm[
             Rotate[
              Blank[Graphics], 
              Blank[]]], "ActualOutput" -> HoldForm[
             Rotate[
              Graphics[{{}, {}, {{
                  Directive[
                   RGBColor[0.5, 0.5, 1.], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                   Thickness[Large]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{66.66666666666666, 0}, {-24.99999999999999, 
                    43.30127018922194}, {0, 0}}]}, 
                    
                    LineBox[{{{66.66666666666666, 0}, {-24.99999999999999, 
                    43.30127018922194}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72216, 
                    FEPrivate`Not[DynamicChart`click$72216]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72216, {{{1., 0}, {0, 1.}}, {
                    5.000000000000002, 8.660254037844387}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$72216}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-24.99999999999999, 
                    43.30127018922194}, {-16.666666666666682`, \
-28.86751345948128}, {0, 0}}]}, 
                    
                    LineBox[{{{-24.99999999999999, 
                    43.30127018922194}, {-16.666666666666682`, \
-28.86751345948128}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72220, 
                    FEPrivate`Not[DynamicChart`click$72220]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72220, {{{1., 0}, {
                    0, 1.}}, {-6.666666666666668, 8.164311994315689*^-16}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$72220}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-16.666666666666682`, -28.86751345948128}, {
                    66.66666666666666, -1.6328623988631375`*^-14}, {0, 0}}]}, 
                    
                    LineBox[{{{-16.666666666666682`, -28.86751345948128}, {
                    66.66666666666666, -1.6328623988631375`*^-14}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72224, 
                    FEPrivate`Not[DynamicChart`click$72224]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72224, {{{1., 0}, {0, 1.}}, {
                    6.666666666666656, -11.54700538379252}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$72224}]]}}}}}, {}}, {{}}}}, {{{{
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72216, 
                    FEPrivate`Not[DynamicChart`click$72216]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[DynamicChart`click$72216, {{{1., 0}, {0, 1.}}, {
                    5.000000000000002, 8.660254037844387}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$72216}]], 
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72220, 
                    FEPrivate`Not[DynamicChart`click$72220]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72220, {{{1., 0}, {
                    0, 1.}}, {-6.666666666666668, 8.164311994315689*^-16}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$72220}]], 
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72224, 
                    FEPrivate`Not[DynamicChart`click$72224]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72224, {{{1., 0}, {0, 1.}}, {
                    6.666666666666656, -11.54700538379252}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$72224}]]}, {}}}, {}}, {}, {}}, {{{{
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {100., 0.}}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {-50., 86.60254037844386}}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {-50., -86.60254037844386}}]}}, {{
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 0, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 25, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 50, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 75, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 100, {0., 6.283185307179586}]}}}}, {{{{{
                    Style[
                    Rotate[
                    Line[{
                    Scaled[{0., 0.}, {-49.99999999999998, 86.60254037844388}], 
                    
                    Scaled[{-0.0029999999999999988`, 
                    0.005196152422706633}, {-49.99999999999998, 
                    86.60254037844388}]}], (-90) Degree], {}]}, {
                    Style[
                    Rotate[
                    Line[{
                    
                    Scaled[{0., 
                    0.}, {-50.00000000000004, -86.60254037844383}], 
                    
                    Scaled[{-0.0030000000000000027`, -0.00519615242270663}, \
{-50.00000000000004, -86.60254037844383}]}], (-90) Degree], {}]}, {
                    Style[
                    Rotate[
                    Line[{
                    Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                    
                    Scaled[{0.006, -1.4695761589768239`*^-18}, {
                    100., -2.4492935982947064`*^-14}]}], (-90) Degree], {}]}}, 
                   Style[
                    Rotate[
                    Line[{}], (-90) Degree], {}], {
                    Text[
                    Style[
                    Rotate[
                    Style["Vitamin B6", 16], (-90) Degree], {}], 
                    Offset[{-3.9999999999999982`, 
                    6.92820323027551}, {-49.99999999999998, 
                    86.60254037844388}], {
                    0.4999999999999998, -0.8660254037844387}, Background -> 
                    Automatic], 
                    Text[
                    Style[
                    Rotate[
                    Style["Vitamin C", 16], (-90) Degree], {}], 
                    
                    Offset[{-4.0000000000000036`, -6.928203230275507}, \
{-50.00000000000004, -86.60254037844383}], {0.5000000000000004, 
                    0.8660254037844384}, Background -> Automatic], 
                    Text[
                    Style[
                    Rotate[
                    Style["Vitamin A", 16], (-90) Degree], {}], 
                    
                    Offset[{8., -1.959434878635765*^-15}, {
                    100., -2.4492935982947064`*^-14}], {-1., 
                    2.4492935982947064`*^-16}, Background -> Automatic]}, {
                    Circle[{0, 0}, 100., {0., 6.283185307179586}]}}}, {{
                   Directive[
                    GrayLevel[0.6], Antialiasing -> False]}, {}, 
                  Style[
                   Rotate[
                    Line[{}], (-90) Degree], {}], {}}}}, {
               DisplayFunction -> Identity, ContentSelectable -> False, 
                GridLinesStyle -> Dashing[{Small, Small}], 
                PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> 
                Scaled[0.05]}], 90 Degree]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.059994`5.928622816595827, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.046999999999997044`, "Seconds"], "MemoryUsed" -> 
           Quantity[39088, "Bytes"]]], 22 -> TestResultObject[
          Association[
          "TestClass" -> None, "TestIndex" -> 22, "TestID" -> 
           "NutritionRadarPlot-ignore-extra-nutrition-targets", "Outcome" -> 
           "Success", "Input" -> HoldForm[
             Plots`NutritionRadarPlot`NutritionRadarPlot[
              Association[
              "TotalCalories" -> Quantity[224., "LargeCalories"], "Calcium" -> 
               Quantity[250., "Milligrams"], "Sodium" -> 
               Quantity[55.5, "Milligrams"]], "NutritionTargets" -> 
              Association[
               "TotalCalories" -> Quantity[2000, "Days"^(-1) "LargeCalories"],
                 "Calcium" -> Quantity[1., "Days"^(-1) "Grams"], "Sodium" -> 
                Quantity[2.4, "Days"^(-1) "Grams"], "VitaminC" -> 
                Quantity[0.06, "Days"^(-1) "Grams"]]]], "ExpectedOutput" -> 
           HoldForm[
             Rotate[
              Blank[Graphics], 
              Blank[]]], "ActualOutput" -> HoldForm[
             Rotate[
              Graphics[{{}, {}, {{
                  Directive[
                   RGBColor[0.5, 0.5, 1.], 
                   EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                   Thickness[Large]], {{{{{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{11.200000000000001`, 
                    0}, {-12.499999999999995`, 21.65063509461097}, {0, 0}}]}, 
                    
                    LineBox[{{{11.200000000000001`, 0}, {-12.499999999999995`,
                     21.65063509461097}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72322, 
                    FEPrivate`Not[DynamicChart`click$72322]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72322, {{{1., 0}, {0, 1.}}, {
                    2.500000000000001, 4.330127018922194}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$72322}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-12.499999999999995`, 
                    21.65063509461097}, {-1.156250000000001, \
-2.0026837462515137`}, {0, 0}}]}, 
                    
                    LineBox[{{{-12.499999999999995`, 
                    21.65063509461097}, {-1.156250000000001, \
-2.0026837462515137`}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72326, 
                    FEPrivate`Not[DynamicChart`click$72326]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72326, {{{1., 0}, {0, 1.}}, {-0.4625, 
                    5.663991446056509*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$72326}]]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    Thickness[Large], 
                    RGBColor[1, 0.5, 0]], 
                    GeometricTransformation[
                    EventHandler[
                    RawBoxes[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], {{
                    EdgeForm[], 
                    Opacity[0.5], 
                    GrayLevel[0.5], 
                    
                    PolygonBox[{{-1.156250000000001, -2.0026837462515137`}, {
                    11.200000000000001`, -2.7432088300900714`*^-15}, {0, 
                    0}}]}, 
                    
                    LineBox[{{{-1.156250000000001, -2.0026837462515137`}, {
                    11.200000000000001`, -2.7432088300900714`*^-15}}}]}}]], {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72330, 
                    FEPrivate`Not[DynamicChart`click$72330]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72330, {{{1., 0}, {0, 1.}}, {
                    1.1199999999999986`, -1.939896904477144}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$72330}]]}}}}}, {}}, {{}}}}, {{{{
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72322, 
                    FEPrivate`Not[DynamicChart`click$72322]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72322, {{{1., 0}, {0, 1.}}, {
                    2.500000000000001, 4.330127018922194}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$72322}]], 
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72326, 
                    FEPrivate`Not[DynamicChart`click$72326]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72326, {{{1., 0}, {0, 1.}}, {-0.4625, 
                    5.663991446056509*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$72326}]], 
                    GeometricTransformation[
                    
                    EventHandler[{{}, {}}, {
                    "MouseClicked" :> FEPrivate`Set[DynamicChart`click$72330, 
                    FEPrivate`Not[DynamicChart`click$72330]]}, PassEventsDown -> 
                    True], 
                    Dynamic[
                    If[
                    DynamicChart`click$72330, {{{1., 0}, {0, 1.}}, {
                    1.1199999999999986`, -1.939896904477144}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$72330}]]}, {}}}, {}}, {}, {}}, {{{{
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {100., 0.}}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {-50., 86.60254037844386}}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Line[{{0., 0.}, {-50., -86.60254037844386}}]}}, {{
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 0, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 25, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 50, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 75, {0., 6.283185307179586}]}, {
                    Directive[
                    GrayLevel[0.6], 
                    Dashing[{Small, Small}]], 
                    Circle[{0, 0}, 100, {0., 6.283185307179586}]}}}}, {{{{{
                    Style[
                    Rotate[
                    Line[{
                    Scaled[{0., 0.}, {-49.99999999999998, 86.60254037844388}], 
                    
                    Scaled[{-0.0029999999999999988`, 
                    0.005196152422706633}, {-49.99999999999998, 
                    86.60254037844388}]}], (-90) Degree], {}]}, {
                    Style[
                    Rotate[
                    Line[{
                    
                    Scaled[{0., 
                    0.}, {-50.00000000000004, -86.60254037844383}], 
                    
                    Scaled[{-0.0030000000000000027`, -0.00519615242270663}, \
{-50.00000000000004, -86.60254037844383}]}], (-90) Degree], {}]}, {
                    Style[
                    Rotate[
                    Line[{
                    Scaled[{0., 0.}, {100., -2.4492935982947064`*^-14}], 
                    
                    Scaled[{0.006, -1.4695761589768239`*^-18}, {
                    100., -2.4492935982947064`*^-14}]}], (-90) Degree], {}]}}, 
                   Style[
                    Rotate[
                    Line[{}], (-90) Degree], {}], {
                    Text[
                    Style[
                    Rotate[
                    Style["Calcium", 16], (-90) Degree], {}], 
                    
                    Offset[{-3.9999999999999982`, 
                    6.92820323027551}, {-49.99999999999998, 
                    86.60254037844388}], {
                    0.4999999999999998, -0.8660254037844387}, Background -> 
                    Automatic], 
                    Text[
                    Style[
                    Rotate[
                    Style["Sodium", 16], (-90) Degree], {}], 
                    
                    Offset[{-4.0000000000000036`, -6.928203230275507}, \
{-50.00000000000004, -86.60254037844383}], {0.5000000000000004, 
                    0.8660254037844384}, Background -> Automatic], 
                    Text[
                    Style[
                    Rotate[
                    Style["Total Calories", 16], (-90) Degree], {}], 
                    
                    Offset[{8., -1.959434878635765*^-15}, {
                    100., -2.4492935982947064`*^-14}], {-1., 
                    2.4492935982947064`*^-16}, Background -> Automatic]}, {
                    Circle[{0, 0}, 100., {0., 6.283185307179586}]}}}, {{
                   Directive[
                    GrayLevel[0.6], Antialiasing -> False]}, {}, 
                  Style[
                   Rotate[
                    Line[{}], (-90) Degree], {}], {}}}}, {
               DisplayFunction -> Identity, ContentSelectable -> False, 
                GridLinesStyle -> Dashing[{Small, Small}], 
                PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> 
                Scaled[0.05]}], 90 Degree]], "ExpectedMessages" -> {}, 
           "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
           Quantity[0.0529947`5.8747474358129725, "Seconds"], "CPUTimeUsed" -> 
           Quantity[0.046999999999997044`, "Seconds"], "MemoryUsed" -> 
           Quantity[45872, "Bytes"]]]], 
      "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
       14, 15, 16, 17, 18, 19, 20, 21, 22}, "TestsFailedIndices" -> {}, 
      "TestsFailedWrongResultsIndices" -> {}, 
      "TestsFailedWithMessagesIndices" -> {}, 
      "TestsFailedWithErrorsIndices" -> {}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.733157061476559*^9},ExpressionUUID->"430f711c-9180-45be-abe2-\
41645b4a5af8"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Redeploy App to cloud", "Section",
 CellChangeTimes->{{3.718381006829441*^9, 3.7183810126795535`*^9}, {
   3.743165779562156*^9, 3.7431657838241563`*^9}, {3.743165911155156*^9, 
   3.743165916062156*^9}, 
   3.7431663001141562`*^9},ExpressionUUID->"10a0e92c-f725-46f4-8664-\
c5c8ba638922"],

Cell[CellGroupData[{

Cell["Re-deploy and overwrite all data (typically not needed)", "Subsection",
 CellChangeTimes->{{3.7285893135726194`*^9, 3.7285893252098446`*^9}, {
   3.728678455353775*^9, 3.7286784607288356`*^9}, 3.730569062665042*^9, {
   3.7431659935711565`*^9, 
   3.7431659991511564`*^9}},ExpressionUUID->"60aebd19-5e55-454a-9043-\
88225d04b442"],

Cell[CellGroupData[{

Cell["Create a databin", "Subsubsection",
 CellChangeTimes->{{3.731327267699767*^9, 
  3.7313272712007957`*^9}},ExpressionUUID->"5c5d466a-41c6-4fd1-98a9-\
7f7d5e8bb0fc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Databin", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DataDropClient`$JavaCompatibleQ", "=", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"bin", "=", 
  RowBox[{"CreateDatabin", "[", 
   RowBox[{
   "\"\<Name\>\"", " ", "\[Rule]", " ", "\"\<Meal Tracker 2/23/2018 #3\>\""}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.731327278864854*^9, 3.731327308543858*^9}, {
  3.7313273426502905`*^9, 
  3.7313273461089134`*^9}},ExpressionUUID->"9e6b7e9c-a835-4610-9bd0-\
101859d565eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Databin",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, 
               FaceForm[
                RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Meal Tracker 2/23/2018 #3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD6a554545de0-cb93-4676-a526-818b828abf49"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.05555555555555555], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}}}, {{{15.646999999999998`, 5.933000000000001}, {
                  13.585, 7.263}, {15.533, 8.458}, {17.332, 
                  7.363999999999999}, {15.646999999999998`, 
                  5.933000000000001}}, {{12.697, 3.425}, {10.245, 5.212}, {
                  12.491, 6.591}, {14.725999999999999`, 
                  5.1499999999999995`}, {12.697, 3.425}}, {{8.666, 0.}, {
                  5.978000000000001, 2.285}, {8.666, 4.244}, {
                  11.354000000000001`, 2.285}, {8.666, 0.}}, {{4.635, 
                  3.425}, {2.606, 5.1499999999999995`}, {4.841, 6.591}, {
                  7.087, 5.212}, {4.635, 3.425}}, {{0., 7.363999999999999}, {
                  1.799, 8.458}, {3.7470000000000003`, 7.263}, {
                  1.6840000000000002`, 5.933000000000001}, {0., 
                  7.363999999999999}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQrbtp7vvlbqIOP+uy9pQIqzr8Wfnxkm+SjIPIOveH
VVNUHNgbpzp3v1Fw2Pb575WKk0YOpnG7PHmYFB1eB+6Qa+U2djDvdEx4OkHR
AWTMMSA/PQ0Ilik61NgDVQLVF9hyXV9coOKwp2SyBMs0FYcFUvp3Vdg04PbJ
twJNikPwV4Gsn6DhAFQdxrdWxWHWTCCI1HAAOSMnXcXB42GVyLrjig5nz4CA
hEMWyOAWRQd+kEfUJaDmKzpoxvQf+qoh4RDQOz1P6LCCA5N2u9jNcxIOlltO
lO2bLwI3TxJoja6RCNw+kO7GqSJw96CHDwDEr32g
                  "]}]}, 
               FaceForm[
                RGBColor[0.44721600000000006`, 0.519288, 0.528528, 1.]], 
               StripOnInput -> False]}, {
             Background -> GrayLevel[0.93], Axes -> False, AspectRatio -> 1, 
              ImageSize -> {Automatic, 
                Dynamic[
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])]}, Frame -> True, FrameTicks -> None, 
              PlotRangePadding -> 2.5, FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.55]], ImageSize -> {18., 19.}, 
              PlotRange -> {{0., 18.}, {0., 19.}}, AspectRatio -> Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Meal Tracker 2/23/2018 #3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entry count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD6a554545de0-cb93-4676-a526-818b828abf49"}], Except[
                    Blank[Association]] -> {}, {0}], "EntryCount", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ttOfD1G4\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DD6a554545de0-cb93-4676-a526-818b828abf49\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/ttOfD1G4\"", 
                    "https://wolfr.am/ttOfD1G4"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Short ID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ttOfD1G4\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"DD6a554545de0-cb93-4676-a526-818b828abf49\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ShortURL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://wolfr.am/ttOfD1G4\"", 
                    "https://wolfr.am/ttOfD1G4"}, "HyperlinkURL"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"andrews@wolfram.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Owner: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"andrews@wolfram.com\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Creation date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Thu 29 Mar 2018 10:49:13\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest date: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Replace[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD6a554545de0-cb93-4676-a526-818b828abf49"}], Except[
                    Blank[Association]] -> {}, {0}], "Timestamp", 
                    Missing[]], Pattern[DataDropClient`Private`date, 
                    Blank[DateObject]] :> 
                    DateString[DataDropClient`Private`date], {0}], 
                    StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Size: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    (If[
                    NumberQ[#], 
                    Round[#, 0.1], #]& )[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinStats", 
                    "DD6a554545de0-cb93-4676-a526-818b828abf49"}], Except[
                    Blank[Association]] -> {}, {0}], "Size", 
                    Missing[]]], StandardForm]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Latest: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Lookup[
                    Replace[
                    
                    DataDropClient`Private`datadropclientcache[{
                    "DatabinLatest", 
                    "DD6a554545de0-cb93-4676-a526-818b828abf49"}], Except[
                    Blank[Association]] -> {}, {0}], "Data", 
                    Missing[]], StandardForm]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Databin["ttOfD1G4"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7313273139010944`*^9, 
  3.731327353675765*^9},ExpressionUUID->"e7489cab-22f7-4c07-b22e-\
316c3e52154b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.731327315525505*^9, 
  3.7313273408316774`*^9}},ExpressionUUID->"f608bf60-16d7-44fd-acf8-\
98d31a5e6b9b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Redeploy", "Subsubsection",
 CellChangeTimes->{{3.731327262722532*^9, 
  3.7313272642457423`*^9}},ExpressionUUID->"0a42ea05-fe86-408f-8299-\
f5dbe3dbf987"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Copying entity stores to disk...\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"DirectoryQ", "[", "\"\<MyFood_History\>\"", "]"}]}], ",", 
    RowBox[{"CreateDirectory", "[", "\"\<MyFood_History\>\"", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"Not", "@", 
     RowBox[{"DirectoryQ", "[", "\"\<MyMeal_History\>\"", "]"}]}], ",", 
    RowBox[{"CreateDirectory", "[", "\"\<MyMeal_History\>\"", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CopyFile", "[", 
     RowBox[{"#", ",", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<MyFood_History\>\"", ",", 
         RowBox[{"FileNameTake", "[", 
          RowBox[{"First", "@", "#"}], "]"}]}], "}"}], "]"}]}], "]"}], "&"}], 
   "/@", 
   RowBox[{"CloudObjects", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyFood\>\""}], "}"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"CopyFile", "[", 
      RowBox[{"#", ",", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<MyMeal_History\>\"", ",", 
          RowBox[{"FileNameTake", "[", 
           RowBox[{"First", "@", "#"}], "]"}]}], "}"}], "]"}]}], "]"}], "&"}],
     "/@", 
    RowBox[{"CloudObjects", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyMeal\>\""}], "}"}], 
      "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Deploying app...\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DeployMealTrackerApp", "[", 
  RowBox[{"$MealTrackerCloudObject", ",", 
   RowBox[{"\"\<DefaultDirectory\>\"", "\[Rule]", "Automatic"}], ",", 
   RowBox[{
   "\"\<HistoryDatabin\>\"", "\[Rule]", "$MealTrackerHistoryDatabin"}], ",", 
   RowBox[{"\"\<OverwriteExistingData\>\"", "\[Rule]", "True"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7183799316908236`*^9, 3.7183799337208366`*^9}, 
   3.7183801229932585`*^9, {3.727458325224723*^9, 3.727458329798723*^9}, {
   3.728393700849786*^9, 3.7283937014368443`*^9}, {3.7284072226534777`*^9, 
   3.728407223140527*^9}, {3.728407265450757*^9, 3.7284072707482867`*^9}, {
   3.7284075765758667`*^9, 3.7284075779250016`*^9}, {3.7284129944639673`*^9, 
   3.728413011925459*^9}, {3.7284135038349524`*^9, 3.7284135108146505`*^9}, {
   3.728414086682231*^9, 3.7284141268222446`*^9}, {3.728415047728326*^9, 
   3.7284150627828317`*^9}, 3.7284160081563597`*^9, {3.728677321355454*^9, 
   3.7286773593532534`*^9}, {3.7286773932076387`*^9, 
   3.7286774001313305`*^9}, {3.7286779040397167`*^9, 
   3.7286779045587683`*^9}, {3.7286784500517173`*^9, 3.728678452751746*^9}, {
   3.7299661695593934`*^9, 3.729966186657103*^9}, {3.730478501001623*^9, 
   3.7304785017717*^9}, {3.7305465238090177`*^9, 3.7305465325610175`*^9}, {
   3.7305466059612017`*^9, 3.730546609331539*^9}, {3.730565130281171*^9, 
   3.7305651346949186`*^9}, {3.7305677000998297`*^9, 3.730567812551074*^9}, {
   3.7305678426240807`*^9, 3.7305681099968157`*^9}, {3.7307384343822913`*^9, 
   3.7307384681618075`*^9}, 3.7313273632253923`*^9, {3.7313273950412545`*^9, 
   3.7313273953220563`*^9}, {3.743165827940156*^9, 
   3.7431658843541565`*^9}},ExpressionUUID->"8fe6237e-909e-4125-b100-\
063af917a367"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Copying entity stores to disk...\"\>"], "Print",
 CellChangeTimes->{3.7305681121730328`*^9, 3.7307384464765005`*^9, 
  3.731327391057827*^9, 
  3.7313280204124274`*^9},ExpressionUUID->"62211682-641f-4cc3-945f-\
452b2dd25fa9"],

Cell[BoxData["\<\"Deploying app...\"\>"], "Print",
 CellChangeTimes->{3.7305681121730328`*^9, 3.7307384464765005`*^9, 
  3.731327391057827*^9, 
  3.7313280212724333`*^9},ExpressionUUID->"da26fdec-6eb6-4d9e-8502-\
ba8b850b8922"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Home\"","https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Home"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/Home"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MealEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MealEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MealEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
NutritionEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
NutritionEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
NutritionEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewFood\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewFood"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewFood"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewMeal\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewMeal"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewMeal"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseMeal\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseMeal"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseMeal"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseFood\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseFood"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseFood"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewHistory\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewHistory"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewHistory"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveLogEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveLogEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveLogEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodSearch\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodSearch"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodSearch"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodLookup\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodLookup"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodLookup"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveEntity\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveEntity"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveEntity"],
    SelectWithContents->True]}], "}"}]], "Output",
 CellChangeTimes->{{3.7286773138066993`*^9, 3.7286773599743156`*^9}, {
   3.7286774007263904`*^9, 3.728677441348452*^9}, {3.728677498460163*^9, 
   3.728677596073923*^9}, {3.728677636361952*^9, 3.728677649125228*^9}, {
   3.7286777605143657`*^9, 3.728677767791093*^9}, 3.728677890745387*^9, 
   3.7286784280314894`*^9, {3.7299661916105986`*^9, 3.7299662210905457`*^9}, {
   3.729966320186455*^9, 3.729966344218858*^9}, {3.729966406636099*^9, 
   3.729966434607896*^9}, 3.7300355767941647`*^9, 3.730035725810065*^9, 
   3.7300362404374027`*^9, 3.730037982603459*^9, 3.730038039650459*^9, 
   3.7300383147591305`*^9, 3.7300385050261297`*^9, 3.7300389408616276`*^9, 
   3.730134951423142*^9, 3.7301362406580524`*^9, 3.730136336695656*^9, 
   3.730136883116292*^9, 3.7304633249678936`*^9, 3.730463501163046*^9, 
   3.730463614268046*^9, 3.730463800993496*^9, 3.7304639123356295`*^9, 
   3.730465425502839*^9, 3.7304657431877103`*^9, 3.730471772299289*^9, 
   3.7304718405742893`*^9, 3.7304735554930983`*^9, 3.730473649732521*^9, 
   3.7304738195014963`*^9, 3.730474005912135*^9, 3.7304741273512783`*^9, 
   3.7304743998725276`*^9, 3.730474433608901*^9, 3.7304744776873083`*^9, 
   3.730474512887828*^9, 3.7304745506826067`*^9, 3.7304756792664633`*^9, 
   3.730475777428279*^9, 3.730475833235859*^9, 3.730475911422677*^9, 
   3.730475979910525*^9, 3.7304777708956194`*^9, 3.7304784917486973`*^9, 
   3.7304805821677423`*^9, 3.730480659884513*^9, 3.730480951572679*^9, 
   3.730482313745883*^9, 3.7304823766491723`*^9, 3.7304830204539394`*^9, 
   3.730485369663472*^9, 3.7305465440600176`*^9, 3.730565141099662*^9, 
   3.730565252521453*^9, 3.730565766573371*^9, 3.7305658634239836`*^9, 
   3.730565920557453*^9, 3.7305660061304483`*^9, 3.7305660457922487`*^9, 
   3.7305661546754484`*^9, 3.7305661976552486`*^9, 3.730566310081503*^9, 
   3.730566344678919*^9, 3.730566406490085*^9, 3.7305665735828586`*^9, 
   3.730567382167127*^9, 3.730567820023821*^9, 3.7305678585516734`*^9, {
   3.7305679536111784`*^9, 3.730567970495867*^9}, 3.7305680168234987`*^9, 
   3.730568064622278*^9, 3.7305681177365894`*^9, 3.7307384561934724`*^9, 
   3.7313274142139964`*^9, 
   3.731328029411291*^9},ExpressionUUID->"50f0c3ce-1971-4d19-8c9e-\
d9d7de48c37a"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Copy old EntityStore WXF\[CloseCurlyQuote]s to the Cloud (typically not \
needed)\
\>", "Subsection",
 CellChangeTimes->{{3.7307385434607687`*^9, 3.730738551962867*^9}, {
  3.743166061792156*^9, 
  3.7431660905481563`*^9}},ExpressionUUID->"02392700-844b-484a-94c8-\
fe0339beb3d8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CopyFile", "[", 
  RowBox[{"\"\<MyFood_History\\\\2018-03-20_16-22-06.WXF\>\"", ",", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$MealTrackerCloudObject", ",", "\"\<MyFood\>\"", ",", 
      "\"\<2018-03-20_16-22-06.WXF\>\""}], "}"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7307385568195276`*^9, 3.7307385949775696`*^9}, 
   3.743166038476156*^9, {3.743166083808156*^9, 
   3.743166128157156*^9}},ExpressionUUID->"2ded45e5-14c2-499e-a559-\
258ceccd21c3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MyFood/2018-03-20_16-22-06.WXF\"",
     "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MyFood/2018-03-20_16-22-06.WXF"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/MyFood/\
2018-03-20_16-22-06.WXF"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{
  3.7307385987122126`*^9},ExpressionUUID->"231b24a4-c1c8-45b6-929a-\
a87b6180fd1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CopyFile", "[", 
  RowBox[{"\"\<MyMeal_History\\\\2018-03-20_16-11-39.WXF\>\"", ",", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$MealTrackerCloudObject", ",", "\"\<MyMeal\>\"", ",", 
      "\"\<2018-03-20_16-11-39.WXF\>\""}], "}"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7307386173210154`*^9, 3.730738626479515*^9}, {
   3.730738795904828*^9, 3.7307388038447247`*^9}, 3.7431660529131565`*^9, {
   3.743166138296156*^9, 
   3.7431661508171563`*^9}},ExpressionUUID->"6d3396e6-fda0-4501-a4f9-\
bc25abcaa26e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MyMeal/2018-03-20_16-11-39.WXF\"",
     "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MyMeal/2018-03-20_16-11-39.WXF"},
    "HyperlinkURL"], "]"}],
  CloudObject[
  "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/MyMeal/\
2018-03-20_16-11-39.WXF"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{3.730738627555126*^9, 
  3.730738806205756*^9},ExpressionUUID->"27b0fb2f-c003-48ff-b37b-\
fbe114332cb1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Re-deploy without changing EntityStore data (most common operation)\
\>", "Subsection",
 CellChangeTimes->{{3.7285892998017526`*^9, 3.7285893097133446`*^9}, {
  3.731244437571638*^9, 3.731244439373638*^9}, {3.7431661585541563`*^9, 
  3.7431661718961563`*^9}},ExpressionUUID->"c2989209-e7d3-4755-925b-\
ab2d09f9990b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CloudConnect", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<MealTrackerApp.wl\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DeployMealTrackerApp", "[", 
   RowBox[{"$MealTrackerCloudObject", ",", 
    RowBox[{"\"\<DefaultDirectory\>\"", "\[Rule]", "Automatic"}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Handy", " ", "trick", " ", "to", " ", "open", " ", "a", " ", "page", " ", 
    "immediately", " ", "after", " ", "deployment"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"%", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}], "//", "SystemOpen"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.728413850972663*^9, 3.7284138526208277`*^9}, {
   3.728414104081971*^9, 3.7284141056061234`*^9}, {3.7284141382413864`*^9, 
   3.7284141408236446`*^9}, {3.728654828513455*^9, 3.728654836744632*^9}, {
   3.728658812815301*^9, 3.7286588137255735`*^9}, {3.728659633016713*^9, 
   3.728659667559167*^9}, {3.728660528039206*^9, 3.728660553072709*^9}, {
   3.728662420857478*^9, 3.728662487519144*^9}, {3.7286630956340246`*^9, 
   3.7286630977768106`*^9}, {3.7286647757869663`*^9, 3.728664784091797*^9}, {
   3.7286679812420444`*^9, 3.728667982757254*^9}, {3.728678470644941*^9, 
   3.7286784757074156`*^9}, {3.7287634127012897`*^9, 3.728763416438738*^9}, {
   3.728836456528577*^9, 3.7288364575936837`*^9}, {3.7289227611608963`*^9, 
   3.728922765458296*^9}, {3.7292650881463637`*^9, 3.729265093575364*^9}, {
   3.7295311623478136`*^9, 3.729531170155013*^9}, {3.7295386769754314`*^9, 
   3.729538677661827*^9}, {3.7299675519746213`*^9, 3.7299675523846617`*^9}, 
   3.729968533946185*^9, {3.730035042245715*^9, 3.7300350430817986`*^9}, {
   3.7300402867502174`*^9, 3.730040287505293*^9}, {3.7301180759213333`*^9, 
   3.730118076467388*^9}, 3.7304878366044316`*^9, 3.730572144101367*^9, {
   3.7305777275013885`*^9, 3.7305777420766163`*^9}, {3.7306410433787265`*^9, 
   3.7306410472213516`*^9}, {3.730653397780654*^9, 3.7306534147436543`*^9}, {
   3.7306548378176537`*^9, 3.730654839908654*^9}, {3.7306594745085716`*^9, 
   3.730659475456666*^9}, {3.7307296229874673`*^9, 3.7307296273134675`*^9}, {
   3.7307336257477818`*^9, 3.7307336258517923`*^9}, 3.730812248203272*^9, {
   3.730813855977787*^9, 3.730813856848874*^9}, {3.7308199304146576`*^9, 
   3.730819932964658*^9}, {3.7308244724419155`*^9, 3.7308244731668434`*^9}, 
   3.730827467731247*^9, {3.7310758518087645`*^9, 3.731075852168764*^9}, {
   3.7310785832584085`*^9, 3.7310785854201927`*^9}, {3.731078666057128*^9, 
   3.7310786670680265`*^9}, {3.731080157066018*^9, 3.731080159475259*^9}, {
   3.7310804910294113`*^9, 3.7310804922915373`*^9}, {3.731088961755765*^9, 
   3.731088965435765*^9}, {3.7311747245166283`*^9, 3.7311747323750486`*^9}, {
   3.731261555433257*^9, 3.731261580329257*^9}, {3.731678866350772*^9, 
   3.7316788666458015`*^9}, {3.731682775385003*^9, 3.7316827756740026`*^9}, {
   3.7317653295648065`*^9, 3.7317653318200245`*^9}, {3.731778775445326*^9, 
   3.7317787793241515`*^9}, {3.7318508279259787`*^9, 3.73185082814*^9}, {
   3.73185160791523*^9, 3.7318516107512302`*^9}, {3.73185165157023*^9, 
   3.73185165241523*^9}, {3.7319536869923005`*^9, 3.731953688060301*^9}, {
   3.731954875896242*^9, 3.7319548765703773`*^9}, {3.7319550373155203`*^9, 
   3.7319550383807325`*^9}, {3.7319567108541107`*^9, 
   3.7319567115721827`*^9}, {3.732451455375698*^9, 3.7324514557567363`*^9}, {
   3.732468576187095*^9, 3.7324685764381204`*^9}, {3.7325446419390993`*^9, 
   3.7325446428604994`*^9}, {3.7325552821690173`*^9, 3.732555283324817*^9}, {
   3.7325577841277475`*^9, 3.73255778530396*^9}, {3.7326364478825216`*^9, 
   3.7326364490626397`*^9}, {3.739901214964987*^9, 3.7399012200757866`*^9}, {
   3.743165922001156*^9, 
   3.743165972294156*^9}},ExpressionUUID->"5ba32d99-31b0-4272-b151-\
e49cd9eca40d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Home\"","https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Home"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/Home"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MealEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MealEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
MealEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
NutritionEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
NutritionEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
NutritionEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewFood\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewFood"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewFood"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewMeal\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewMeal"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewMeal"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseMeal\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseMeal"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseMeal"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseFood\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseFood"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ChooseFood"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewHistory\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewHistory"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ViewHistory"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveLogEntry\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveLogEntry"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveLogEntry"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodSearch\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodSearch"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodSearch"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodLookup\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodLookup"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
FoodLookup"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveEntity\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveEntity"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
RemoveEntity"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeMultiplication\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeMultiplication"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ServingSizeMultiplication"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Settings\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Settings"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Settings"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Reminders\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Reminders"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Reminders"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ScanBarcode\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ScanBarcode"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
ScanBarcode"],
    SelectWithContents->True], ",", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
     TemplateBox[{
      "\"https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Suggestion\"",
       "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Suggestion"},
      "HyperlinkURL"], "]"}],
    CloudObject[
    "https://www.wolframcloud.com/objects/andrews/MealTracker_2-23-2018/\
Suggestion"],
    SelectWithContents->True]}], "}"}]], "Output",
 CellChangeTimes->{
  3.730654921194654*^9, {3.730654996297654*^9, 3.7306550394546537`*^9}, {
   3.730655162688654*^9, 3.730655173657654*^9}, 3.730655231570654*^9, 
   3.730655277949654*^9, 3.730655472127654*^9, 3.730655624603654*^9, 
   3.730655654911654*^9, 3.730655702240654*^9, 3.730655732576654*^9, 
   3.7306558930839715`*^9, 3.730656237268121*^9, 3.730656307333131*^9, 
   3.7306586118113103`*^9, 3.7306586875228806`*^9, 3.730658747962924*^9, 
   3.73065880542667*^9, 3.73065887883401*^9, 3.7306589952966547`*^9, 
   3.7306590968708115`*^9, 3.7306592076328864`*^9, {3.7306594520293236`*^9, 
   3.7306594798171024`*^9}, 3.7306595165737777`*^9, 3.730659848242941*^9, 
   3.73065992453957*^9, {3.730660014144902*^9, 3.730660059836333*^9}, 
   3.730661322072333*^9, 3.7306613567447996`*^9, 3.7306613962357483`*^9, 
   3.730661537705894*^9, {3.730662372056321*^9, 3.7306624056236773`*^9}, 
   3.730662703940506*^9, 3.730662955426652*^9, 3.730663122618369*^9, 
   3.730663226616768*^9, 3.7306632825023565`*^9, {3.730663413431448*^9, 
   3.7306634404281473`*^9}, {3.7306641000147033`*^9, 3.730664119215783*^9}, 
   3.730664183053398*^9, 3.73066421733397*^9, 3.730718782468721*^9, 
   3.730719645586522*^9, 3.7307199499373555`*^9, 3.730720070341936*^9, 
   3.730721438433541*^9, 3.730721635647873*^9, 3.730721772486944*^9, 
   3.7307218514094048`*^9, 3.730721939168968*^9, 3.730722028872653*^9, 
   3.730722116159281*^9, 3.7307222661949577`*^9, 3.730722402197994*^9, 
   3.730722659947822*^9, 3.730724121966838*^9, 3.7307244666306124`*^9, 
   3.7307245053267756`*^9, 3.7307245496135254`*^9, 3.730724588362878*^9, 
   3.7307268313985767`*^9, {3.7307296197214675`*^9, 3.7307296325964675`*^9}, 
   3.7307308909195194`*^9, 3.7307310974005194`*^9, 3.7307313072449226`*^9, 
   3.730731978387769*^9, 3.73073213818997*^9, 3.730732178081272*^9, 
   3.7307324772231894`*^9, 3.7307325386355896`*^9, 3.7307326335145893`*^9, 
   3.7307326818495893`*^9, 3.7307328387515893`*^9, 3.7307329190055895`*^9, 
   3.730733069573389*^9, 3.7307333451116996`*^9, 3.730733383875387*^9, 
   3.7307334160103006`*^9, 3.730733514271942*^9, {3.7307336131025176`*^9, 
   3.7307336326564727`*^9}, 3.7307336824302087`*^9, 3.7307338173895574`*^9, 
   3.730734403049425*^9, 3.7307348585834255`*^9, {3.730735519959493*^9, 
   3.730735548844203*^9}, 3.730735742995891*^9, 3.730735819080303*^9, 
   3.730736330175851*^9, 3.7307382750365615`*^9, {3.7307397363768387`*^9, 
   3.7307397655684767`*^9}, 3.730742442855668*^9, 3.730742604644663*^9, 
   3.730742661530986*^9, 3.7307427168964195`*^9, 3.7307427727414417`*^9, 
   3.730742843642436*^9, 3.7307429355245066`*^9, 3.730743015990144*^9, 
   3.7307430505594177`*^9, 3.7307431155050573`*^9, 3.730743148143416*^9, 
   3.7307433030927634`*^9, 3.730743526478697*^9, 3.7307441223899813`*^9, 
   3.730744181688984*^9, 3.7307442131869946`*^9, 3.7307442676144733`*^9, 
   3.7307443470269756`*^9, 3.730744628423689*^9, 3.730744682329094*^9, 
   3.730807107062647*^9, 3.730807206660647*^9, 3.730807810292647*^9, {
   3.730812244427272*^9, 3.7308122526542716`*^9}, 3.7308124595342717`*^9, 
   3.7308125054992714`*^9, 3.730812544472272*^9, 3.7308125798502717`*^9, 
   3.730812616986272*^9, 3.7308127754632716`*^9, 3.7308128290962715`*^9, 
   3.730812921552272*^9, 3.73081302762796*^9, {3.730813483120505*^9, 
   3.7308135056497574`*^9}, 3.730813861830372*^9, 3.730813909443133*^9, 
   3.7308139412133093`*^9, 3.7308145032195044`*^9, 3.7308146891710978`*^9, 
   3.7308147206782484`*^9, 3.7308148477219515`*^9, 3.730814916963875*^9, 
   3.7308150052867064`*^9, 3.730815090761253*^9, 3.730815175514723*^9, 
   3.730815434095723*^9, 3.730815464152723*^9, 3.730815656467723*^9, {
   3.730815841810723*^9, 3.7308158711107225`*^9}, 3.730816255771756*^9, 
   3.730816659975173*^9, 3.730816788519026*^9, 3.730816917254898*^9, 
   3.730818183720532*^9, {3.7308184507360764`*^9, 3.7308184741027393`*^9}, 
   3.7308186493896575`*^9, 3.7308193708926573`*^9, 3.730819502266658*^9, 
   3.7308195600016575`*^9, 3.7308196314706573`*^9, 3.7308197035046577`*^9, 
   3.730819773384658*^9, 3.7308199338816576`*^9, 3.7308200385626574`*^9, 
   3.7308201711586576`*^9, 3.7308206288462377`*^9, 3.7308207458379354`*^9, 
   3.730822177733111*^9, 3.7308222227386107`*^9, 3.730822318097044*^9, 
   3.730822400643044*^9, 3.730823172124044*^9, 3.730823710652402*^9, {
   3.730824465327627*^9, 3.7308244785963*^9}, 3.7308245872474337`*^9, 
   3.7308246900692472`*^9, 3.730824731709247*^9, {3.730824896613247*^9, 
   3.730824917978247*^9}, 3.730825077368247*^9, 3.7308251275342474`*^9, 
   3.730825449816247*^9, 3.7308256893882475`*^9, 3.7308257296412473`*^9, 
   3.7308257665412474`*^9, 3.7308258851522474`*^9, 3.730825921103247*^9, 
   3.7308261008292475`*^9, 3.730826333214247*^9, 3.730826695125247*^9, 
   3.730826742630247*^9, 3.7308268238152475`*^9, 3.7308268586902475`*^9, 
   3.730826915681247*^9, 3.7308273268382473`*^9, 3.7308273786592474`*^9, 
   3.730827431768247*^9, 3.7308274699872475`*^9, 3.730827526247247*^9, 
   3.730827618245247*^9, 3.7308278422442474`*^9, {3.7308278904242473`*^9, 
   3.7308279129732475`*^9}, 3.730827982333247*^9, {3.730828045287247*^9, 
   3.730828069834247*^9}, 3.7308282081932473`*^9, {3.730828368228247*^9, 
   3.730828423813247*^9}, 3.7308285221434565`*^9, 3.7308285830529804`*^9, 
   3.730828646279894*^9, 3.7308286907325497`*^9, 3.7308287405043945`*^9, 
   3.730828822724474*^9, 3.7308289987262588`*^9, 3.7308290562763276`*^9, 
   3.7308299241921105`*^9, 3.7308299832170124`*^9, 3.7308300484815383`*^9, 
   3.7308300956932592`*^9, 3.7308303555312405`*^9, 3.730830425483235*^9, 
   3.7308308921839*^9, 3.7308319187174273`*^9, 3.730831978469402*^9, 
   3.7308323819357443`*^9, 3.730832424241975*^9, {3.73107049023721*^9, 
   3.73107051758121*^9}, 3.7310709537382097`*^9, 3.73107099289921*^9, 
   3.731071101390952*^9, 3.7310717451663237`*^9, 3.731071936875205*^9, 
   3.7310720704513645`*^9, 3.7310722326865864`*^9, 3.7310743410547647`*^9, 
   3.7310744494737644`*^9, 3.7310746254757643`*^9, {3.7310758330137644`*^9, 
   3.7310758569437647`*^9}, 3.7310761047897644`*^9, 3.7310762237837644`*^9, 
   3.7310762594347644`*^9, 3.7310766401356916`*^9, 3.7310768641937304`*^9, 
   3.7310769911284323`*^9, 3.731077025314851*^9, 3.731077093093628*^9, 
   3.731077127792097*^9, 3.731077675252838*^9, 3.731078393216627*^9, 
   3.731078501475588*^9, {3.7310785723325014`*^9, 3.7310785905306816`*^9}, 
   3.731078672295504*^9, 3.7310788760375223`*^9, {3.7310789186035223`*^9, 
   3.731078929466522*^9}, 3.7310789772345223`*^9, 3.7310798080431194`*^9, {
   3.731080151797491*^9, 3.7310801643897505`*^9}, 3.7310805012964373`*^9, {
   3.7310809510294065`*^9, 3.7310809773900423`*^9}, 3.731081315631863*^9, 
   3.7310820970719995`*^9, 3.731082590490634*^9, 3.7310826555006294`*^9, 
   3.731082685623604*^9, 3.7310827939549327`*^9, 3.731084148137107*^9, 
   3.7310846963013268`*^9, 3.7310883583719306`*^9, 3.731088491558248*^9, 
   3.731088578378929*^9, {3.73108869375506*^9, 3.731088707815654*^9}, 
   3.731088849189515*^9, 3.731088913472086*^9, {3.7310889475396795`*^9, 
   3.7310889708447647`*^9}, 3.731089010925765*^9, 3.7310890576347647`*^9, {
   3.731089128908765*^9, 3.7310891560827646`*^9}, 3.731089202440765*^9, 
   3.7310892464837646`*^9, 3.731089553113765*^9, 3.731089586930765*^9, 
   3.7310896706347647`*^9, 3.731089903124414*^9, 3.731174451069337*^9, 
   3.731174726779044*^9, 3.7311747794507847`*^9, 3.7311750519052773`*^9, 
   3.7311756289267616`*^9, {3.7311757648272047`*^9, 3.7311757888589797`*^9}, 
   3.7311758485686436`*^9, 3.7311759227464695`*^9, 3.7311759842890096`*^9, 
   3.7311760921305957`*^9, 3.731176185311015*^9, 3.731176260365914*^9, 
   3.731176317113617*^9, 3.7311763573193307`*^9, 3.7311780446300545`*^9, 
   3.731178212399691*^9, 3.7311783247218275`*^9, 3.7311784796860743`*^9, 
   3.7311785118274193`*^9, 3.731178714862414*^9, 3.731178748715872*^9, 
   3.7311787910546093`*^9, 3.7311788723748426`*^9, 3.7311789133486032`*^9, 
   3.7311789833608084`*^9, 3.7311798850070667`*^9, 3.7312407371092057`*^9, 
   3.73124228137477*^9, 3.73124237420477*^9, 3.73124241569277*^9, 
   3.7312430042709885`*^9, 3.731243555159072*^9, 3.731243705671121*^9, 
   3.7312444378846383`*^9, 3.7312445424246387`*^9, 3.7312446443036385`*^9, 
   3.731245445085059*^9, 3.7312469700218034`*^9, 3.7312472535655007`*^9, 
   3.731247342388846*^9, 3.731250167128021*^9, 3.731250901163417*^9, 
   3.7312560641776476`*^9, 3.731256175122741*^9, 3.7312562814693747`*^9, 
   3.731256534092634*^9, 3.731259012465257*^9, 3.7312599219242573`*^9, 
   3.731259996147257*^9, 3.7312600318912573`*^9, 3.731260122372257*^9, 
   3.731260645143257*^9, 3.7312608891392574`*^9, {3.7312615496772575`*^9, 
   3.7312616153702574`*^9}, 3.731261726475257*^9, 3.7312618276872573`*^9, 
   3.731261859942257*^9, 3.731262055380257*^9, 3.7312623047122574`*^9, 
   3.7312624382402573`*^9, 3.731262602941663*^9, 3.7312626790907183`*^9, 
   3.7312627713538265`*^9, 3.731262813515508*^9, 3.731264049490959*^9, 
   3.73126413931394*^9, 3.731264170444053*^9, 3.7313274359427605`*^9, 
   3.7313280533796654`*^9, 3.7313307432015133`*^9, 3.7313319636034575`*^9, 
   3.7313321334626102`*^9, 3.7313355195150223`*^9, 3.731335764419978*^9, 
   3.7313386732684407`*^9, 3.7313391858842087`*^9, 3.7313444618937025`*^9, {
   3.7313445255100174`*^9, 3.7313445464968987`*^9}, 3.731344605886299*^9, {
   3.731344636167699*^9, 3.731344661509099*^9}, 3.7313447008020988`*^9, 
   3.731344738203099*^9, {3.731344777142499*^9, 3.731344805196099*^9}, 
   3.7313448734258986`*^9, 3.731344945460899*^9, {3.7313450884194984`*^9, 
   3.731345118404299*^9}, 3.731347046499079*^9, 3.731347137326358*^9, 
   3.73134726562615*^9, 3.7314150993150406`*^9, 3.7314151712820406`*^9, 
   3.7314154532107677`*^9, 3.731415749460522*^9, 3.7314158025028257`*^9, 
   3.7314158473963146`*^9, 3.7314159302015944`*^9, 3.731416033595933*^9, 
   3.731416370277519*^9, 3.7314164266208844`*^9, 3.7314164707984657`*^9, 
   3.7314166695570602`*^9, 3.7314167124510603`*^9, 3.7314167485740604`*^9, 
   3.73141679070906*^9, 3.73141728527306*^9, 3.73141731617206*^9, 
   3.73141736837006*^9, 3.731417488931332*^9, 3.7314175348485136`*^9, 
   3.7314176250725546`*^9, 3.7314183310738983`*^9, 3.7314184108178716`*^9, 
   3.7314185087670803`*^9, {3.7314185519450808`*^9, 3.7314185738620806`*^9}, 
   3.7314186301920805`*^9, 3.7314187196920805`*^9, 3.731425049713567*^9, 
   3.731425094979618*^9, 3.7314267674836025`*^9, 3.731428247027027*^9, 
   3.7316787023993783`*^9, 3.731678871971334*^9, 3.731678949923128*^9, 
   3.7316790648076153`*^9, 3.731679108644999*^9, 3.731679482421373*^9, 
   3.731680041723209*^9, 3.731680165206209*^9, 3.731680645990209*^9, 
   3.7316809044075713`*^9, 3.7316809570838385`*^9, 3.731681232764404*^9, 
   3.7316813436834946`*^9, 3.7316824304260025`*^9, {3.7316825157000027`*^9, 
   3.7316825452580028`*^9}, 3.731682578569003*^9, 3.7316826644050026`*^9, {
   3.7316827737490025`*^9, 3.731682783040003*^9}, 3.731683021307003*^9, 
   3.7316830903650026`*^9, 3.731683188967023*^9, 3.731688490809372*^9, 
   3.7316891612184067`*^9, 3.7316891975720415`*^9, 3.7316894413294144`*^9, 
   3.73168967718391*^9, 3.7316898894601355`*^9, 3.7316900496041484`*^9, 
   3.731690134007588*^9, 3.7316902256537514`*^9, 3.7316903478629713`*^9, 
   3.7316903982280073`*^9, 3.73169059077826*^9, 3.7316906525774393`*^9, 
   3.7316907441355944`*^9, 3.7316907876989503`*^9, 3.731690899538133*^9, 
   3.7316909717883577`*^9, 3.73169110962414*^9, 3.731691162999477*^9, 
   3.731691203628539*^9, 3.731691286362812*^9, 3.731691336257801*^9, 
   3.73169140485666*^9, 3.731765278757945*^9, 3.7317653394818783`*^9, 
   3.731765380572177*^9, 3.731765508454489*^9, 3.7317734773814907`*^9, 
   3.7317781900131826`*^9, 3.731778636714308*^9, 3.73177871169252*^9, 
   3.731778777025936*^9, 3.731779194800847*^9, 3.731779302650142*^9, 
   3.7317793856341624`*^9, 3.731779437626836*^9, 3.7317795439455757`*^9, 
   3.731779631215156*^9, 3.7317797022179785`*^9, 3.731781567537357*^9, 
   3.731782513255862*^9, 3.7318496095934362`*^9, 3.731850352859476*^9, 
   3.731850833524538*^9, 3.73185161628123*^9, 3.73185165754023*^9, 
   3.73185200926923*^9, 3.731853986391028*^9, 3.731854134189028*^9, 
   3.7318547780199766`*^9, {3.7318550154257145`*^9, 3.7318550692200937`*^9}, 
   3.731855305938763*^9, 3.7318553870118694`*^9, 3.7318554456187296`*^9, 
   3.7318555174049077`*^9, 3.7318556443288217`*^9, 3.731855758115822*^9, 
   3.731856363754822*^9, 3.7318564357118216`*^9, 3.7318564863508215`*^9, 
   3.7318566327418213`*^9, 3.7318567641355867`*^9, 3.7319518479853005`*^9, 
   3.7319519868713007`*^9, {3.7319520238333006`*^9, 3.7319520527073007`*^9}, 
   3.7319521129123006`*^9, 3.7319524354453006`*^9, {3.7319524947873006`*^9, 
   3.7319525203703003`*^9}, {3.731952576586301*^9, 3.7319526032993007`*^9}, 
   3.731952647560301*^9, 3.731952711362301*^9, 3.731952900152301*^9, 
   3.7319529692863007`*^9, 3.7319530306983004`*^9, 3.7319534777243004`*^9, 
   3.7319536939293003`*^9, {3.731953746824301*^9, 3.7319537655193005`*^9}, 
   3.7319538176153007`*^9, 3.731954021723301*^9, {3.731954206421301*^9, 
   3.731954231291301*^9}, 3.7319544378263006`*^9, 3.73195462074914*^9, {
   3.731954791249316*^9, 3.731954820803226*^9}, 3.7319548821494927`*^9, 
   3.7319549723305254`*^9, 3.7319550441078777`*^9, 3.731955106841856*^9, 
   3.7319551889720683`*^9, 3.731955308910061*^9, 3.731955468626031*^9, 
   3.731955921429307*^9, 3.7319560240975723`*^9, 3.731956575054532*^9, {
   3.731956711601186*^9, 3.7319567242644515`*^9}, 3.7319567779358187`*^9, 
   3.7319568135793824`*^9, 3.7319568659046144`*^9, {3.731956932080231*^9, 
   3.731956959220945*^9}, 3.7319570166516876`*^9, 3.7319570669137135`*^9, 
   3.7319571579038115`*^9, 3.731957197859806*^9, 3.732279585353133*^9, 
   3.73228069715586*^9, 3.73228082830486*^9, 3.732280984354238*^9, 
   3.732281114637265*^9, 3.7322811635831594`*^9, 3.732281320978897*^9, 
   3.7322987610667334`*^9, 3.732301921045811*^9, 3.7323020980202684`*^9, 
   3.7323021324612684`*^9, 3.7323022734342685`*^9, 3.7323034224822683`*^9, 
   3.732303594847268*^9, 3.732303726925268*^9, 3.7323038950412683`*^9, 
   3.7323051529892683`*^9, 3.7323052290232687`*^9, 3.7323055798130336`*^9, 
   3.7323059746395035`*^9, 3.7323062358159933`*^9, 3.732360375013982*^9, 
   3.7323611147059293`*^9, 3.7323614521552954`*^9, 3.7323632871261683`*^9, 
   3.7323633365131063`*^9, 3.7323641393403907`*^9, 3.7323641921476707`*^9, 
   3.732364865920905*^9, 3.7323851831529474`*^9, 3.7323853010355997`*^9, 
   3.732385400728821*^9, 3.7323855313616624`*^9, 3.7323856946308336`*^9, 
   3.7323858165367885`*^9, 3.732386038235382*^9, 3.7323862136506824`*^9, 
   3.732386355023074*^9, 3.7323872195267935`*^9, 3.7323878445004816`*^9, 
   3.7323879588941092`*^9, 3.7324508102514477`*^9, 3.7324508869242773`*^9, 
   3.7324511539585595`*^9, 3.732451344602622*^9, 3.7324514341815786`*^9, 
   3.7324517704001975`*^9, 3.7324522296708326`*^9, 3.732452330365833*^9, 
   3.7324523886068325`*^9, 3.732453769710118*^9, 3.732454202951622*^9, 
   3.7324548616083107`*^9, 3.7324685223887157`*^9, {3.7324685686883454`*^9, 
   3.732468584185895*^9}, 3.7324686179032664`*^9, 3.732468676973173*^9, {
   3.73246907267314*^9, 3.7324690951135197`*^9}, {3.732469157010903*^9, 
   3.7324691854557295`*^9}, 3.7324735572527504`*^9, 3.7324736376459074`*^9, 
   3.732473710336028*^9, 3.7324737553013167`*^9, {3.732473809699541*^9, 
   3.7324738362906713`*^9}, 3.7324739108747206`*^9, 3.7324739469083233`*^9, 
   3.7324742256457033`*^9, 3.732531654539098*^9, 3.7325317728030977`*^9, 
   3.732531823682098*^9, 3.732531892763098*^9, 3.7325331122291408`*^9, 
   3.732544005618099*^9, 3.7325446517670994`*^9, 3.732545857947899*^9, 
   3.732546187642299*^9, 3.732546306860699*^9, 3.732550188153206*^9, 
   3.7325503344914055`*^9, 3.7325505555792055`*^9, 3.7325507328950057`*^9, 
   3.7325509822840056`*^9, 3.7325510936154056`*^9, 3.7325512109648056`*^9, 
   3.7325513314120054`*^9, 3.7325514913030057`*^9, 3.732551621123006*^9, 
   3.7325517388692055`*^9, 3.7325518403670053`*^9, 3.7325519147300053`*^9, 
   3.7325519933854055`*^9, 3.7325521031642056`*^9, 3.7325521898004055`*^9, 
   3.7325522699466057`*^9, 3.7325523427862053`*^9, 3.7325524207282057`*^9, 
   3.7325524835538054`*^9, 3.732552583117406*^9, 3.7325527973596325`*^9, 
   3.732553415807838*^9, 3.732553786861822*^9, 3.7325552710094175`*^9, 
   3.7325553267522173`*^9, 3.7325553785226173`*^9, 3.7325554607410173`*^9, 
   3.7325555272434173`*^9, 3.7325556214534173`*^9, 3.732555743022817*^9, 
   3.732555839144617*^9, 3.7325559098028173`*^9, 3.732555960728817*^9, 
   3.7325560499222174`*^9, 3.732556652349017*^9, 3.732556727225417*^9, 
   3.732556818110012*^9, 3.732556921089483*^9, 3.732557004378355*^9, 
   3.7325571014332037`*^9, 3.7325572162797327`*^9, 3.7325572789195633`*^9, 
   3.732557337884741*^9, 3.7325574313878565`*^9, 3.732557553334101*^9, 
   3.7325577565756207`*^9, 3.732623048968195*^9, 3.732623288373395*^9, 
   3.732623629760601*^9, 3.732623726608368*^9, 3.7326238392147083`*^9, 
   3.732624147377821*^9, 3.7326322943243976`*^9, 3.732633536268361*^9, 
   3.732633592197953*^9, 3.732636455082241*^9, 3.7326365337041025`*^9, {
   3.732636582571989*^9, 3.732636597100442*^9}, 3.732636731415872*^9, 
   3.732637164978219*^9, {3.7326372089276133`*^9, 3.7326372665773783`*^9}, 
   3.7326373194436646`*^9, 3.732637366760395*^9, {3.7326374154342623`*^9, 
   3.7326374436980886`*^9}, 3.732637607372454*^9, 3.7326377558412995`*^9, 
   3.732637809318647*^9, 3.732639760865779*^9, 3.732639959725779*^9, 
   3.7326410390657787`*^9, 3.732643075335194*^9, 3.732643784245504*^9, 
   3.732644712306301*^9, 3.7326448051845875`*^9, 3.7329755905671377`*^9, 
   3.7329814685549455`*^9, 3.732981632711785*^9, 3.732986201569639*^9, 
   3.7329867845872984`*^9, 3.7329869457312984`*^9, 3.732987049360298*^9, 
   3.7329872974335985`*^9, 3.7329874259884987`*^9, 3.7329874804895983`*^9, 
   3.732987538006398*^9, 3.7329875727196984`*^9, 3.7329876585778985`*^9, 
   3.7329878260345583`*^9, 3.7329878935905685`*^9, {3.732987958286914*^9, 
   3.7329879800950937`*^9}, {3.732988113686452*^9, 3.73298813246833*^9}, 
   3.732988248093891*^9, 3.7329883948915696`*^9, 3.7329898084575605`*^9, 
   3.732989902288161*^9, 3.7329901533993435`*^9, 3.732990425581461*^9, 
   3.732990480084934*^9, 3.7329905370083337`*^9, {3.7329906557576275`*^9, 
   3.7329906838054323`*^9}, 3.7329910047265215`*^9, 3.7329911047985277`*^9, 
   3.7329911377328205`*^9, 3.7331599894609537`*^9, 3.733160122701277*^9, 
   3.733160772451209*^9, 3.7331618619381685`*^9, 3.7331619622151594`*^9, 
   3.733162022685003*^9, 3.7331622165949917`*^9, 3.733162288009392*^9, 
   3.7331637411678443`*^9, {3.733166218264903*^9, 3.7331662408654623`*^9}, 
   3.7331669678976765`*^9, 3.7331670957801275`*^9, 3.733167565293804*^9, 
   3.733167801356744*^9, 3.7331678915788603`*^9, 3.7331679425426493`*^9, 
   3.7331680770401344`*^9, 3.7331687870125694`*^9, 3.7331694787749677`*^9, 
   3.7332267354297276`*^9, 3.733229006425247*^9, 3.7332290788244867`*^9, 
   3.7332292311087136`*^9, 3.7332293180404058`*^9, 3.7332294268832893`*^9, 
   3.733229504541054*^9, 3.7332297123961835`*^9, 3.733229940065069*^9, 
   3.733230527530284*^9, 3.7332305946782837`*^9, 3.7332307343586836`*^9, 
   3.733487402463744*^9, 3.73348752363586*^9, 3.7334876156950645`*^9, {
   3.7334876521057053`*^9, 3.7334876627537704`*^9}, 3.7334877043369284`*^9, {
   3.733487779372431*^9, 3.7334878171612096`*^9}, 3.7334878506845617`*^9, 
   3.7334880926497555`*^9, 3.7334881835478444`*^9, 3.7334882753229623`*^9, 
   3.7334907673717513`*^9, 3.733498215321174*^9, 3.7334992234539776`*^9, 
   3.7334994578624163`*^9, 3.7334995205555134`*^9, 3.7334998143391013`*^9, 
   3.7334998756661015`*^9, 3.733504443956826*^9, 3.7398213248406944`*^9, 
   3.7398216276233816`*^9, {3.7398219328776197`*^9, 3.739821957111844*^9}, 
   3.739822555791134*^9, 3.7398228639874034`*^9, 3.7398769585715313`*^9, 
   3.7399010295751867`*^9, 3.739901129791787*^9, 3.739901169737787*^9, {
   3.739901200204187*^9, 3.7399012291929865`*^9}, 3.739901394867787*^9, 
   3.739902101998787*^9, 3.739902160668987*^9, 3.739902262045387*^9, 
   3.7399023464843864`*^9, 3.739902429318987*^9, 3.739902464349987*^9, 
   3.739902538882187*^9, 3.7399025902192497`*^9, 3.7399026359446015`*^9, {
   3.7399026702394657`*^9, 3.739902697309082*^9}, {3.739902802920543*^9, 
   3.7399028143792257`*^9}, 3.739902903931049*^9, 3.739902954719116*^9, 
   3.7399030211151175`*^9, 3.739903083642304*^9, 3.739903116355528*^9, 
   3.7399033049228783`*^9, 3.7399033889067345`*^9, 3.7399036639055967`*^9, 
   3.7399037738841968`*^9, 3.739903810662197*^9, {3.739903877140597*^9, 
   3.739903900480197*^9}, 3.739903937591797*^9, 3.739903993517397*^9, 
   3.7399040729915967`*^9, 3.739904144059597*^9, 3.739904300611797*^9, 
   3.7399045756151967`*^9, 3.739904614339797*^9, 3.7399046446279964`*^9, 
   3.7399046939053965`*^9, 3.739905406288397*^9, 3.7399054895403967`*^9, 
   3.739906077238597*^9, 3.739906198596797*^9, 3.7401350976329365`*^9, 
   3.7401378343109283`*^9, 3.7401379583039284`*^9, 3.740138180314928*^9, 
   3.7402212973552113`*^9, {3.740223802762559*^9, 3.7402238292145586`*^9}, 
   3.740223874552559*^9, 3.740223942697559*^9, 3.7402242872285585`*^9, 
   3.740224351072559*^9, 3.740224428817976*^9, 3.7402244987169647`*^9, 
   3.740224550020095*^9, 3.740224681932285*^9, 3.7402247515672474`*^9, 
   3.7402248240724974`*^9, 3.7402250011995554`*^9, 3.7402250366215553`*^9, 
   3.7402250928345556`*^9, 3.7402254509805555`*^9, 3.7402255744475555`*^9, 
   3.7402256080995555`*^9, 3.740225711707556*^9, 3.7402258215505557`*^9, 
   3.7402263740745554`*^9, 3.7402264079305553`*^9, 3.7402277243523273`*^9, 
   3.740227769445344*^9, 3.740228604875139*^9, 3.740228891684251*^9, 
   3.7402289386295557`*^9, 3.7402290191745005`*^9, 3.740229242877339*^9, {
   3.7402292748233385`*^9, 3.7402293310383387`*^9}, 3.740229364529339*^9, {
   3.740229405560339*^9, 3.740229419654339*^9}, 3.74023006450919*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"b1e02630-3614-4443-b5fa-747557771bfa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load EntityStores for local debugging purposes", "Subsection",
 CellChangeTimes->{{3.739876968829427*^9, 3.739876973620509*^9}, {
  3.7431661840801563`*^9, 
  3.7431661847981563`*^9}},ExpressionUUID->"8e7ab3e6-4736-4abb-8071-\
e9509ffa28d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LoadEntityStore", "[", 
   RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyFood\>\""}], "]"}], "//", 
  "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadEntityStore", "[", 
   RowBox[{"$MealTrackerCloudObject", ",", "\"\<MyMeal\>\""}], "]"}], "//", 
  "AbsoluteTiming"}]}], "Input",
 CellChangeTimes->{{3.731088598748966*^9, 3.731088638366927*^9}, {
  3.731089693340765*^9, 3.7310897583977647`*^9}, {3.732557463342877*^9, 
  3.7325574674625072`*^9}, {3.743165980070156*^9, 
  3.743165981069156*^9}},ExpressionUUID->"eca1881f-caf2-4e98-93c1-\
799c3c5676c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.40714411423831937`", ",", 
   RowBox[{"{", "\<\"MyFood\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7310886399880896`*^9, {3.7310896850097647`*^9, 3.731089762156765*^9}, 
   3.7311654641995897`*^9, 3.7312427062297697`*^9, 3.7312430095915203`*^9, 
   3.731243136129173*^9, 3.7312434609506516`*^9, 3.7312436132548804`*^9, 
   3.7312437244349976`*^9, 3.7312442572616386`*^9, 3.731244466519638*^9, 
   3.7312447011216383`*^9, 3.7312451291174655`*^9, 3.731245188618415*^9, 
   3.7312454911806684`*^9, 3.7312473968472915`*^9, 3.731766711377002*^9, 
   3.7317817947987566`*^9, 3.7317827092835064`*^9, 3.732451287630925*^9, 
   3.7324538603071766`*^9, 3.7325552858558173`*^9, 3.7325553425840173`*^9, 
   3.7325553946372175`*^9, 3.732555477221817*^9, 3.7325555435142174`*^9, 
   3.7325556380120173`*^9, 3.7325557604208174`*^9, 3.732555855578017*^9, 
   3.732555925937817*^9, 3.732555976729417*^9, 3.7325560654054174`*^9, 
   3.7325566686512175`*^9, 3.732556743938817*^9, 3.7325568368533897`*^9, 
   3.732556937658986*^9, 3.7325570204109807`*^9, 3.7325571183130283`*^9, 
   3.7325572331595573`*^9, 3.7325572954779816`*^9, 3.7325573546705627`*^9, 
   3.732557449479782*^9, 3.732557569625015*^9, 3.7326402781717787`*^9, {
   3.732641017218779*^9, 3.732641062502779*^9}, 3.732643076915826*^9, 
   3.7329909276858177`*^9, 3.73348899758925*^9, 3.733499641321436*^9, 
   3.7398228798939033`*^9, {3.739876963564533*^9, 3.7398769756866827`*^9}, {
   3.7402212864023066`*^9, 3.7402212980401425`*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"1751f442-7314-4553-9b0b-151ee3ca349f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.25404395120688494`", ",", 
   RowBox[{"{", "\<\"MyMeal\"\>", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7310886399880896`*^9, {3.7310896850097647`*^9, 3.731089762156765*^9}, 
   3.7311654641995897`*^9, 3.7312427062297697`*^9, 3.7312430095915203`*^9, 
   3.731243136129173*^9, 3.7312434609506516`*^9, 3.7312436132548804`*^9, 
   3.7312437244349976`*^9, 3.7312442572616386`*^9, 3.731244466519638*^9, 
   3.7312447011216383`*^9, 3.7312451291174655`*^9, 3.731245188618415*^9, 
   3.7312454911806684`*^9, 3.7312473968472915`*^9, 3.731766711377002*^9, 
   3.7317817947987566`*^9, 3.7317827092835064`*^9, 3.732451287630925*^9, 
   3.7324538603071766`*^9, 3.7325552858558173`*^9, 3.7325553425840173`*^9, 
   3.7325553946372175`*^9, 3.732555477221817*^9, 3.7325555435142174`*^9, 
   3.7325556380120173`*^9, 3.7325557604208174`*^9, 3.732555855578017*^9, 
   3.732555925937817*^9, 3.732555976729417*^9, 3.7325560654054174`*^9, 
   3.7325566686512175`*^9, 3.732556743938817*^9, 3.7325568368533897`*^9, 
   3.732556937658986*^9, 3.7325570204109807`*^9, 3.7325571183130283`*^9, 
   3.7325572331595573`*^9, 3.7325572954779816`*^9, 3.7325573546705627`*^9, 
   3.732557449479782*^9, 3.732557569625015*^9, 3.7326402781717787`*^9, {
   3.732641017218779*^9, 3.732641062502779*^9}, 3.732643076915826*^9, 
   3.7329909276858177`*^9, 3.73348899758925*^9, 3.733499641321436*^9, 
   3.7398228798939033`*^9, {3.739876963564533*^9, 3.7398769756866827`*^9}, {
   3.7402212864023066`*^9, 3.7402212982951174`*^9}},
 CellLabel->"Out[61]=",ExpressionUUID->"6adb6508-bd7a-4ab7-8507-657bba381e8a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{944, 982},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 96, "Title",ExpressionUUID->"b1dcdd09-a8e2-4035-935a-a83d6bcca31e"],
Cell[CellGroupData[{
Cell[774, 29, 239, 4, 67, "Section",ExpressionUUID->"0063112b-d067-4127-972c-91e346c7d7de"],
Cell[1016, 35, 444, 10, 56, "Text",ExpressionUUID->"4f2e33b5-f536-43ab-84c8-2ef337990a2e"],
Cell[CellGroupData[{
Cell[1485, 49, 307, 5, 28, "Input",ExpressionUUID->"ccd8beae-f565-493a-baf3-1bdf4cc50a12"],
Cell[1795, 56, 524, 11, 35, "Output",ExpressionUUID->"04bafe26-906a-4024-86ee-105f70a7b7ab"]
}, Open  ]],
Cell[2334, 70, 264, 5, 28, "Input",ExpressionUUID->"72cb6b6f-6a11-47b8-811b-6f8cb6ca280c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2635, 80, 234, 4, 67, "Section",ExpressionUUID->"24597c56-e243-4c42-a218-d096cb3605c6"],
Cell[2872, 86, 239, 6, 34, "Text",ExpressionUUID->"f4d54ec2-0e0d-4023-bccb-8b0b9216c2e4"],
Cell[CellGroupData[{
Cell[3136, 96, 278, 5, 53, "Subsection",ExpressionUUID->"2379eb64-9608-425c-83e9-89b0b943efa9"],
Cell[CellGroupData[{
Cell[3439, 105, 256, 4, 44, "Subsubsection",ExpressionUUID->"997b3107-c1be-44e9-950a-ebc45015cf5b"],
Cell[3698, 111, 1655, 32, 188, "Input",ExpressionUUID->"69f99c9f-97ab-4781-9762-c9f1aa1ee8cb"]
}, Closed]],
Cell[CellGroupData[{
Cell[5390, 148, 330, 6, 36, "Subsubsection",ExpressionUUID->"7a7080c4-6e31-44cd-87cd-1b17aae5bd05"],
Cell[5723, 156, 288, 6, 48, "Input",ExpressionUUID->"f686910a-17a1-4216-9849-4ba9e94d4ad1"],
Cell[CellGroupData[{
Cell[6036, 166, 303, 5, 31, "Input",ExpressionUUID->"7b746ef9-a16c-420c-bcc1-1822cea63880"],
Cell[6342, 173, 328, 5, 32, "Output",ExpressionUUID->"055e7107-7209-4bdf-ae8c-1b50e7eb286d"]
}, Open  ]],
Cell[6685, 181, 323, 7, 28, "Input",ExpressionUUID->"4daf345c-b3a5-48f9-a272-eb50f42e49fa"],
Cell[CellGroupData[{
Cell[7033, 192, 454, 10, 48, "Input",ExpressionUUID->"da76f5ab-7f03-400b-831f-cb7b65345841"],
Cell[7490, 204, 607, 10, 32, "Output",ExpressionUUID->"6a60587a-cbc8-42fc-8c53-5555c47a3a6b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8146, 220, 202, 3, 44, "Subsubsection",ExpressionUUID->"15d75e51-7618-4a35-8bde-70084de35121"],
Cell[8351, 225, 5226, 111, 310, "Input",ExpressionUUID->"49169474-cd46-4e70-a87e-2cc3665ab2d3"],
Cell[13580, 338, 892, 24, 67, "Input",ExpressionUUID->"2005e3d7-44f5-4d8d-ad5c-45f0813164ad"],
Cell[CellGroupData[{
Cell[14497, 366, 1506, 33, 105, "Input",ExpressionUUID->"05cd6cb5-3a28-473c-933d-19e42d1dc69a"],
Cell[16006, 401, 463, 7, 32, "Output",ExpressionUUID->"ac4fad8e-74c3-4864-970b-a6e75db2639c"],
Cell[16472, 410, 359, 5, 32, "Output",ExpressionUUID->"d39e4ed6-f5b6-4a64-b7f7-b540fc97f002"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[16880, 421, 171, 3, 36, "Subsubsection",ExpressionUUID->"ff530730-c89c-439d-8b62-9a2fd074aab4"],
Cell[CellGroupData[{
Cell[17076, 428, 739, 15, 88, "Input",ExpressionUUID->"3106de44-cf70-44e1-8425-230e83412a51"],
Cell[17818, 445, 344, 6, 32, "Output",ExpressionUUID->"4c4f4444-0b58-441c-aa67-c4e6a8c12ec6"],
Cell[18165, 453, 314, 5, 32, "Output",ExpressionUUID->"bf24addb-04b7-46d5-a740-53c8c02d6120"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18516, 463, 267, 4, 28, "Input",ExpressionUUID->"6ae0c91e-56b1-4166-a433-64ef5093ae6c"],
Cell[18786, 469, 251, 3, 32, "Output",ExpressionUUID->"9db052c8-0f59-41b7-ba1a-eef1d707beb9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19086, 478, 182, 3, 44, "Subsubsection",ExpressionUUID->"33763dc1-f76b-4a6e-b037-6a18b191418a"],
Cell[19271, 483, 288, 6, 48, "Input",ExpressionUUID->"d0f7dc38-64ed-4a23-8b61-4fd46ab459cd"],
Cell[CellGroupData[{
Cell[19584, 493, 320, 6, 31, "Input",ExpressionUUID->"68090166-7b26-4df4-be6d-36004801a8f4"],
Cell[19907, 501, 837, 17, 35, "Output",ExpressionUUID->"b24a23c5-fb21-4498-8256-d56929543bad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20781, 523, 297, 5, 31, "Input",ExpressionUUID->"4fe2df3c-7cc6-46fa-8892-42262adbd61a"],
Cell[21081, 530, 428, 6, 32, "Output",ExpressionUUID->"d0f9b0cd-c838-4f7a-a7c1-61af8cccb4fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21546, 541, 197, 3, 28, "Input",ExpressionUUID->"b53cdc25-8bdd-43ed-a37b-ea2263033acd"],
Cell[21746, 546, 201, 3, 32, "Output",ExpressionUUID->"8d4efec4-5218-444d-8e54-c212c59117b7"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[22008, 556, 278, 5, 37, "Subsection",ExpressionUUID->"9c35b16c-2126-46e2-ae0c-3601efb6abd3"],
Cell[CellGroupData[{
Cell[22311, 565, 204, 3, 44, "Subsubsection",ExpressionUUID->"75faa1dc-16c2-400e-9164-2d57fcf74885"],
Cell[22518, 570, 219, 5, 34, "Text",ExpressionUUID->"2bb3554e-1f4c-4091-8f4a-26463f99053f"],
Cell[CellGroupData[{
Cell[22762, 579, 880, 20, 126, "Input",ExpressionUUID->"f97bc631-d441-4c16-b4e9-07cf6bb0f879"],
Cell[23645, 601, 606, 10, 32, "Output",ExpressionUUID->"a8b8282d-302c-495e-a03d-9bb3766864ab"],
Cell[24254, 613, 575, 9, 32, "Output",ExpressionUUID->"4ba94e2a-5204-4693-a7bf-ff17e55b35e9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[24878, 628, 233, 5, 36, "Subsubsection",ExpressionUUID->"d65ccdef-b74c-46ba-b9a0-dd0aa552285f"],
Cell[25114, 635, 288, 6, 48, "Input",ExpressionUUID->"6aa19c71-62d9-409a-93b5-6c167a7a9b99"],
Cell[CellGroupData[{
Cell[25427, 645, 349, 5, 31, "Input",ExpressionUUID->"44674947-b396-446a-baa1-5ac70c9aa139"],
Cell[25779, 652, 508, 8, 32, "Output",ExpressionUUID->"6a9c14c5-13b8-43aa-bd4b-01333765fe4d"]
}, Open  ]],
Cell[26302, 663, 351, 8, 28, "Input",ExpressionUUID->"ac3553d2-871b-4570-97de-b7b9a49c7da2"],
Cell[CellGroupData[{
Cell[26678, 675, 480, 11, 48, "Input",ExpressionUUID->"2ccb67b3-61d5-4f71-a8ee-80515d194bf8"],
Cell[27161, 688, 588, 10, 32, "Output",ExpressionUUID->"9a49ad03-9c40-4608-bfc2-a30f61edd605"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27786, 703, 749, 15, 88, "Input",ExpressionUUID->"17f70711-34ee-4dd5-8711-3a8a3c44f737"],
Cell[28538, 720, 569, 9, 32, "Output",ExpressionUUID->"a84d2aaa-c240-4dbd-8a1a-28a3055270ab"],
Cell[29110, 731, 539, 8, 32, "Output",ExpressionUUID->"d52ee976-dfd4-4186-92a3-e640c81ffeb2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29698, 745, 180, 3, 44, "Subsubsection",ExpressionUUID->"556a86cc-dbea-4e9d-9771-f009512d9c5a"],
Cell[29881, 750, 288, 6, 48, "Input",ExpressionUUID->"e3800d29-48b3-4082-9dc7-9a7e8d8e3ff5"],
Cell[CellGroupData[{
Cell[30194, 760, 327, 7, 31, "Input",ExpressionUUID->"2af9c0c2-1231-4f16-8896-ad1a68071542"],
Cell[30524, 769, 772, 16, 35, "Output",ExpressionUUID->"7594eaef-3c49-447b-9632-f96bccba0a60"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[31369, 793, 261, 4, 53, "Section",ExpressionUUID->"dcecef7e-512a-49b3-9050-1cd95f4e7ecf"],
Cell[CellGroupData[{
Cell[31655, 801, 233, 4, 53, "Subsection",ExpressionUUID->"ffbbf896-215d-46c1-87de-a809cb2d846d"],
Cell[31891, 807, 310, 7, 56, "Text",ExpressionUUID->"aee06e4e-4cd4-4e2b-aa0a-18d0aad1ed6f"],
Cell[32204, 816, 2573, 60, 276, "Input",ExpressionUUID->"51096657-1413-499c-acd4-bcd9cca8b0fd"],
Cell[CellGroupData[{
Cell[34802, 880, 177, 3, 44, "Subsubsection",ExpressionUUID->"f8aea494-e326-4381-9310-11dca5348d31"],
Cell[CellGroupData[{
Cell[35004, 887, 2678, 68, 238, "Input",ExpressionUUID->"b982ab53-81d4-4c29-8e44-9b014c9a0371"],
Cell[37685, 957, 48256, 1238, 682, "Output",ExpressionUUID->"ef5e48f2-2653-4678-b450-9ef9cd70a39c"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[86002, 2202, 222, 4, 37, "Subsection",ExpressionUUID->"8ab35e94-b631-4e0f-b745-bd9ce137cd62"],
Cell[CellGroupData[{
Cell[86249, 2210, 2201, 55, 257, "Input",ExpressionUUID->"1611974b-060d-48f1-8647-02a872d1cf5b"],
Cell[88453, 2267, 45333, 842, 71, "Output",ExpressionUUID->"392a5ffb-67c2-4726-92c2-528d954efb44"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[133835, 3115, 276, 4, 37, "Subsection",ExpressionUUID->"64e89af6-405f-4e9e-9e4f-ea982d07f7bc"],
Cell[134114, 3121, 215, 5, 31, "Text",ExpressionUUID->"e95781ee-c59d-4696-ac5d-e754116b398e"],
Cell[CellGroupData[{
Cell[134354, 3130, 2230, 56, 238, "Input",ExpressionUUID->"50767d1e-7247-4ef3-a7af-d594d5f6595f"],
Cell[136587, 3188, 10473, 208, 71, "Output",ExpressionUUID->"04c21572-02b8-4b78-b294-8a9bff8051c6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[147109, 3402, 168, 3, 37, "Subsection",ExpressionUUID->"7aadde16-ca7f-495f-abd1-e4ab63ad78f6"],
Cell[CellGroupData[{
Cell[147302, 3409, 2131, 54, 238, "Input",ExpressionUUID->"da6b8d16-1cb9-4e68-8118-a58fa6c51602"],
Cell[149436, 3465, 37830, 693, 71, "Output",ExpressionUUID->"2af40c24-75f6-41cd-9182-bffe4366461d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[187315, 4164, 216, 4, 37, "Subsection",ExpressionUUID->"f3ea7d88-016c-41bb-b2d3-4aa6b9c9960f"],
Cell[CellGroupData[{
Cell[187556, 4172, 2585, 59, 238, "Input",ExpressionUUID->"98b52fe9-c465-4c03-848c-d487763b166e"],
Cell[190144, 4233, 29141, 580, 71, "Output",ExpressionUUID->"13c96d25-570c-4e2d-af70-626f8a481111"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[219334, 4819, 273, 4, 37, "Subsection",ExpressionUUID->"50b45983-aa91-4015-9e3e-91a4cf749c1d"],
Cell[CellGroupData[{
Cell[219632, 4827, 2640, 59, 238, "Input",ExpressionUUID->"24f38925-4729-4f07-9895-f2a47d3c58b8"],
Cell[222275, 4888, 50529, 1028, 71, "Output",ExpressionUUID->"430f711c-9180-45be-abe2-41645b4a5af8"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[272865, 5923, 295, 5, 53, "Section",ExpressionUUID->"10a0e92c-f725-46f4-8664-c5c8ba638922"],
Cell[CellGroupData[{
Cell[273185, 5932, 336, 5, 53, "Subsection",ExpressionUUID->"60aebd19-5e55-454a-9043-88225d04b442"],
Cell[CellGroupData[{
Cell[273546, 5941, 169, 3, 44, "Subsubsection",ExpressionUUID->"5c5d466a-41c6-4fd1-98a9-7f7d5e8bb0fc"],
Cell[CellGroupData[{
Cell[273740, 5948, 519, 13, 67, "Input",ExpressionUUID->"9e6b7e9c-a835-4610-9bd0-101859d565eb"],
Cell[274262, 5963, 14033, 285, 71, "Output",ExpressionUUID->"e7489cab-22f7-4c07-b22e-316c3e52154b"]
}, Open  ]],
Cell[288310, 6251, 154, 3, 28, "Input",ExpressionUUID->"f608bf60-16d7-44fd-acf8-98d31a5e6b9b"]
}, Closed]],
Cell[CellGroupData[{
Cell[288501, 6259, 161, 3, 36, "Subsubsection",ExpressionUUID->"0a42ea05-fe86-408f-8299-f5dbe3dbf987"],
Cell[CellGroupData[{
Cell[288687, 6266, 3822, 87, 226, "Input",ExpressionUUID->"8fe6237e-909e-4125-b100-063af917a367"],
Cell[CellGroupData[{
Cell[292534, 6357, 243, 4, 22, "Print",ExpressionUUID->"62211682-641f-4cc3-945f-452b2dd25fa9"],
Cell[292780, 6363, 227, 4, 22, "Print",ExpressionUUID->"da26fdec-6eb6-4d9e-8502-ba8b850b8922"]
}, Open  ]],
Cell[293022, 6370, 8313, 200, 167, "Output",ExpressionUUID->"50f0c3ce-1971-4d19-8c9e-d9d7de48c37a"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[301396, 6577, 290, 7, 37, "Subsection",ExpressionUUID->"02392700-844b-484a-94c8-fe0339beb3d8"],
Cell[CellGroupData[{
Cell[301711, 6588, 643, 15, 50, "Input",ExpressionUUID->"2ded45e5-14c2-499e-a559-258ceccd21c3"],
Cell[302357, 6605, 594, 15, 35, "Output",ExpressionUUID->"231b24a4-c1c8-45b6-929a-a87b6180fd1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302988, 6625, 697, 16, 50, "Input",ExpressionUUID->"6d3396e6-fda0-4501-a4f9-bc25abcaa26e"],
Cell[303688, 6643, 614, 15, 35, "Output",ExpressionUUID->"27b0fb2f-c003-48ff-b37b-fbe114332cb1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[304351, 6664, 326, 6, 37, "Subsection",ExpressionUUID->"c2989209-e7d3-4755-925b-ab2d09f9990b"],
Cell[CellGroupData[{
Cell[304702, 6674, 4053, 68, 126, "Input",ExpressionUUID->"5ba32d99-31b0-4272-b151-e49cd9eca40d"],
Cell[308758, 6744, 30290, 528, 431, "Output",ExpressionUUID->"b1e02630-3614-4443-b5fa-747557771bfa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[339097, 7278, 247, 4, 53, "Subsection",ExpressionUUID->"8e7ab3e6-4736-4abb-8071-e9509ffa28d5"],
Cell[CellGroupData[{
Cell[339369, 7286, 611, 13, 53, "Input",ExpressionUUID->"eca1881f-caf2-4e98-93c1-799c3c5676c5"],
Cell[339983, 7301, 1614, 24, 32, "Output",ExpressionUUID->"1751f442-7314-4553-9b0b-151ee3ca349f"],
Cell[341600, 7327, 1614, 24, 32, "Output",ExpressionUUID->"6adb6508-bd7a-4ab7-8507-657bba381e8a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

